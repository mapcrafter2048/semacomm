#blocked = #ttg.blocked<{sizePerThread = [1, 4], threadsPerWarp = [1, 32], warpsPerCTA = [8, 1], order = [1, 0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [8, 4], warpsPerCTA = [1, 8], order = [0, 1]}>
#loc = loc("results/my_experiment/torchinductor_cache_0/sx/csx4xk5b2z3osj2theivxgr52hc6r2e274t2hx3mv7akolyy3hpi.py":18:0)
#loc1 = loc(unknown)
#loc21 = loc("results/my_experiment/torchinductor_cache_0/sx/csx4xk5b2z3osj2theivxgr52hc6r2e274t2hx3mv7akolyy3hpi.py":44:25)
#loc28 = loc(callsite(#loc1 at #loc21))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 8 : i32, ttg.target = "cuda:86", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused__to_copy_mean_pow_3(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("results/my_experiment/torchinductor_cache_0/sx/csx4xk5b2z3osj2theivxgr52hc6r2e274t2hx3mv7akolyy3hpi.py":18:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("results/my_experiment/torchinductor_cache_0/sx/csx4xk5b2z3osj2theivxgr52hc6r2e274t2hx3mv7akolyy3hpi.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("results/my_experiment/torchinductor_cache_0/sx/csx4xk5b2z3osj2theivxgr52hc6r2e274t2hx3mv7akolyy3hpi.py":18:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("results/my_experiment/torchinductor_cache_0/sx/csx4xk5b2z3osj2theivxgr52hc6r2e274t2hx3mv7akolyy3hpi.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<8x128xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<8x128xbf16, #blocked> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<12> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<3456> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<96> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<96> : tensor<1x128xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 1 : i32} : tensor<8xi32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xi32, #blocked> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 1 : i32} : tensor<8xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<8x1xi32, #blocked1> loc(#loc4)
    %6 = tt.splat %1 : i32 -> tensor<8x1xi32, #blocked> loc(#loc5)
    %7 = tt.splat %1 : i32 -> tensor<8x1xi32, #blocked1> loc(#loc5)
    %8 = arith.addi %6, %4 : tensor<8x1xi32, #blocked> loc(#loc5)
    %9 = arith.addi %7, %5 : tensor<8x1xi32, #blocked1> loc(#loc5)
    %10 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc6)
    %11 = tt.expand_dims %10 {axis = 0 : i32} : tensor<128xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x128xi32, #blocked> loc(#loc6)
    %12 = arith.remsi %8, %cst_1 : tensor<8x1xi32, #blocked> loc(#loc7)
    %13 = arith.divsi %8, %cst_1 : tensor<8x1xi32, #blocked> loc(#loc8)
    %14 = arith.cmpi slt, %11, %cst_4 : tensor<1x128xi32, #blocked> loc(#loc9)
    %15 = arith.muli %12, %cst_3 : tensor<8x1xi32, #blocked> loc(#loc10)
    %16 = tt.broadcast %11 : tensor<1x128xi32, #blocked> -> tensor<8x128xi32, #blocked> loc(#loc11)
    %17 = tt.broadcast %15 : tensor<8x1xi32, #blocked> -> tensor<8x128xi32, #blocked> loc(#loc11)
    %18 = arith.addi %16, %17 : tensor<8x128xi32, #blocked> loc(#loc11)
    %19 = arith.muli %13, %cst_2 : tensor<8x1xi32, #blocked> loc(#loc12)
    %20 = tt.broadcast %19 : tensor<8x1xi32, #blocked> -> tensor<8x128xi32, #blocked> loc(#loc13)
    %21 = arith.addi %18, %20 : tensor<8x128xi32, #blocked> loc(#loc13)
    %22 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<8x128x!tt.ptr<bf16>, #blocked> loc(#loc14)
    %23 = tt.addptr %22, %21 : tensor<8x128x!tt.ptr<bf16>, #blocked>, tensor<8x128xi32, #blocked> loc(#loc14)
    %24 = tt.broadcast %14 : tensor<1x128xi1, #blocked> -> tensor<8x128xi1, #blocked> loc(#loc15)
    %25 = tt.load %23, %24, %cst_0 evictionPolicy = evict_first : tensor<8x128x!tt.ptr<bf16>, #blocked> loc(#loc15)
    %26 = arith.extf %25 : tensor<8x128xbf16, #blocked> to tensor<8x128xf32, #blocked> loc(#loc16)
    %27 = arith.mulf %26, %26 : tensor<8x128xf32, #blocked> loc(#loc17)
    %28 = arith.addf %27, %cst : tensor<8x128xf32, #blocked> loc(#loc18)
    %29 = arith.select %24, %28, %cst : tensor<8x128xi1, #blocked>, tensor<8x128xf32, #blocked> loc(#loc19)
    %30 = "tt.reduce"(%29) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc21)), %arg5: f32 loc(callsite(#loc1 at #loc21))):
      %35 = arith.addf %arg4, %arg5 : f32 loc(#loc30)
      tt.reduce.return %35 : f32 loc(#loc27)
    }) : (tensor<8x128xf32, #blocked>) -> tensor<8xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc27)
    %31 = ttg.convert_layout %30 : tensor<8xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<8xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc23)
    %32 = tt.expand_dims %31 {axis = 1 : i32} : tensor<8xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<8x1xf32, #blocked1> loc(#loc23)
    %33 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>, #blocked1> loc(#loc24)
    %34 = tt.addptr %33, %9 : tensor<8x1x!tt.ptr<f32>, #blocked1>, tensor<8x1xi32, #blocked1> loc(#loc24)
    tt.store %34, %32 : tensor<8x1x!tt.ptr<f32>, #blocked1> loc(#loc25)
    tt.return loc(#loc26)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("results/my_experiment/torchinductor_cache_0/sx/csx4xk5b2z3osj2theivxgr52hc6r2e274t2hx3mv7akolyy3hpi.py":23:28)
#loc3 = loc("results/my_experiment/torchinductor_cache_0/sx/csx4xk5b2z3osj2theivxgr52hc6r2e274t2hx3mv7akolyy3hpi.py":23:33)
#loc4 = loc("results/my_experiment/torchinductor_cache_0/sx/csx4xk5b2z3osj2theivxgr52hc6r2e274t2hx3mv7akolyy3hpi.py":24:44)
#loc5 = loc("results/my_experiment/torchinductor_cache_0/sx/csx4xk5b2z3osj2theivxgr52hc6r2e274t2hx3mv7akolyy3hpi.py":24:23)
#loc6 = loc("results/my_experiment/torchinductor_cache_0/sx/csx4xk5b2z3osj2theivxgr52hc6r2e274t2hx3mv7akolyy3hpi.py":26:37)
#loc7 = loc("results/my_experiment/torchinductor_cache_0/sx/csx4xk5b2z3osj2theivxgr52hc6r2e274t2hx3mv7akolyy3hpi.py":28:19)
#loc8 = loc("results/my_experiment/torchinductor_cache_0/sx/csx4xk5b2z3osj2theivxgr52hc6r2e274t2hx3mv7akolyy3hpi.py":29:19)
#loc9 = loc("results/my_experiment/torchinductor_cache_0/sx/csx4xk5b2z3osj2theivxgr52hc6r2e274t2hx3mv7akolyy3hpi.py":34:29)
#loc10 = loc("results/my_experiment/torchinductor_cache_0/sx/csx4xk5b2z3osj2theivxgr52hc6r2e274t2hx3mv7akolyy3hpi.py":38:44)
#loc11 = loc("results/my_experiment/torchinductor_cache_0/sx/csx4xk5b2z3osj2theivxgr52hc6r2e274t2hx3mv7akolyy3hpi.py":38:41)
#loc12 = loc("results/my_experiment/torchinductor_cache_0/sx/csx4xk5b2z3osj2theivxgr52hc6r2e274t2hx3mv7akolyy3hpi.py":38:54)
#loc13 = loc("results/my_experiment/torchinductor_cache_0/sx/csx4xk5b2z3osj2theivxgr52hc6r2e274t2hx3mv7akolyy3hpi.py":38:49)
#loc14 = loc("results/my_experiment/torchinductor_cache_0/sx/csx4xk5b2z3osj2theivxgr52hc6r2e274t2hx3mv7akolyy3hpi.py":38:34)
#loc15 = loc("results/my_experiment/torchinductor_cache_0/sx/csx4xk5b2z3osj2theivxgr52hc6r2e274t2hx3mv7akolyy3hpi.py":38:59)
#loc16 = loc("results/my_experiment/torchinductor_cache_0/sx/csx4xk5b2z3osj2theivxgr52hc6r2e274t2hx3mv7akolyy3hpi.py":38:113)
#loc17 = loc("results/my_experiment/torchinductor_cache_0/sx/csx4xk5b2z3osj2theivxgr52hc6r2e274t2hx3mv7akolyy3hpi.py":40:22)
#loc18 = loc("results/my_experiment/torchinductor_cache_0/sx/csx4xk5b2z3osj2theivxgr52hc6r2e274t2hx3mv7akolyy3hpi.py":42:23)
#loc19 = loc("results/my_experiment/torchinductor_cache_0/sx/csx4xk5b2z3osj2theivxgr52hc6r2e274t2hx3mv7akolyy3hpi.py":43:40)
#loc20 = loc("/home/utka/proj/evs/vlm/lib/python3.12/site-packages/triton/language/standard.py":286:36)
#loc22 = loc("/home/utka/proj/evs/vlm/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc23 = loc("results/my_experiment/torchinductor_cache_0/sx/csx4xk5b2z3osj2theivxgr52hc6r2e274t2hx3mv7akolyy3hpi.py":44:28)
#loc24 = loc("results/my_experiment/torchinductor_cache_0/sx/csx4xk5b2z3osj2theivxgr52hc6r2e274t2hx3mv7akolyy3hpi.py":45:25)
#loc25 = loc("results/my_experiment/torchinductor_cache_0/sx/csx4xk5b2z3osj2theivxgr52hc6r2e274t2hx3mv7akolyy3hpi.py":45:36)
#loc26 = loc("results/my_experiment/torchinductor_cache_0/sx/csx4xk5b2z3osj2theivxgr52hc6r2e274t2hx3mv7akolyy3hpi.py":45:4)
#loc27 = loc(callsite(#loc20 at #loc21))
#loc29 = loc(callsite(#loc22 at #loc20))
#loc30 = loc(callsite(#loc29 at #loc21))
