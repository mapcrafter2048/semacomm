#blocked = #ttg.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("results/my_experiment/torchinductor_cache_0/wb/cwbsgnvxuflvlxf4z65xl2s2poupxyik56pl6cxslg3m7xfgs7dc.py":18:0)
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 4 : i32, ttg.target = "cuda:86", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_clone_3(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("results/my_experiment/torchinductor_cache_0/wb/cwbsgnvxuflvlxf4z65xl2s2poupxyik56pl6cxslg3m7xfgs7dc.py":18:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("results/my_experiment/torchinductor_cache_0/wb/cwbsgnvxuflvlxf4z65xl2s2poupxyik56pl6cxslg3m7xfgs7dc.py":18:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("results/my_experiment/torchinductor_cache_0/wb/cwbsgnvxuflvlxf4z65xl2s2poupxyik56pl6cxslg3m7xfgs7dc.py":18:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("results/my_experiment/torchinductor_cache_0/wb/cwbsgnvxuflvlxf4z65xl2s2poupxyik56pl6cxslg3m7xfgs7dc.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<-1.000000e+00> : tensor<128xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<128xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<128xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<512> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<18> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<9> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<2> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<4608> : tensor<128xi32, #blocked> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_6 : tensor<128xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %4, %cst_5 : tensor<128xi32, #blocked> loc(#loc7)
    %7 = arith.divsi %4, %cst_5 : tensor<128xi32, #blocked> loc(#loc8)
    %8 = arith.remsi %7, %cst_4 : tensor<128xi32, #blocked> loc(#loc9)
    %9 = arith.divsi %4, %cst_3 : tensor<128xi32, #blocked> loc(#loc10)
    %10 = arith.muli %9, %cst_5 : tensor<128xi32, #blocked> loc(#loc11)
    %11 = arith.addi %6, %10 : tensor<128xi32, #blocked> loc(#loc12)
    %12 = arith.muli %8, %cst_2 : tensor<128xi32, #blocked> loc(#loc13)
    %13 = arith.addi %11, %12 : tensor<128xi32, #blocked> loc(#loc14)
    %14 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<128x!tt.ptr<bf16>, #blocked> loc(#loc15)
    %15 = tt.addptr %14, %13 : tensor<128x!tt.ptr<bf16>, #blocked>, tensor<128xi32, #blocked> loc(#loc15)
    %16 = tt.load %15, %5 : tensor<128x!tt.ptr<bf16>, #blocked> loc(#loc16)
    %17 = arith.extf %16 : tensor<128xbf16, #blocked> to tensor<128xf32, #blocked> loc(#loc17)
    %18 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<128x!tt.ptr<bf16>, #blocked> loc(#loc18)
    %19 = tt.addptr %18, %4 : tensor<128x!tt.ptr<bf16>, #blocked>, tensor<128xi32, #blocked> loc(#loc18)
    %20 = tt.load %19, %5 : tensor<128x!tt.ptr<bf16>, #blocked> loc(#loc19)
    %21 = arith.extf %20 : tensor<128xbf16, #blocked> to tensor<128xf32, #blocked> loc(#loc20)
    %22 = arith.cmpf ogt, %21, %cst_1 : tensor<128xf32, #blocked> loc(#loc21)
    %23 = arith.select %22, %cst_0, %cst : tensor<128xi1, #blocked>, tensor<128xf32, #blocked> loc(#loc22)
    %24 = arith.subf %23, %17 : tensor<128xf32, #blocked> loc(#loc23)
    %25 = arith.addf %17, %24 : tensor<128xf32, #blocked> loc(#loc24)
    %26 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<128x!tt.ptr<bf16>, #blocked> loc(#loc25)
    %27 = tt.addptr %26, %4 : tensor<128x!tt.ptr<bf16>, #blocked>, tensor<128xi32, #blocked> loc(#loc25)
    %28 = arith.truncf %25 : tensor<128xf32, #blocked> to tensor<128xbf16, #blocked> loc(#loc26)
    tt.store %27, %28, %5 : tensor<128x!tt.ptr<bf16>, #blocked> loc(#loc26)
    tt.return loc(#loc27)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("results/my_experiment/torchinductor_cache_0/wb/cwbsgnvxuflvlxf4z65xl2s2poupxyik56pl6cxslg3m7xfgs7dc.py":20:28)
#loc3 = loc("results/my_experiment/torchinductor_cache_0/wb/cwbsgnvxuflvlxf4z65xl2s2poupxyik56pl6cxslg3m7xfgs7dc.py":20:33)
#loc4 = loc("results/my_experiment/torchinductor_cache_0/wb/cwbsgnvxuflvlxf4z65xl2s2poupxyik56pl6cxslg3m7xfgs7dc.py":21:36)
#loc5 = loc("results/my_experiment/torchinductor_cache_0/wb/cwbsgnvxuflvlxf4z65xl2s2poupxyik56pl6cxslg3m7xfgs7dc.py":21:23)
#loc6 = loc("results/my_experiment/torchinductor_cache_0/wb/cwbsgnvxuflvlxf4z65xl2s2poupxyik56pl6cxslg3m7xfgs7dc.py":22:21)
#loc7 = loc("results/my_experiment/torchinductor_cache_0/wb/cwbsgnvxuflvlxf4z65xl2s2poupxyik56pl6cxslg3m7xfgs7dc.py":23:19)
#loc8 = loc("results/my_experiment/torchinductor_cache_0/wb/cwbsgnvxuflvlxf4z65xl2s2poupxyik56pl6cxslg3m7xfgs7dc.py":24:21)
#loc9 = loc("results/my_experiment/torchinductor_cache_0/wb/cwbsgnvxuflvlxf4z65xl2s2poupxyik56pl6cxslg3m7xfgs7dc.py":24:26)
#loc10 = loc("results/my_experiment/torchinductor_cache_0/wb/cwbsgnvxuflvlxf4z65xl2s2poupxyik56pl6cxslg3m7xfgs7dc.py":25:19)
#loc11 = loc("results/my_experiment/torchinductor_cache_0/wb/cwbsgnvxuflvlxf4z65xl2s2poupxyik56pl6cxslg3m7xfgs7dc.py":27:37)
#loc12 = loc("results/my_experiment/torchinductor_cache_0/wb/cwbsgnvxuflvlxf4z65xl2s2poupxyik56pl6cxslg3m7xfgs7dc.py":27:35)
#loc13 = loc("results/my_experiment/torchinductor_cache_0/wb/cwbsgnvxuflvlxf4z65xl2s2poupxyik56pl6cxslg3m7xfgs7dc.py":27:46)
#loc14 = loc("results/my_experiment/torchinductor_cache_0/wb/cwbsgnvxuflvlxf4z65xl2s2poupxyik56pl6cxslg3m7xfgs7dc.py":27:42)
#loc15 = loc("results/my_experiment/torchinductor_cache_0/wb/cwbsgnvxuflvlxf4z65xl2s2poupxyik56pl6cxslg3m7xfgs7dc.py":27:30)
#loc16 = loc("results/my_experiment/torchinductor_cache_0/wb/cwbsgnvxuflvlxf4z65xl2s2poupxyik56pl6cxslg3m7xfgs7dc.py":27:51)
#loc17 = loc("results/my_experiment/torchinductor_cache_0/wb/cwbsgnvxuflvlxf4z65xl2s2poupxyik56pl6cxslg3m7xfgs7dc.py":27:61)
#loc18 = loc("results/my_experiment/torchinductor_cache_0/wb/cwbsgnvxuflvlxf4z65xl2s2poupxyik56pl6cxslg3m7xfgs7dc.py":28:30)
#loc19 = loc("results/my_experiment/torchinductor_cache_0/wb/cwbsgnvxuflvlxf4z65xl2s2poupxyik56pl6cxslg3m7xfgs7dc.py":28:35)
#loc20 = loc("results/my_experiment/torchinductor_cache_0/wb/cwbsgnvxuflvlxf4z65xl2s2poupxyik56pl6cxslg3m7xfgs7dc.py":28:45)
#loc21 = loc("results/my_experiment/torchinductor_cache_0/wb/cwbsgnvxuflvlxf4z65xl2s2poupxyik56pl6cxslg3m7xfgs7dc.py":30:18)
#loc22 = loc("results/my_experiment/torchinductor_cache_0/wb/cwbsgnvxuflvlxf4z65xl2s2poupxyik56pl6cxslg3m7xfgs7dc.py":33:32)
#loc23 = loc("results/my_experiment/torchinductor_cache_0/wb/cwbsgnvxuflvlxf4z65xl2s2poupxyik56pl6cxslg3m7xfgs7dc.py":34:18)
#loc24 = loc("results/my_experiment/torchinductor_cache_0/wb/cwbsgnvxuflvlxf4z65xl2s2poupxyik56pl6cxslg3m7xfgs7dc.py":35:18)
#loc25 = loc("results/my_experiment/torchinductor_cache_0/wb/cwbsgnvxuflvlxf4z65xl2s2poupxyik56pl6cxslg3m7xfgs7dc.py":36:25)
#loc26 = loc("results/my_experiment/torchinductor_cache_0/wb/cwbsgnvxuflvlxf4z65xl2s2poupxyik56pl6cxslg3m7xfgs7dc.py":36:36)
#loc27 = loc("results/my_experiment/torchinductor_cache_0/wb/cwbsgnvxuflvlxf4z65xl2s2poupxyik56pl6cxslg3m7xfgs7dc.py":36:4)
