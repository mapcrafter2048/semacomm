; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define ptx_kernel void @triton_per_fused__to_copy_mean_pow_13(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3, ptr addrspace(1) readnone captures(none) %4) local_unnamed_addr !dbg !6 {
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %7 = shl i32 %6, 5, !dbg !10
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %.lobit1 = lshr i32 %8, 3, !dbg !11
  %9 = and i32 %.lobit1, 31, !dbg !11
  %10 = and i32 %8, 31, !dbg !11
  %11 = or disjoint i32 %9, %7, !dbg !12
  %12 = or disjoint i32 %7, %10, !dbg !12
  %13 = icmp slt i32 %11, 6144, !dbg !13
  %14 = icmp slt i32 %12, 6144, !dbg !13
  %15 = shl i32 %8, 3, !dbg !14
  %16 = and i32 %15, 56, !dbg !14
  %17 = sdiv i32 %11, 12, !dbg !15
  %18 = mul i32 %17, 12, !dbg !16
  %.decomposed = sub i32 %11, %18, !dbg !16
  %19 = or disjoint i32 %16, 768, !dbg !17
  %20 = shl nsw i32 %.decomposed, 6, !dbg !18
  %21 = add nsw i32 %19, %20, !dbg !19
  %22 = mul i32 %17, 2304, !dbg !20
  %23 = add i32 %21, %22, !dbg !21
  %24 = sext i32 %23 to i64, !dbg !22
  %25 = getelementptr bfloat, ptr addrspace(1) %0, i64 %24, !dbg !22
  %26 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %25, i1 %13) #3, !dbg !23
  %27 = extractvalue { i32, i32, i32, i32 } %26, 0, !dbg !23
  %28 = bitcast i32 %27 to <2 x bfloat>, !dbg !23
  %29 = extractvalue { i32, i32, i32, i32 } %26, 1, !dbg !23
  %30 = bitcast i32 %29 to <2 x bfloat>, !dbg !23
  %31 = extractvalue { i32, i32, i32, i32 } %26, 2, !dbg !23
  %32 = bitcast i32 %31 to <2 x bfloat>, !dbg !23
  %33 = extractvalue { i32, i32, i32, i32 } %26, 3, !dbg !23
  %34 = bitcast i32 %33 to <2 x bfloat>, !dbg !23
  %35 = extractelement <2 x bfloat> %28, i64 0, !dbg !23
  %36 = extractelement <2 x bfloat> %28, i64 1, !dbg !23
  %37 = extractelement <2 x bfloat> %30, i64 0, !dbg !23
  %38 = extractelement <2 x bfloat> %30, i64 1, !dbg !23
  %39 = extractelement <2 x bfloat> %32, i64 0, !dbg !23
  %40 = extractelement <2 x bfloat> %32, i64 1, !dbg !23
  %41 = extractelement <2 x bfloat> %34, i64 0, !dbg !23
  %42 = extractelement <2 x bfloat> %34, i64 1, !dbg !23
  %43 = fpext bfloat %35 to float, !dbg !24
  %44 = fpext bfloat %36 to float, !dbg !24
  %45 = fpext bfloat %37 to float, !dbg !24
  %46 = fpext bfloat %38 to float, !dbg !24
  %47 = fpext bfloat %39 to float, !dbg !24
  %48 = fpext bfloat %40 to float, !dbg !24
  %49 = fpext bfloat %41 to float, !dbg !24
  %50 = fpext bfloat %42 to float, !dbg !24
  %51 = fmul float %43, %43, !dbg !25
  %52 = fmul float %44, %44, !dbg !25
  %53 = fmul float %45, %45, !dbg !25
  %54 = fmul float %46, %46, !dbg !25
  %55 = fmul float %47, %47, !dbg !25
  %56 = fmul float %48, %48, !dbg !25
  %57 = fmul float %49, %49, !dbg !25
  %58 = fmul float %50, %50, !dbg !25
  %59 = fadd float %51, %52, !dbg !26
  %60 = fadd float %53, %59, !dbg !26
  %61 = fadd float %54, %60, !dbg !26
  %62 = fadd float %55, %61, !dbg !26
  %63 = fadd float %56, %62, !dbg !26
  %64 = fadd float %57, %63, !dbg !26
  %65 = fadd float %58, %64, !dbg !26
  %66 = select i1 %13, float %65, float 0.000000e+00, !dbg !26
  %67 = bitcast float %66 to i32, !dbg !31
  %68 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %67, i32 4, i32 31), !dbg !31
  %69 = bitcast i32 %68 to float, !dbg !31
  %70 = fadd float %66, %69, !dbg !26
  %71 = bitcast float %70 to i32, !dbg !31
  %72 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %71, i32 2, i32 31), !dbg !31
  %73 = bitcast i32 %72 to float, !dbg !31
  %74 = fadd float %70, %73, !dbg !26
  %75 = bitcast float %74 to i32, !dbg !31
  %76 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %75, i32 1, i32 31), !dbg !31
  %77 = bitcast i32 %76 to float, !dbg !31
  %78 = fadd float %74, %77, !dbg !26
  %79 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %9, !dbg !32
  %80 = bitcast float %78 to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %79, <1 x i32> %80, i1 true) #3, !dbg !32
  tail call void @llvm.nvvm.barrier0(), !dbg !32
  %81 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %10, !dbg !32
  %82 = load i32, ptr addrspace(3) %81, align 4, !dbg !32
  %83 = sext i32 %12 to i64, !dbg !33
  %84 = getelementptr float, ptr addrspace(1) %1, i64 %83, !dbg !33
  %85 = and i32 %8, 224, !dbg !34
  %86 = icmp eq i32 %85, 0, !dbg !34
  %87 = and i1 %86, %14, !dbg !34
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %82, ptr addrspace(1) %84, i1 %87) #3, !dbg !34
  ret void, !dbg !35
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c7fmdh35lpzle3rc3wba7qctw7irduvwyyhzhui4lahfkk4pdp6c.py", directory: "results/my_experiment/torchinductor_cache_0/7f")
!4 = !{ptr @triton_per_fused__to_copy_mean_pow_13, !"reqntidx", i32 256}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_per_fused__to_copy_mean_pow_13", linkageName: "triton_per_fused__to_copy_mean_pow_13", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 24, column: 28, scope: !6)
!10 = !DILocation(line: 24, column: 33, scope: !6)
!11 = !DILocation(line: 25, column: 44, scope: !6)
!12 = !DILocation(line: 25, column: 23, scope: !6)
!13 = !DILocation(line: 26, column: 21, scope: !6)
!14 = !DILocation(line: 27, column: 38, scope: !6)
!15 = !DILocation(line: 34, column: 19, scope: !6)
!16 = !DILocation(line: 33, column: 19, scope: !6)
!17 = !DILocation(line: 36, column: 36, scope: !6)
!18 = !DILocation(line: 36, column: 46, scope: !6)
!19 = !DILocation(line: 36, column: 43, scope: !6)
!20 = !DILocation(line: 36, column: 56, scope: !6)
!21 = !DILocation(line: 36, column: 51, scope: !6)
!22 = !DILocation(line: 36, column: 30, scope: !6)
!23 = !DILocation(line: 36, column: 61, scope: !6)
!24 = !DILocation(line: 36, column: 82, scope: !6)
!25 = !DILocation(line: 38, column: 18, scope: !6)
!26 = !DILocation(line: 256, column: 15, scope: !27, inlinedAt: !30)
!27 = distinct !DILexicalBlockFile(scope: !29, file: !28, discriminator: 0)
!28 = !DIFile(filename: "standard.py", directory: "/home/utka/proj/evs/vlm/lib/python3.12/site-packages/triton/language")
!29 = distinct !DILexicalBlockFile(scope: !6, file: !28, discriminator: 0)
!30 = !DILocation(line: 41, column: 24, scope: !6)
!31 = !DILocation(line: 286, column: 36, scope: !29, inlinedAt: !30)
!32 = !DILocation(line: 41, column: 27, scope: !6)
!33 = !DILocation(line: 42, column: 25, scope: !6)
!34 = !DILocation(line: 42, column: 36, scope: !6)
!35 = !DILocation(line: 42, column: 4, scope: !6)
