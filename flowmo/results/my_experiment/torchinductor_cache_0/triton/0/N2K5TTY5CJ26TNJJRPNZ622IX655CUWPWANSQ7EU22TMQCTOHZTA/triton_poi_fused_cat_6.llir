; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define ptx_kernel void @triton_poi_fused_cat_6(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, ptr addrspace(1) readnone captures(none) %4) local_unnamed_addr !dbg !6 {
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %7 = shl i32 %6, 10, !dbg !10
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %9 = shl i32 %8, 3, !dbg !11
  %10 = and i32 %9, 1016, !dbg !11
  %11 = or disjoint i32 %10, %7, !dbg !12
  %12 = sdiv i32 %11, 64, !dbg !13
  %13 = insertelement <2 x i32> poison, i32 %12, i64 0, !dbg !14
  %14 = insertelement <2 x i32> %13, i32 %11, i64 1, !dbg !14
  %15 = srem <2 x i32> %14, <i32 4352, i32 64>, !dbg !14
  %16 = sdiv i32 %11, 278528, !dbg !15
  %.lhs.trunc = trunc nsw i32 %16 to i16, !dbg !16
  %17 = srem i16 %.lhs.trunc, 12, !dbg !16
  %.sext = sext i16 %17 to i32, !dbg !16
  %18 = sdiv i32 %11, 3342336, !dbg !17
  %19 = extractelement <2 x i32> %15, i64 0, !dbg !18
  %20 = icmp slt i32 %19, 256, !dbg !19
  %21 = shl nsw i32 %.sext, 6, !dbg !20
  %22 = mul nsw i32 %19, 2304, !dbg !21
  %23 = mul nsw i32 %18, 589824, !dbg !22
  %24 = extractelement <2 x i32> %15, i64 1, !dbg !23
  %25 = add nsw i32 %22, %24, !dbg !23
  %26 = add nsw i32 %25, 1536, !dbg !24
  %27 = add nsw i32 %26, %23, !dbg !25
  %28 = add nsw i32 %27, %21, !dbg !26
  %29 = sext i32 %28 to i64, !dbg !27
  %30 = getelementptr bfloat, ptr addrspace(1) %0, i64 %29, !dbg !27
  %31 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %30, i1 %20) #1, !dbg !28
  %32 = extractvalue { i32, i32, i32, i32 } %31, 0, !dbg !28
  %33 = bitcast i32 %32 to <2 x bfloat>, !dbg !28
  %34 = extractvalue { i32, i32, i32, i32 } %31, 1, !dbg !28
  %35 = bitcast i32 %34 to <2 x bfloat>, !dbg !28
  %36 = extractvalue { i32, i32, i32, i32 } %31, 2, !dbg !28
  %37 = bitcast i32 %36 to <2 x bfloat>, !dbg !28
  %38 = extractvalue { i32, i32, i32, i32 } %31, 3, !dbg !28
  %39 = bitcast i32 %38 to <2 x bfloat>, !dbg !28
  %40 = extractelement <2 x bfloat> %33, i64 0, !dbg !28
  %41 = extractelement <2 x bfloat> %33, i64 1, !dbg !28
  %42 = extractelement <2 x bfloat> %35, i64 0, !dbg !28
  %43 = extractelement <2 x bfloat> %35, i64 1, !dbg !28
  %44 = extractelement <2 x bfloat> %37, i64 0, !dbg !28
  %45 = extractelement <2 x bfloat> %37, i64 1, !dbg !28
  %46 = extractelement <2 x bfloat> %39, i64 0, !dbg !28
  %47 = extractelement <2 x bfloat> %39, i64 1, !dbg !28
  %48 = icmp sgt i32 %19, 255, !dbg !18
  %49 = mul i32 %18, 9437184, !dbg !29
  %50 = add nsw i32 %25, -589824, !dbg !30
  %51 = add i32 %50, %49, !dbg !31
  %52 = add i32 %51, %21, !dbg !32
  %53 = sext i32 %52 to i64, !dbg !33
  %54 = getelementptr bfloat, ptr addrspace(1) %1, i64 %53, !dbg !33
  %55 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %54, i1 %48) #1, !dbg !34
  %56 = extractvalue { i32, i32, i32, i32 } %55, 0, !dbg !34
  %57 = bitcast i32 %56 to <2 x bfloat>, !dbg !34
  %58 = extractvalue { i32, i32, i32, i32 } %55, 1, !dbg !34
  %59 = bitcast i32 %58 to <2 x bfloat>, !dbg !34
  %60 = extractvalue { i32, i32, i32, i32 } %55, 2, !dbg !34
  %61 = bitcast i32 %60 to <2 x bfloat>, !dbg !34
  %62 = extractvalue { i32, i32, i32, i32 } %55, 3, !dbg !34
  %63 = bitcast i32 %62 to <2 x bfloat>, !dbg !34
  %64 = extractelement <2 x bfloat> %57, i64 0, !dbg !34
  %65 = extractelement <2 x bfloat> %57, i64 1, !dbg !34
  %66 = extractelement <2 x bfloat> %59, i64 0, !dbg !34
  %67 = extractelement <2 x bfloat> %59, i64 1, !dbg !34
  %68 = extractelement <2 x bfloat> %61, i64 0, !dbg !34
  %69 = extractelement <2 x bfloat> %61, i64 1, !dbg !34
  %70 = extractelement <2 x bfloat> %63, i64 0, !dbg !34
  %71 = extractelement <2 x bfloat> %63, i64 1, !dbg !34
  %.v = select i1 %20, bfloat %40, bfloat %64, !dbg !35
  %.v1 = select i1 %20, bfloat %41, bfloat %65, !dbg !35
  %.v2 = select i1 %20, bfloat %42, bfloat %66, !dbg !35
  %.v3 = select i1 %20, bfloat %43, bfloat %67, !dbg !35
  %.v4 = select i1 %20, bfloat %44, bfloat %68, !dbg !35
  %.v5 = select i1 %20, bfloat %45, bfloat %69, !dbg !35
  %.v6 = select i1 %20, bfloat %46, bfloat %70, !dbg !35
  %.v7 = select i1 %20, bfloat %47, bfloat %71, !dbg !35
  %72 = sext i32 %11 to i64, !dbg !36
  %73 = getelementptr bfloat, ptr addrspace(1) %2, i64 %72, !dbg !36
  %74 = insertelement <2 x bfloat> poison, bfloat %.v, i64 0, !dbg !37
  %75 = insertelement <2 x bfloat> %74, bfloat %.v1, i64 1, !dbg !37
  %76 = bitcast <2 x bfloat> %75 to i32, !dbg !37
  %77 = insertelement <2 x bfloat> poison, bfloat %.v2, i64 0, !dbg !37
  %78 = insertelement <2 x bfloat> %77, bfloat %.v3, i64 1, !dbg !37
  %79 = bitcast <2 x bfloat> %78 to i32, !dbg !37
  %80 = insertelement <2 x bfloat> poison, bfloat %.v4, i64 0, !dbg !37
  %81 = insertelement <2 x bfloat> %80, bfloat %.v5, i64 1, !dbg !37
  %82 = bitcast <2 x bfloat> %81 to i32, !dbg !37
  %83 = insertelement <2 x bfloat> poison, bfloat %.v6, i64 0, !dbg !37
  %84 = insertelement <2 x bfloat> %83, bfloat %.v7, i64 1, !dbg !37
  %85 = bitcast <2 x bfloat> %84 to i32, !dbg !37
  tail call void asm sideeffect "st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l"(i32 %76, i32 %79, i32 %82, i32 %85, ptr addrspace(1) %73) #1, !dbg !37
  ret void, !dbg !38
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cqoukfsb6blnyjyq4bjvpmqy7pdonia6xgav6vqp2rn5lbqaz4xt.py", directory: "results/my_experiment/torchinductor_cache_0/qo")
!4 = !{ptr @triton_poi_fused_cat_6, !"reqntidx", i32 128}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_poi_fused_cat_6", linkageName: "triton_poi_fused_cat_6", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 20, column: 28, scope: !6)
!10 = !DILocation(line: 20, column: 33, scope: !6)
!11 = !DILocation(line: 21, column: 36, scope: !6)
!12 = !DILocation(line: 21, column: 23, scope: !6)
!13 = !DILocation(line: 23, column: 21, scope: !6)
!14 = !DILocation(line: 23, column: 27, scope: !6)
!15 = !DILocation(line: 25, column: 21, scope: !6)
!16 = !DILocation(line: 25, column: 31, scope: !6)
!17 = !DILocation(line: 26, column: 19, scope: !6)
!18 = !DILocation(line: 34, column: 19, scope: !6)
!19 = !DILocation(line: 32, column: 18, scope: !6)
!20 = !DILocation(line: 33, column: 45, scope: !6)
!21 = !DILocation(line: 33, column: 56, scope: !6)
!22 = !DILocation(line: 33, column: 69, scope: !6)
!23 = !DILocation(line: 33, column: 37, scope: !6)
!24 = !DILocation(line: 33, column: 42, scope: !6)
!25 = !DILocation(line: 33, column: 50, scope: !6)
!26 = !DILocation(line: 33, column: 62, scope: !6)
!27 = !DILocation(line: 33, column: 30, scope: !6)
!28 = !DILocation(line: 33, column: 74, scope: !6)
!29 = !DILocation(line: 37, column: 72, scope: !6)
!30 = !DILocation(line: 37, column: 49, scope: !6)
!31 = !DILocation(line: 37, column: 43, scope: !6)
!32 = !DILocation(line: 37, column: 64, scope: !6)
!33 = !DILocation(line: 37, column: 30, scope: !6)
!34 = !DILocation(line: 37, column: 77, scope: !6)
!35 = !DILocation(line: 38, column: 33, scope: !6)
!36 = !DILocation(line: 39, column: 25, scope: !6)
!37 = !DILocation(line: 39, column: 37, scope: !6)
!38 = !DILocation(line: 39, column: 4, scope: !6)
