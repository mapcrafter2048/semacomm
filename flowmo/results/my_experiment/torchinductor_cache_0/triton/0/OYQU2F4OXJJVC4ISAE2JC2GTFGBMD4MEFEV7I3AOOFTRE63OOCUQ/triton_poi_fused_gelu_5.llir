; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define ptx_kernel void @triton_poi_fused_gelu_5(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, ptr addrspace(1) readnone captures(none) %3) local_unnamed_addr !dbg !6 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %6 = shl i32 %5, 10, !dbg !10
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %8 = shl i32 %7, 3, !dbg !11
  %9 = and i32 %8, 1016, !dbg !11
  %10 = or disjoint i32 %9, %6, !dbg !12
  %11 = sext i32 %10 to i64, !dbg !13
  %12 = getelementptr bfloat, ptr addrspace(1) %0, i64 %11, !dbg !13
  %13 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l"(ptr addrspace(1) %12) #3, !dbg !14
  %14 = extractvalue { i32, i32, i32, i32 } %13, 0, !dbg !14
  %15 = bitcast i32 %14 to <2 x bfloat>, !dbg !14
  %16 = extractvalue { i32, i32, i32, i32 } %13, 1, !dbg !14
  %17 = bitcast i32 %16 to <2 x bfloat>, !dbg !14
  %18 = extractvalue { i32, i32, i32, i32 } %13, 2, !dbg !14
  %19 = bitcast i32 %18 to <2 x bfloat>, !dbg !14
  %20 = extractvalue { i32, i32, i32, i32 } %13, 3, !dbg !14
  %21 = bitcast i32 %20 to <2 x bfloat>, !dbg !14
  %22 = fpext <2 x bfloat> %15 to <2 x float>, !dbg !15
  %23 = fpext <2 x bfloat> %17 to <2 x float>, !dbg !15
  %24 = fpext <2 x bfloat> %19 to <2 x float>, !dbg !15
  %25 = fpext <2 x bfloat> %21 to <2 x float>, !dbg !15
  %26 = extractelement <2 x float> %22, i64 0, !dbg !16
  %27 = fmul float %26, %26, !dbg !17
  %28 = extractelement <2 x float> %22, i64 1, !dbg !16
  %29 = fmul float %28, %28, !dbg !17
  %30 = extractelement <2 x float> %23, i64 0, !dbg !16
  %31 = fmul float %30, %30, !dbg !17
  %32 = extractelement <2 x float> %23, i64 1, !dbg !16
  %33 = fmul float %32, %32, !dbg !17
  %34 = extractelement <2 x float> %24, i64 0, !dbg !16
  %35 = fmul float %34, %34, !dbg !17
  %36 = extractelement <2 x float> %24, i64 1, !dbg !16
  %37 = fmul float %36, %36, !dbg !17
  %38 = extractelement <2 x float> %25, i64 0, !dbg !16
  %39 = fmul float %38, %38, !dbg !17
  %40 = extractelement <2 x float> %25, i64 1, !dbg !16
  %41 = fmul float %40, %40, !dbg !17
  %42 = fmul float %27, %26, !dbg !18
  %43 = fmul float %29, %28, !dbg !18
  %44 = fmul float %31, %30, !dbg !18
  %45 = fmul float %33, %32, !dbg !18
  %46 = fmul float %35, %34, !dbg !18
  %47 = fmul float %37, %36, !dbg !18
  %48 = fmul float %39, %38, !dbg !18
  %49 = fmul float %41, %40, !dbg !18
  %50 = fmul float %42, 0x3FA6E4E260000000, !dbg !19
  %51 = fmul float %43, 0x3FA6E4E260000000, !dbg !19
  %52 = fmul float %44, 0x3FA6E4E260000000, !dbg !19
  %53 = fmul float %45, 0x3FA6E4E260000000, !dbg !19
  %54 = fmul float %46, 0x3FA6E4E260000000, !dbg !19
  %55 = fmul float %47, 0x3FA6E4E260000000, !dbg !19
  %56 = fmul float %48, 0x3FA6E4E260000000, !dbg !19
  %57 = fmul float %49, 0x3FA6E4E260000000, !dbg !19
  %58 = fadd float %50, %26, !dbg !16
  %59 = fadd float %51, %28, !dbg !16
  %60 = fadd float %52, %30, !dbg !16
  %61 = fadd float %53, %32, !dbg !16
  %62 = fadd float %54, %34, !dbg !16
  %63 = fadd float %55, %36, !dbg !16
  %64 = fadd float %56, %38, !dbg !16
  %65 = fadd float %57, %40, !dbg !16
  %66 = fmul float %58, 0x3FE9884540000000, !dbg !20
  %67 = fmul float %59, 0x3FE9884540000000, !dbg !20
  %68 = fmul float %60, 0x3FE9884540000000, !dbg !20
  %69 = fmul float %61, 0x3FE9884540000000, !dbg !20
  %70 = fmul float %62, 0x3FE9884540000000, !dbg !20
  %71 = fmul float %63, 0x3FE9884540000000, !dbg !20
  %72 = fmul float %64, 0x3FE9884540000000, !dbg !20
  %73 = fmul float %65, 0x3FE9884540000000, !dbg !20
  %74 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not.i = icmp eq i32 %74, 0, !dbg !21
  %75 = tail call float @llvm.nvvm.fabs.ftz.f(float %66) #3, !dbg !21
  %76 = tail call float @llvm.nvvm.fabs.f(float %66) #3, !dbg !21
  %.01.i = select i1 %.not.i, float %76, float %75, !dbg !21
  %77 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !21
  br i1 %77, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !21

__internal_fmad.exit1.i:                          ; preds = %4
  %78 = fmul float %.01.i, 0x4007154760000000, !dbg !21
  %79 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %78) #3, !dbg !21
  %80 = fadd float %79, 1.000000e+00, !dbg !21
  %81 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %80) #4, !dbg !21, !srcloc !22
  %82 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not6.i = icmp eq i32 %82, 0, !dbg !21
  %83 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %81, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %84 = tail call float @llvm.nvvm.fma.rn.f(float %81, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %.03.i = select i1 %.not6.i, float %84, float %83, !dbg !21
  %85 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !21
  %s.0.i = select i1 %85, float 1.000000e+00, float %.03.i, !dbg !21
  %86 = bitcast float %s.0.i to i32, !dbg !21
  %87 = bitcast float %66 to i32, !dbg !21
  %88 = and i32 %87, -2147483648, !dbg !21
  %89 = or i32 %88, %86, !dbg !21
  %90 = bitcast i32 %89 to float, !dbg !21
  br label %__nv_tanhf.exit, !dbg !21

__internal_fmad.exit3.i:                          ; preds = %4
  %91 = fmul float %66, %66, !dbg !21
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not1.i = icmp eq i32 %92, 0, !dbg !21
  %93 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %91, float 0xBFAAC795C0000000) #3, !dbg !21
  %94 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %91, float 0xBFAAC795C0000000) #3, !dbg !21
  %.06.i = select i1 %.not1.i, float %94, float %93, !dbg !21
  %95 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not2.i = icmp eq i32 %95, 0, !dbg !21
  %96 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %91, float 0x3FC10B2820000000) #3, !dbg !21
  %97 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %91, float 0x3FC10B2820000000) #3, !dbg !21
  %.05.i = select i1 %.not2.i, float %97, float %96, !dbg !21
  %98 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not3.i = icmp eq i32 %98, 0, !dbg !21
  %99 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %91, float 0xBFD5553DA0000000) #3, !dbg !21
  %100 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %91, float 0xBFD5553DA0000000) #3, !dbg !21
  %.0.i = select i1 %.not3.i, float %100, float %99, !dbg !21
  %101 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not4.i = icmp eq i32 %101, 0, !dbg !21
  %102 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %91, float 0.000000e+00) #3, !dbg !21
  %103 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %91, float 0.000000e+00) #3, !dbg !21
  %.04.i = select i1 %.not4.i, float %103, float %102, !dbg !21
  %104 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not5.i = icmp eq i32 %104, 0, !dbg !21
  %105 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %66, float %66) #3, !dbg !21
  %106 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %66, float %66) #3, !dbg !21
  %.02.i = select i1 %.not5.i, float %106, float %105, !dbg !21
  br label %__nv_tanhf.exit, !dbg !21

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %90, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !21
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not.i1 = icmp eq i32 %107, 0, !dbg !21
  %108 = tail call float @llvm.nvvm.fabs.ftz.f(float %67) #3, !dbg !21
  %109 = tail call float @llvm.nvvm.fabs.f(float %67) #3, !dbg !21
  %.01.i2 = select i1 %.not.i1, float %109, float %108, !dbg !21
  %110 = fcmp ult float %.01.i2, 0x3FE3333340000000, !dbg !21
  br i1 %110, label %__internal_fmad.exit3.i8, label %__internal_fmad.exit1.i3, !dbg !21

__internal_fmad.exit1.i3:                         ; preds = %__nv_tanhf.exit
  %111 = fmul float %.01.i2, 0x4007154760000000, !dbg !21
  %112 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %111) #3, !dbg !21
  %113 = fadd float %112, 1.000000e+00, !dbg !21
  %114 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %113) #4, !dbg !21, !srcloc !22
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not6.i4 = icmp eq i32 %115, 0, !dbg !21
  %116 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %114, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %117 = tail call float @llvm.nvvm.fma.rn.f(float %114, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %.03.i5 = select i1 %.not6.i4, float %117, float %116, !dbg !21
  %118 = fcmp oge float %.01.i2, 0x4022059680000000, !dbg !21
  %s.0.i6 = select i1 %118, float 1.000000e+00, float %.03.i5, !dbg !21
  %119 = bitcast float %s.0.i6 to i32, !dbg !21
  %120 = bitcast float %67 to i32, !dbg !21
  %121 = and i32 %120, -2147483648, !dbg !21
  %122 = or i32 %121, %119, !dbg !21
  %123 = bitcast i32 %122 to float, !dbg !21
  br label %__nv_tanhf.exit19, !dbg !21

__internal_fmad.exit3.i8:                         ; preds = %__nv_tanhf.exit
  %124 = fmul float %67, %67, !dbg !21
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not1.i9 = icmp eq i32 %125, 0, !dbg !21
  %126 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %124, float 0xBFAAC795C0000000) #3, !dbg !21
  %127 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %124, float 0xBFAAC795C0000000) #3, !dbg !21
  %.06.i10 = select i1 %.not1.i9, float %127, float %126, !dbg !21
  %128 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not2.i11 = icmp eq i32 %128, 0, !dbg !21
  %129 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i10, float %124, float 0x3FC10B2820000000) #3, !dbg !21
  %130 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i10, float %124, float 0x3FC10B2820000000) #3, !dbg !21
  %.05.i12 = select i1 %.not2.i11, float %130, float %129, !dbg !21
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not3.i13 = icmp eq i32 %131, 0, !dbg !21
  %132 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i12, float %124, float 0xBFD5553DA0000000) #3, !dbg !21
  %133 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i12, float %124, float 0xBFD5553DA0000000) #3, !dbg !21
  %.0.i14 = select i1 %.not3.i13, float %133, float %132, !dbg !21
  %134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not4.i15 = icmp eq i32 %134, 0, !dbg !21
  %135 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i14, float %124, float 0.000000e+00) #3, !dbg !21
  %136 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i14, float %124, float 0.000000e+00) #3, !dbg !21
  %.04.i16 = select i1 %.not4.i15, float %136, float %135, !dbg !21
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not5.i17 = icmp eq i32 %137, 0, !dbg !21
  %138 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i16, float %67, float %67) #3, !dbg !21
  %139 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i16, float %67, float %67) #3, !dbg !21
  %.02.i18 = select i1 %.not5.i17, float %139, float %138, !dbg !21
  br label %__nv_tanhf.exit19, !dbg !21

__nv_tanhf.exit19:                                ; preds = %__internal_fmad.exit1.i3, %__internal_fmad.exit3.i8
  %s.1.i7 = phi float [ %123, %__internal_fmad.exit1.i3 ], [ %.02.i18, %__internal_fmad.exit3.i8 ], !dbg !21
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not.i20 = icmp eq i32 %140, 0, !dbg !21
  %141 = tail call float @llvm.nvvm.fabs.ftz.f(float %68) #3, !dbg !21
  %142 = tail call float @llvm.nvvm.fabs.f(float %68) #3, !dbg !21
  %.01.i21 = select i1 %.not.i20, float %142, float %141, !dbg !21
  %143 = fcmp ult float %.01.i21, 0x3FE3333340000000, !dbg !21
  br i1 %143, label %__internal_fmad.exit3.i27, label %__internal_fmad.exit1.i22, !dbg !21

__internal_fmad.exit1.i22:                        ; preds = %__nv_tanhf.exit19
  %144 = fmul float %.01.i21, 0x4007154760000000, !dbg !21
  %145 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %144) #3, !dbg !21
  %146 = fadd float %145, 1.000000e+00, !dbg !21
  %147 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %146) #4, !dbg !21, !srcloc !22
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not6.i23 = icmp eq i32 %148, 0, !dbg !21
  %149 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %147, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %150 = tail call float @llvm.nvvm.fma.rn.f(float %147, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %.03.i24 = select i1 %.not6.i23, float %150, float %149, !dbg !21
  %151 = fcmp oge float %.01.i21, 0x4022059680000000, !dbg !21
  %s.0.i25 = select i1 %151, float 1.000000e+00, float %.03.i24, !dbg !21
  %152 = bitcast float %s.0.i25 to i32, !dbg !21
  %153 = bitcast float %68 to i32, !dbg !21
  %154 = and i32 %153, -2147483648, !dbg !21
  %155 = or i32 %154, %152, !dbg !21
  %156 = bitcast i32 %155 to float, !dbg !21
  br label %__nv_tanhf.exit38, !dbg !21

__internal_fmad.exit3.i27:                        ; preds = %__nv_tanhf.exit19
  %157 = fmul float %68, %68, !dbg !21
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not1.i28 = icmp eq i32 %158, 0, !dbg !21
  %159 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %157, float 0xBFAAC795C0000000) #3, !dbg !21
  %160 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %157, float 0xBFAAC795C0000000) #3, !dbg !21
  %.06.i29 = select i1 %.not1.i28, float %160, float %159, !dbg !21
  %161 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not2.i30 = icmp eq i32 %161, 0, !dbg !21
  %162 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i29, float %157, float 0x3FC10B2820000000) #3, !dbg !21
  %163 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i29, float %157, float 0x3FC10B2820000000) #3, !dbg !21
  %.05.i31 = select i1 %.not2.i30, float %163, float %162, !dbg !21
  %164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not3.i32 = icmp eq i32 %164, 0, !dbg !21
  %165 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i31, float %157, float 0xBFD5553DA0000000) #3, !dbg !21
  %166 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i31, float %157, float 0xBFD5553DA0000000) #3, !dbg !21
  %.0.i33 = select i1 %.not3.i32, float %166, float %165, !dbg !21
  %167 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not4.i34 = icmp eq i32 %167, 0, !dbg !21
  %168 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i33, float %157, float 0.000000e+00) #3, !dbg !21
  %169 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i33, float %157, float 0.000000e+00) #3, !dbg !21
  %.04.i35 = select i1 %.not4.i34, float %169, float %168, !dbg !21
  %170 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not5.i36 = icmp eq i32 %170, 0, !dbg !21
  %171 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i35, float %68, float %68) #3, !dbg !21
  %172 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i35, float %68, float %68) #3, !dbg !21
  %.02.i37 = select i1 %.not5.i36, float %172, float %171, !dbg !21
  br label %__nv_tanhf.exit38, !dbg !21

__nv_tanhf.exit38:                                ; preds = %__internal_fmad.exit1.i22, %__internal_fmad.exit3.i27
  %s.1.i26 = phi float [ %156, %__internal_fmad.exit1.i22 ], [ %.02.i37, %__internal_fmad.exit3.i27 ], !dbg !21
  %173 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not.i39 = icmp eq i32 %173, 0, !dbg !21
  %174 = tail call float @llvm.nvvm.fabs.ftz.f(float %69) #3, !dbg !21
  %175 = tail call float @llvm.nvvm.fabs.f(float %69) #3, !dbg !21
  %.01.i40 = select i1 %.not.i39, float %175, float %174, !dbg !21
  %176 = fcmp ult float %.01.i40, 0x3FE3333340000000, !dbg !21
  br i1 %176, label %__internal_fmad.exit3.i46, label %__internal_fmad.exit1.i41, !dbg !21

__internal_fmad.exit1.i41:                        ; preds = %__nv_tanhf.exit38
  %177 = fmul float %.01.i40, 0x4007154760000000, !dbg !21
  %178 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %177) #3, !dbg !21
  %179 = fadd float %178, 1.000000e+00, !dbg !21
  %180 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %179) #4, !dbg !21, !srcloc !22
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not6.i42 = icmp eq i32 %181, 0, !dbg !21
  %182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %180, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %183 = tail call float @llvm.nvvm.fma.rn.f(float %180, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %.03.i43 = select i1 %.not6.i42, float %183, float %182, !dbg !21
  %184 = fcmp oge float %.01.i40, 0x4022059680000000, !dbg !21
  %s.0.i44 = select i1 %184, float 1.000000e+00, float %.03.i43, !dbg !21
  %185 = bitcast float %s.0.i44 to i32, !dbg !21
  %186 = bitcast float %69 to i32, !dbg !21
  %187 = and i32 %186, -2147483648, !dbg !21
  %188 = or i32 %187, %185, !dbg !21
  %189 = bitcast i32 %188 to float, !dbg !21
  br label %__nv_tanhf.exit57, !dbg !21

__internal_fmad.exit3.i46:                        ; preds = %__nv_tanhf.exit38
  %190 = fmul float %69, %69, !dbg !21
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not1.i47 = icmp eq i32 %191, 0, !dbg !21
  %192 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %190, float 0xBFAAC795C0000000) #3, !dbg !21
  %193 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %190, float 0xBFAAC795C0000000) #3, !dbg !21
  %.06.i48 = select i1 %.not1.i47, float %193, float %192, !dbg !21
  %194 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not2.i49 = icmp eq i32 %194, 0, !dbg !21
  %195 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i48, float %190, float 0x3FC10B2820000000) #3, !dbg !21
  %196 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i48, float %190, float 0x3FC10B2820000000) #3, !dbg !21
  %.05.i50 = select i1 %.not2.i49, float %196, float %195, !dbg !21
  %197 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not3.i51 = icmp eq i32 %197, 0, !dbg !21
  %198 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i50, float %190, float 0xBFD5553DA0000000) #3, !dbg !21
  %199 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i50, float %190, float 0xBFD5553DA0000000) #3, !dbg !21
  %.0.i52 = select i1 %.not3.i51, float %199, float %198, !dbg !21
  %200 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not4.i53 = icmp eq i32 %200, 0, !dbg !21
  %201 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i52, float %190, float 0.000000e+00) #3, !dbg !21
  %202 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i52, float %190, float 0.000000e+00) #3, !dbg !21
  %.04.i54 = select i1 %.not4.i53, float %202, float %201, !dbg !21
  %203 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not5.i55 = icmp eq i32 %203, 0, !dbg !21
  %204 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i54, float %69, float %69) #3, !dbg !21
  %205 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i54, float %69, float %69) #3, !dbg !21
  %.02.i56 = select i1 %.not5.i55, float %205, float %204, !dbg !21
  br label %__nv_tanhf.exit57, !dbg !21

__nv_tanhf.exit57:                                ; preds = %__internal_fmad.exit1.i41, %__internal_fmad.exit3.i46
  %s.1.i45 = phi float [ %189, %__internal_fmad.exit1.i41 ], [ %.02.i56, %__internal_fmad.exit3.i46 ], !dbg !21
  %206 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not.i58 = icmp eq i32 %206, 0, !dbg !21
  %207 = tail call float @llvm.nvvm.fabs.ftz.f(float %70) #3, !dbg !21
  %208 = tail call float @llvm.nvvm.fabs.f(float %70) #3, !dbg !21
  %.01.i59 = select i1 %.not.i58, float %208, float %207, !dbg !21
  %209 = fcmp ult float %.01.i59, 0x3FE3333340000000, !dbg !21
  br i1 %209, label %__internal_fmad.exit3.i65, label %__internal_fmad.exit1.i60, !dbg !21

__internal_fmad.exit1.i60:                        ; preds = %__nv_tanhf.exit57
  %210 = fmul float %.01.i59, 0x4007154760000000, !dbg !21
  %211 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %210) #3, !dbg !21
  %212 = fadd float %211, 1.000000e+00, !dbg !21
  %213 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %212) #4, !dbg !21, !srcloc !22
  %214 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not6.i61 = icmp eq i32 %214, 0, !dbg !21
  %215 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %213, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %216 = tail call float @llvm.nvvm.fma.rn.f(float %213, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %.03.i62 = select i1 %.not6.i61, float %216, float %215, !dbg !21
  %217 = fcmp oge float %.01.i59, 0x4022059680000000, !dbg !21
  %s.0.i63 = select i1 %217, float 1.000000e+00, float %.03.i62, !dbg !21
  %218 = bitcast float %s.0.i63 to i32, !dbg !21
  %219 = bitcast float %70 to i32, !dbg !21
  %220 = and i32 %219, -2147483648, !dbg !21
  %221 = or i32 %220, %218, !dbg !21
  %222 = bitcast i32 %221 to float, !dbg !21
  br label %__nv_tanhf.exit76, !dbg !21

__internal_fmad.exit3.i65:                        ; preds = %__nv_tanhf.exit57
  %223 = fmul float %70, %70, !dbg !21
  %224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not1.i66 = icmp eq i32 %224, 0, !dbg !21
  %225 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %223, float 0xBFAAC795C0000000) #3, !dbg !21
  %226 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %223, float 0xBFAAC795C0000000) #3, !dbg !21
  %.06.i67 = select i1 %.not1.i66, float %226, float %225, !dbg !21
  %227 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not2.i68 = icmp eq i32 %227, 0, !dbg !21
  %228 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i67, float %223, float 0x3FC10B2820000000) #3, !dbg !21
  %229 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i67, float %223, float 0x3FC10B2820000000) #3, !dbg !21
  %.05.i69 = select i1 %.not2.i68, float %229, float %228, !dbg !21
  %230 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not3.i70 = icmp eq i32 %230, 0, !dbg !21
  %231 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i69, float %223, float 0xBFD5553DA0000000) #3, !dbg !21
  %232 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i69, float %223, float 0xBFD5553DA0000000) #3, !dbg !21
  %.0.i71 = select i1 %.not3.i70, float %232, float %231, !dbg !21
  %233 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not4.i72 = icmp eq i32 %233, 0, !dbg !21
  %234 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i71, float %223, float 0.000000e+00) #3, !dbg !21
  %235 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i71, float %223, float 0.000000e+00) #3, !dbg !21
  %.04.i73 = select i1 %.not4.i72, float %235, float %234, !dbg !21
  %236 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not5.i74 = icmp eq i32 %236, 0, !dbg !21
  %237 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i73, float %70, float %70) #3, !dbg !21
  %238 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i73, float %70, float %70) #3, !dbg !21
  %.02.i75 = select i1 %.not5.i74, float %238, float %237, !dbg !21
  br label %__nv_tanhf.exit76, !dbg !21

__nv_tanhf.exit76:                                ; preds = %__internal_fmad.exit1.i60, %__internal_fmad.exit3.i65
  %s.1.i64 = phi float [ %222, %__internal_fmad.exit1.i60 ], [ %.02.i75, %__internal_fmad.exit3.i65 ], !dbg !21
  %239 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not.i77 = icmp eq i32 %239, 0, !dbg !21
  %240 = tail call float @llvm.nvvm.fabs.ftz.f(float %71) #3, !dbg !21
  %241 = tail call float @llvm.nvvm.fabs.f(float %71) #3, !dbg !21
  %.01.i78 = select i1 %.not.i77, float %241, float %240, !dbg !21
  %242 = fcmp ult float %.01.i78, 0x3FE3333340000000, !dbg !21
  br i1 %242, label %__internal_fmad.exit3.i84, label %__internal_fmad.exit1.i79, !dbg !21

__internal_fmad.exit1.i79:                        ; preds = %__nv_tanhf.exit76
  %243 = fmul float %.01.i78, 0x4007154760000000, !dbg !21
  %244 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %243) #3, !dbg !21
  %245 = fadd float %244, 1.000000e+00, !dbg !21
  %246 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %245) #4, !dbg !21, !srcloc !22
  %247 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not6.i80 = icmp eq i32 %247, 0, !dbg !21
  %248 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %246, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %249 = tail call float @llvm.nvvm.fma.rn.f(float %246, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %.03.i81 = select i1 %.not6.i80, float %249, float %248, !dbg !21
  %250 = fcmp oge float %.01.i78, 0x4022059680000000, !dbg !21
  %s.0.i82 = select i1 %250, float 1.000000e+00, float %.03.i81, !dbg !21
  %251 = bitcast float %s.0.i82 to i32, !dbg !21
  %252 = bitcast float %71 to i32, !dbg !21
  %253 = and i32 %252, -2147483648, !dbg !21
  %254 = or i32 %253, %251, !dbg !21
  %255 = bitcast i32 %254 to float, !dbg !21
  br label %__nv_tanhf.exit95, !dbg !21

__internal_fmad.exit3.i84:                        ; preds = %__nv_tanhf.exit76
  %256 = fmul float %71, %71, !dbg !21
  %257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not1.i85 = icmp eq i32 %257, 0, !dbg !21
  %258 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %256, float 0xBFAAC795C0000000) #3, !dbg !21
  %259 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %256, float 0xBFAAC795C0000000) #3, !dbg !21
  %.06.i86 = select i1 %.not1.i85, float %259, float %258, !dbg !21
  %260 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not2.i87 = icmp eq i32 %260, 0, !dbg !21
  %261 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i86, float %256, float 0x3FC10B2820000000) #3, !dbg !21
  %262 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i86, float %256, float 0x3FC10B2820000000) #3, !dbg !21
  %.05.i88 = select i1 %.not2.i87, float %262, float %261, !dbg !21
  %263 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not3.i89 = icmp eq i32 %263, 0, !dbg !21
  %264 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i88, float %256, float 0xBFD5553DA0000000) #3, !dbg !21
  %265 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i88, float %256, float 0xBFD5553DA0000000) #3, !dbg !21
  %.0.i90 = select i1 %.not3.i89, float %265, float %264, !dbg !21
  %266 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not4.i91 = icmp eq i32 %266, 0, !dbg !21
  %267 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i90, float %256, float 0.000000e+00) #3, !dbg !21
  %268 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i90, float %256, float 0.000000e+00) #3, !dbg !21
  %.04.i92 = select i1 %.not4.i91, float %268, float %267, !dbg !21
  %269 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not5.i93 = icmp eq i32 %269, 0, !dbg !21
  %270 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i92, float %71, float %71) #3, !dbg !21
  %271 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i92, float %71, float %71) #3, !dbg !21
  %.02.i94 = select i1 %.not5.i93, float %271, float %270, !dbg !21
  br label %__nv_tanhf.exit95, !dbg !21

__nv_tanhf.exit95:                                ; preds = %__internal_fmad.exit1.i79, %__internal_fmad.exit3.i84
  %s.1.i83 = phi float [ %255, %__internal_fmad.exit1.i79 ], [ %.02.i94, %__internal_fmad.exit3.i84 ], !dbg !21
  %272 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not.i96 = icmp eq i32 %272, 0, !dbg !21
  %273 = tail call float @llvm.nvvm.fabs.ftz.f(float %72) #3, !dbg !21
  %274 = tail call float @llvm.nvvm.fabs.f(float %72) #3, !dbg !21
  %.01.i97 = select i1 %.not.i96, float %274, float %273, !dbg !21
  %275 = fcmp ult float %.01.i97, 0x3FE3333340000000, !dbg !21
  br i1 %275, label %__internal_fmad.exit3.i103, label %__internal_fmad.exit1.i98, !dbg !21

__internal_fmad.exit1.i98:                        ; preds = %__nv_tanhf.exit95
  %276 = fmul float %.01.i97, 0x4007154760000000, !dbg !21
  %277 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %276) #3, !dbg !21
  %278 = fadd float %277, 1.000000e+00, !dbg !21
  %279 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %278) #4, !dbg !21, !srcloc !22
  %280 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not6.i99 = icmp eq i32 %280, 0, !dbg !21
  %281 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %279, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %282 = tail call float @llvm.nvvm.fma.rn.f(float %279, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %.03.i100 = select i1 %.not6.i99, float %282, float %281, !dbg !21
  %283 = fcmp oge float %.01.i97, 0x4022059680000000, !dbg !21
  %s.0.i101 = select i1 %283, float 1.000000e+00, float %.03.i100, !dbg !21
  %284 = bitcast float %s.0.i101 to i32, !dbg !21
  %285 = bitcast float %72 to i32, !dbg !21
  %286 = and i32 %285, -2147483648, !dbg !21
  %287 = or i32 %286, %284, !dbg !21
  %288 = bitcast i32 %287 to float, !dbg !21
  br label %__nv_tanhf.exit114, !dbg !21

__internal_fmad.exit3.i103:                       ; preds = %__nv_tanhf.exit95
  %289 = fmul float %72, %72, !dbg !21
  %290 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not1.i104 = icmp eq i32 %290, 0, !dbg !21
  %291 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %289, float 0xBFAAC795C0000000) #3, !dbg !21
  %292 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %289, float 0xBFAAC795C0000000) #3, !dbg !21
  %.06.i105 = select i1 %.not1.i104, float %292, float %291, !dbg !21
  %293 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not2.i106 = icmp eq i32 %293, 0, !dbg !21
  %294 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i105, float %289, float 0x3FC10B2820000000) #3, !dbg !21
  %295 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i105, float %289, float 0x3FC10B2820000000) #3, !dbg !21
  %.05.i107 = select i1 %.not2.i106, float %295, float %294, !dbg !21
  %296 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not3.i108 = icmp eq i32 %296, 0, !dbg !21
  %297 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i107, float %289, float 0xBFD5553DA0000000) #3, !dbg !21
  %298 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i107, float %289, float 0xBFD5553DA0000000) #3, !dbg !21
  %.0.i109 = select i1 %.not3.i108, float %298, float %297, !dbg !21
  %299 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not4.i110 = icmp eq i32 %299, 0, !dbg !21
  %300 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i109, float %289, float 0.000000e+00) #3, !dbg !21
  %301 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i109, float %289, float 0.000000e+00) #3, !dbg !21
  %.04.i111 = select i1 %.not4.i110, float %301, float %300, !dbg !21
  %302 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not5.i112 = icmp eq i32 %302, 0, !dbg !21
  %303 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i111, float %72, float %72) #3, !dbg !21
  %304 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i111, float %72, float %72) #3, !dbg !21
  %.02.i113 = select i1 %.not5.i112, float %304, float %303, !dbg !21
  br label %__nv_tanhf.exit114, !dbg !21

__nv_tanhf.exit114:                               ; preds = %__internal_fmad.exit1.i98, %__internal_fmad.exit3.i103
  %s.1.i102 = phi float [ %288, %__internal_fmad.exit1.i98 ], [ %.02.i113, %__internal_fmad.exit3.i103 ], !dbg !21
  %305 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not.i115 = icmp eq i32 %305, 0, !dbg !21
  %306 = tail call float @llvm.nvvm.fabs.ftz.f(float %73) #3, !dbg !21
  %307 = tail call float @llvm.nvvm.fabs.f(float %73) #3, !dbg !21
  %.01.i116 = select i1 %.not.i115, float %307, float %306, !dbg !21
  %308 = fcmp ult float %.01.i116, 0x3FE3333340000000, !dbg !21
  br i1 %308, label %__internal_fmad.exit3.i122, label %__internal_fmad.exit1.i117, !dbg !21

__internal_fmad.exit1.i117:                       ; preds = %__nv_tanhf.exit114
  %309 = fmul float %.01.i116, 0x4007154760000000, !dbg !21
  %310 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %309) #3, !dbg !21
  %311 = fadd float %310, 1.000000e+00, !dbg !21
  %312 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %311) #4, !dbg !21, !srcloc !22
  %313 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not6.i118 = icmp eq i32 %313, 0, !dbg !21
  %314 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %312, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %315 = tail call float @llvm.nvvm.fma.rn.f(float %312, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %.03.i119 = select i1 %.not6.i118, float %315, float %314, !dbg !21
  %316 = fcmp oge float %.01.i116, 0x4022059680000000, !dbg !21
  %s.0.i120 = select i1 %316, float 1.000000e+00, float %.03.i119, !dbg !21
  %317 = bitcast float %s.0.i120 to i32, !dbg !21
  %318 = bitcast float %73 to i32, !dbg !21
  %319 = and i32 %318, -2147483648, !dbg !21
  %320 = or i32 %319, %317, !dbg !21
  %321 = bitcast i32 %320 to float, !dbg !21
  br label %__nv_tanhf.exit133, !dbg !21

__internal_fmad.exit3.i122:                       ; preds = %__nv_tanhf.exit114
  %322 = fmul float %73, %73, !dbg !21
  %323 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not1.i123 = icmp eq i32 %323, 0, !dbg !21
  %324 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %322, float 0xBFAAC795C0000000) #3, !dbg !21
  %325 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %322, float 0xBFAAC795C0000000) #3, !dbg !21
  %.06.i124 = select i1 %.not1.i123, float %325, float %324, !dbg !21
  %326 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not2.i125 = icmp eq i32 %326, 0, !dbg !21
  %327 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i124, float %322, float 0x3FC10B2820000000) #3, !dbg !21
  %328 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i124, float %322, float 0x3FC10B2820000000) #3, !dbg !21
  %.05.i126 = select i1 %.not2.i125, float %328, float %327, !dbg !21
  %329 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not3.i127 = icmp eq i32 %329, 0, !dbg !21
  %330 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i126, float %322, float 0xBFD5553DA0000000) #3, !dbg !21
  %331 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i126, float %322, float 0xBFD5553DA0000000) #3, !dbg !21
  %.0.i128 = select i1 %.not3.i127, float %331, float %330, !dbg !21
  %332 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not4.i129 = icmp eq i32 %332, 0, !dbg !21
  %333 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i128, float %322, float 0.000000e+00) #3, !dbg !21
  %334 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i128, float %322, float 0.000000e+00) #3, !dbg !21
  %.04.i130 = select i1 %.not4.i129, float %334, float %333, !dbg !21
  %335 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not5.i131 = icmp eq i32 %335, 0, !dbg !21
  %336 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i130, float %73, float %73) #3, !dbg !21
  %337 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i130, float %73, float %73) #3, !dbg !21
  %.02.i132 = select i1 %.not5.i131, float %337, float %336, !dbg !21
  br label %__nv_tanhf.exit133, !dbg !21

__nv_tanhf.exit133:                               ; preds = %__internal_fmad.exit1.i117, %__internal_fmad.exit3.i122
  %s.1.i121 = phi float [ %321, %__internal_fmad.exit1.i117 ], [ %.02.i132, %__internal_fmad.exit3.i122 ], !dbg !21
  %338 = fmul <2 x float> %25, splat (float 5.000000e-01), !dbg !23
  %339 = fmul <2 x float> %24, splat (float 5.000000e-01), !dbg !23
  %340 = fmul <2 x float> %23, splat (float 5.000000e-01), !dbg !23
  %341 = fmul <2 x float> %22, splat (float 5.000000e-01), !dbg !23
  %342 = insertelement <2 x float> poison, float %s.1.i, i64 0, !dbg !24
  %343 = insertelement <2 x float> %342, float %s.1.i7, i64 1, !dbg !24
  %344 = fadd <2 x float> %343, splat (float 1.000000e+00), !dbg !24
  %345 = insertelement <2 x float> poison, float %s.1.i26, i64 0, !dbg !24
  %346 = insertelement <2 x float> %345, float %s.1.i45, i64 1, !dbg !24
  %347 = fadd <2 x float> %346, splat (float 1.000000e+00), !dbg !24
  %348 = insertelement <2 x float> poison, float %s.1.i64, i64 0, !dbg !24
  %349 = insertelement <2 x float> %348, float %s.1.i83, i64 1, !dbg !24
  %350 = fadd <2 x float> %349, splat (float 1.000000e+00), !dbg !24
  %351 = insertelement <2 x float> poison, float %s.1.i102, i64 0, !dbg !24
  %352 = insertelement <2 x float> %351, float %s.1.i121, i64 1, !dbg !24
  %353 = fadd <2 x float> %352, splat (float 1.000000e+00), !dbg !24
  %354 = getelementptr bfloat, ptr addrspace(1) %1, i64 %11, !dbg !25
  %355 = fmul <2 x float> %341, %344, !dbg !26
  %356 = fptrunc <2 x float> %355 to <2 x bfloat>, !dbg !27
  %357 = fmul <2 x float> %340, %347, !dbg !26
  %358 = fptrunc <2 x float> %357 to <2 x bfloat>, !dbg !27
  %359 = fmul <2 x float> %339, %350, !dbg !26
  %360 = fptrunc <2 x float> %359 to <2 x bfloat>, !dbg !27
  %361 = fmul <2 x float> %338, %353, !dbg !26
  %362 = fptrunc <2 x float> %361 to <2 x bfloat>, !dbg !27
  %363 = bitcast <2 x bfloat> %356 to i32, !dbg !27
  %364 = bitcast <2 x bfloat> %358 to i32, !dbg !27
  %365 = bitcast <2 x bfloat> %360 to i32, !dbg !27
  %366 = bitcast <2 x bfloat> %362 to i32, !dbg !27
  tail call void asm sideeffect "st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l"(i32 %363, i32 %364, i32 %365, i32 %366, ptr addrspace(1) %354) #3, !dbg !27
  ret void, !dbg !28
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }
attributes #4 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "csoi7shjq3tgk65ghexssqxqh735fxjd2kfuvoonpj4wc33yeeg3.py", directory: "results/my_experiment/torchinductor_cache_0/so")
!4 = !{ptr @triton_poi_fused_gelu_5, !"reqntidx", i32 128}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_poi_fused_gelu_5", linkageName: "triton_poi_fused_gelu_5", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 20, column: 28, scope: !6)
!10 = !DILocation(line: 20, column: 33, scope: !6)
!11 = !DILocation(line: 21, column: 36, scope: !6)
!12 = !DILocation(line: 21, column: 23, scope: !6)
!13 = !DILocation(line: 24, column: 30, scope: !6)
!14 = !DILocation(line: 24, column: 35, scope: !6)
!15 = !DILocation(line: 24, column: 44, scope: !6)
!16 = !DILocation(line: 32, column: 18, scope: !6)
!17 = !DILocation(line: 28, column: 18, scope: !6)
!18 = !DILocation(line: 29, column: 18, scope: !6)
!19 = !DILocation(line: 31, column: 18, scope: !6)
!20 = !DILocation(line: 34, column: 19, scope: !6)
!21 = !DILocation(line: 35, column: 27, scope: !6)
!22 = !{i32 21046}
!23 = !DILocation(line: 27, column: 18, scope: !6)
!24 = !DILocation(line: 37, column: 20, scope: !6)
!25 = !DILocation(line: 40, column: 25, scope: !6)
!26 = !DILocation(line: 38, column: 19, scope: !6)
!27 = !DILocation(line: 40, column: 37, scope: !6)
!28 = !DILocation(line: 40, column: 4, scope: !6)
