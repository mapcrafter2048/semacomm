#loc = loc("results/my_experiment/torchinductor_cache_0/4a/c4ajcwaau4zikq7d44pyv73mtpd3vl4ioo3umjdggywdax3cus6z.py":18:0)
module {
  tt.func public @triton_poi_fused_addmm_10(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("results/my_experiment/torchinductor_cache_0/4a/c4ajcwaau4zikq7d44pyv73mtpd3vl4ioo3umjdggywdax3cus6z.py":18:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("results/my_experiment/torchinductor_cache_0/4a/c4ajcwaau4zikq7d44pyv73mtpd3vl4ioo3umjdggywdax3cus6z.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("results/my_experiment/torchinductor_cache_0/4a/c4ajcwaau4zikq7d44pyv73mtpd3vl4ioo3umjdggywdax3cus6z.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<128xbf16> loc(#loc1)
    %cst_0 = arith.constant dense<2> : tensor<128xi64> loc(#loc1)
    %cst_1 = arith.constant dense<1152> : tensor<128xi32> loc(#loc1)
    %cst_2 = arith.constant dense<9216> : tensor<128xi32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_2 : tensor<128xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_1 : tensor<128xi32> loc(#loc7)
    %7 = arith.extsi %6 : tensor<128xi32> to tensor<128xi64> loc(#loc8)
    %8 = arith.cmpi slt, %7, %cst_0 : tensor<128xi64> loc(#loc8)
    %9 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<128x!tt.ptr<bf16>> loc(#loc9)
    %10 = tt.addptr %9, %4 : tensor<128x!tt.ptr<bf16>>, tensor<128xi32> loc(#loc9)
    %11 = arith.andi %5, %8 : tensor<128xi1> loc(#loc10)
    %12 = tt.load %10, %11, %cst : tensor<128x!tt.ptr<bf16>> loc(#loc11)
    %13 = arith.extf %12 : tensor<128xbf16> to tensor<128xf32> loc(#loc12)
    %14 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<128x!tt.ptr<bf16>> loc(#loc13)
    %15 = tt.addptr %14, %4 : tensor<128x!tt.ptr<bf16>>, tensor<128xi32> loc(#loc13)
    %16 = arith.truncf %13 : tensor<128xf32> to tensor<128xbf16> loc(#loc14)
    tt.store %15, %16, %5 : tensor<128x!tt.ptr<bf16>> loc(#loc14)
    tt.return loc(#loc15)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("results/my_experiment/torchinductor_cache_0/4a/c4ajcwaau4zikq7d44pyv73mtpd3vl4ioo3umjdggywdax3cus6z.py":20:28)
#loc3 = loc("results/my_experiment/torchinductor_cache_0/4a/c4ajcwaau4zikq7d44pyv73mtpd3vl4ioo3umjdggywdax3cus6z.py":20:33)
#loc4 = loc("results/my_experiment/torchinductor_cache_0/4a/c4ajcwaau4zikq7d44pyv73mtpd3vl4ioo3umjdggywdax3cus6z.py":21:36)
#loc5 = loc("results/my_experiment/torchinductor_cache_0/4a/c4ajcwaau4zikq7d44pyv73mtpd3vl4ioo3umjdggywdax3cus6z.py":21:23)
#loc6 = loc("results/my_experiment/torchinductor_cache_0/4a/c4ajcwaau4zikq7d44pyv73mtpd3vl4ioo3umjdggywdax3cus6z.py":22:21)
#loc7 = loc("results/my_experiment/torchinductor_cache_0/4a/c4ajcwaau4zikq7d44pyv73mtpd3vl4ioo3umjdggywdax3cus6z.py":23:19)
#loc8 = loc("results/my_experiment/torchinductor_cache_0/4a/c4ajcwaau4zikq7d44pyv73mtpd3vl4ioo3umjdggywdax3cus6z.py":27:18)
#loc9 = loc("results/my_experiment/torchinductor_cache_0/4a/c4ajcwaau4zikq7d44pyv73mtpd3vl4ioo3umjdggywdax3cus6z.py":28:30)
#loc10 = loc("results/my_experiment/torchinductor_cache_0/4a/c4ajcwaau4zikq7d44pyv73mtpd3vl4ioo3umjdggywdax3cus6z.py":28:43)
#loc11 = loc("results/my_experiment/torchinductor_cache_0/4a/c4ajcwaau4zikq7d44pyv73mtpd3vl4ioo3umjdggywdax3cus6z.py":28:35)
#loc12 = loc("results/my_experiment/torchinductor_cache_0/4a/c4ajcwaau4zikq7d44pyv73mtpd3vl4ioo3umjdggywdax3cus6z.py":28:63)
#loc13 = loc("results/my_experiment/torchinductor_cache_0/4a/c4ajcwaau4zikq7d44pyv73mtpd3vl4ioo3umjdggywdax3cus6z.py":29:25)
#loc14 = loc("results/my_experiment/torchinductor_cache_0/4a/c4ajcwaau4zikq7d44pyv73mtpd3vl4ioo3umjdggywdax3cus6z.py":29:36)
#loc15 = loc("results/my_experiment/torchinductor_cache_0/4a/c4ajcwaau4zikq7d44pyv73mtpd3vl4ioo3umjdggywdax3cus6z.py":29:4)
