; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define ptx_kernel void @triton_poi_fused__to_copy_17(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5, ptr addrspace(1) readnone captures(none) %6) local_unnamed_addr !dbg !6 {
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %9 = shl i32 %8, 9, !dbg !10
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %11 = shl i32 %10, 1, !dbg !11
  %12 = and i32 %11, 510, !dbg !11
  %13 = or disjoint i32 %12, %9, !dbg !12
  %14 = or disjoint i32 %13, 1, !dbg !12
  %15 = sdiv i32 %13, 3342336, !dbg !13
  %16 = srem i32 %13, 278528, !dbg !14
  %17 = srem i32 %14, 278528, !dbg !14
  %18 = sdiv i32 %13, 64, !dbg !15
  %19 = mul i32 %18, 64, !dbg !16
  %.decomposed = sub i32 %13, %19, !dbg !16
  %20 = srem i32 %14, 64, !dbg !16
  %21 = shl nsw i32 %16, 1, !dbg !17
  %22 = shl nsw i32 %17, 1, !dbg !17
  %23 = mul nsw i32 %15, 557056, !dbg !18
  %24 = add nsw i32 %21, %23, !dbg !19
  %25 = add nsw i32 %22, %23, !dbg !19
  %26 = sext i32 %24 to i64, !dbg !20
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !20
  %28 = sext i32 %25 to i64, !dbg !20
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !20
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %27) #1, !dbg !21
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %29) #1, !dbg !21
  %.lhs.trunc = trunc nsw i32 %.decomposed to i8, !dbg !22
  %32 = ashr exact i8 %.lhs.trunc, 1, !dbg !22
  %.sext = sext i8 %32 to i32, !dbg !22
  %.lhs.trunc1 = trunc nsw i32 %20 to i8, !dbg !22
  %33 = sdiv i8 %.lhs.trunc1, 2, !dbg !22
  %.sext2 = sext i8 %33 to i32, !dbg !22
  %34 = shl nsw i32 %.sext, 1, !dbg !23
  %35 = shl nsw i32 %.sext2, 1, !dbg !23
  %36 = shl nsw i32 %18, 6, !dbg !24
  %37 = add i32 %34, %36, !dbg !25
  %38 = add i32 %35, %36, !dbg !25
  %39 = sext i32 %37 to i64, !dbg !26
  %40 = getelementptr float, ptr addrspace(1) %1, i64 %39, !dbg !26
  %41 = sext i32 %38 to i64, !dbg !26
  %42 = getelementptr float, ptr addrspace(1) %1, i64 %41, !dbg !26
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %40) #1, !dbg !27
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %42) #1, !dbg !27
  %45 = or disjoint i32 %21, 1, !dbg !28
  %46 = add nsw i32 %45, %23, !dbg !29
  %47 = or disjoint i32 %23, 1, !dbg !28
  %48 = add i32 %47, %22, !dbg !29
  %49 = sext i32 %46 to i64, !dbg !30
  %50 = getelementptr float, ptr addrspace(1) %0, i64 %49, !dbg !30
  %51 = sext i32 %48 to i64, !dbg !30
  %52 = getelementptr float, ptr addrspace(1) %0, i64 %51, !dbg !30
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %50) #1, !dbg !31
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %52) #1, !dbg !31
  %55 = or disjoint i32 %36, 1, !dbg !32
  %56 = add i32 %55, %34, !dbg !33
  %57 = add i32 %55, %35, !dbg !33
  %58 = sext i32 %56 to i64, !dbg !34
  %59 = getelementptr float, ptr addrspace(1) %1, i64 %58, !dbg !34
  %60 = sext i32 %57 to i64, !dbg !34
  %61 = getelementptr float, ptr addrspace(1) %1, i64 %60, !dbg !34
  %62 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %59) #1, !dbg !35
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %61) #1, !dbg !35
  %64 = getelementptr float, ptr addrspace(1) %2, i64 %39, !dbg !36
  %65 = getelementptr float, ptr addrspace(1) %2, i64 %41, !dbg !36
  %66 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %64) #1, !dbg !37
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %65) #1, !dbg !37
  %68 = getelementptr float, ptr addrspace(1) %2, i64 %58, !dbg !38
  %69 = getelementptr float, ptr addrspace(1) %2, i64 %60, !dbg !38
  %70 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %68) #1, !dbg !39
  %71 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %69) #1, !dbg !39
  %72 = sext i32 %13 to i64, !dbg !40
  %73 = getelementptr bfloat, ptr addrspace(1) %3, i64 %72, !dbg !40
  %74 = insertelement <2 x i32> poison, i32 %43, i64 0, !dbg !27
  %75 = insertelement <2 x i32> %74, i32 %31, i64 1, !dbg !27
  %76 = bitcast <2 x i32> %75 to <2 x float>, !dbg !27
  %77 = insertelement <2 x i32> poison, i32 %30, i64 0, !dbg !21
  %78 = insertelement <2 x i32> %77, i32 %44, i64 1, !dbg !21
  %79 = bitcast <2 x i32> %78 to <2 x float>, !dbg !21
  %80 = insertelement <2 x i32> poison, i32 %62, i64 0, !dbg !35
  %81 = insertelement <2 x i32> %80, i32 %54, i64 1, !dbg !35
  %82 = bitcast <2 x i32> %81 to <2 x float>, !dbg !35
  %83 = insertelement <2 x i32> poison, i32 %53, i64 0, !dbg !31
  %84 = insertelement <2 x i32> %83, i32 %63, i64 1, !dbg !31
  %85 = bitcast <2 x i32> %84 to <2 x float>, !dbg !31
  %86 = fmul <2 x float> %76, %79, !dbg !41
  %87 = fmul <2 x float> %82, %85, !dbg !42
  %88 = fadd <2 x float> %86, %87, !dbg !43
  %89 = fptrunc <2 x float> %88 to <2 x bfloat>, !dbg !44
  %90 = bitcast <2 x bfloat> %89 to i32, !dbg !44
  tail call void asm sideeffect "st.global.b32 [ $1 + 0 ], { $0 };", "r,l"(i32 %90, ptr addrspace(1) %73) #1, !dbg !44
  %91 = getelementptr bfloat, ptr addrspace(1) %4, i64 %72, !dbg !45
  %92 = insertelement <2 x i32> poison, i32 %66, i64 0, !dbg !37
  %93 = insertelement <2 x i32> %92, i32 %67, i64 1, !dbg !37
  %94 = bitcast <2 x i32> %93 to <2 x float>, !dbg !37
  %95 = insertelement <2 x i32> poison, i32 %70, i64 0, !dbg !39
  %96 = insertelement <2 x i32> %95, i32 %71, i64 1, !dbg !39
  %97 = bitcast <2 x i32> %96 to <2 x float>, !dbg !39
  %98 = insertelement <2 x i32> %77, i32 %31, i64 1, !dbg !21
  %99 = bitcast <2 x i32> %98 to <2 x float>, !dbg !21
  %100 = insertelement <2 x i32> %83, i32 %54, i64 1, !dbg !31
  %101 = bitcast <2 x i32> %100 to <2 x float>, !dbg !31
  %102 = fmul <2 x float> %99, %94, !dbg !46
  %103 = fmul <2 x float> %101, %97, !dbg !47
  %104 = fadd <2 x float> %102, %103, !dbg !48
  %105 = fptrunc <2 x float> %104 to <2 x bfloat>, !dbg !49
  %106 = bitcast <2 x bfloat> %105 to i32, !dbg !49
  tail call void asm sideeffect "st.global.b32 [ $1 + 0 ], { $0 };", "r,l"(i32 %106, ptr addrspace(1) %91) #1, !dbg !49
  ret void, !dbg !50
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cixrnrmvd4huenzlqm7xadk7ndpsorbo5vjx6syqiziy2yxkymxy.py", directory: "results/my_experiment/torchinductor_cache_0/ix")
!4 = !{ptr @triton_poi_fused__to_copy_17, !"reqntidx", i32 256}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_poi_fused__to_copy_17", linkageName: "triton_poi_fused__to_copy_17", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 20, column: 28, scope: !6)
!10 = !DILocation(line: 20, column: 33, scope: !6)
!11 = !DILocation(line: 21, column: 36, scope: !6)
!12 = !DILocation(line: 21, column: 23, scope: !6)
!13 = !DILocation(line: 23, column: 19, scope: !6)
!14 = !DILocation(line: 24, column: 19, scope: !6)
!15 = !DILocation(line: 26, column: 19, scope: !6)
!16 = !DILocation(line: 25, column: 19, scope: !6)
!17 = !DILocation(line: 28, column: 32, scope: !6)
!18 = !DILocation(line: 28, column: 44, scope: !6)
!19 = !DILocation(line: 28, column: 37, scope: !6)
!20 = !DILocation(line: 28, column: 30, scope: !6)
!21 = !DILocation(line: 28, column: 49, scope: !6)
!22 = !DILocation(line: 29, column: 39, scope: !6)
!23 = !DILocation(line: 29, column: 33, scope: !6)
!24 = !DILocation(line: 29, column: 47, scope: !6)
!25 = !DILocation(line: 29, column: 44, scope: !6)
!26 = !DILocation(line: 29, column: 30, scope: !6)
!27 = !DILocation(line: 29, column: 52, scope: !6)
!28 = !DILocation(line: 30, column: 34, scope: !6)
!29 = !DILocation(line: 30, column: 41, scope: !6)
!30 = !DILocation(line: 30, column: 30, scope: !6)
!31 = !DILocation(line: 30, column: 53, scope: !6)
!32 = !DILocation(line: 31, column: 34, scope: !6)
!33 = !DILocation(line: 31, column: 48, scope: !6)
!34 = !DILocation(line: 31, column: 30, scope: !6)
!35 = !DILocation(line: 31, column: 56, scope: !6)
!36 = !DILocation(line: 32, column: 30, scope: !6)
!37 = !DILocation(line: 32, column: 52, scope: !6)
!38 = !DILocation(line: 33, column: 31, scope: !6)
!39 = !DILocation(line: 33, column: 57, scope: !6)
!40 = !DILocation(line: 42, column: 25, scope: !6)
!41 = !DILocation(line: 34, column: 18, scope: !6)
!42 = !DILocation(line: 35, column: 18, scope: !6)
!43 = !DILocation(line: 36, column: 18, scope: !6)
!44 = !DILocation(line: 42, column: 36, scope: !6)
!45 = !DILocation(line: 43, column: 25, scope: !6)
!46 = !DILocation(line: 38, column: 18, scope: !6)
!47 = !DILocation(line: 39, column: 19, scope: !6)
!48 = !DILocation(line: 40, column: 19, scope: !6)
!49 = !DILocation(line: 43, column: 37, scope: !6)
!50 = !DILocation(line: 43, column: 4, scope: !6)
