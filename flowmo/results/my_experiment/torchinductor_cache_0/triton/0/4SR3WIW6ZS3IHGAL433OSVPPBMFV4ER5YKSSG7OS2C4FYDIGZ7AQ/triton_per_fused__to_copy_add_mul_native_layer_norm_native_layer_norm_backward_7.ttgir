#blocked = #ttg.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [8], order = [0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [8], order = [0]}>
#loc = loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":18:0)
#loc1 = loc(unknown)
#loc12 = loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":41:57)
#loc20 = loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":49:59)
#loc37 = loc(callsite(#loc1 at #loc12))
#loc42 = loc(callsite(#loc1 at #loc20))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 8 : i32, ttg.target = "cuda:86", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused__to_copy_add_mul_native_layer_norm_native_layer_norm_backward_7(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":18:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":18:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":18:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":18:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":18:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1024xf32, #blocked> loc(#loc1)
    %c768_i32 = arith.constant 768 : i32 loc(#loc1)
    %cst_0 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_1 = arith.constant 7.680000e+02 : f32 loc(#loc1)
    %cst_2 = arith.constant 9.99999997E-7 : f32 loc(#loc1)
    %cst_3 = arith.constant 0.00130208337 : f32 loc(#loc1)
    %cst_4 = arith.constant dense<0.000000e+00> : tensor<1024xbf16, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<768> : tensor<1024xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #blocked> loc(#loc3)
    %2 = arith.cmpi slt, %1, %cst_5 : tensor<1024xi32, #blocked> loc(#loc4)
    %3 = arith.muli %0, %c768_i32 : i32 loc(#loc5)
    %4 = tt.splat %3 : i32 -> tensor<1024xi32, #blocked> loc(#loc35)
    %5 = arith.addi %1, %4 : tensor<1024xi32, #blocked> loc(#loc6)
    %6 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<1024x!tt.ptr<bf16>, #blocked> loc(#loc7)
    %7 = tt.addptr %6, %5 : tensor<1024x!tt.ptr<bf16>, #blocked>, tensor<1024xi32, #blocked> loc(#loc7)
    %8 = tt.load %7, %2, %cst_4 : tensor<1024x!tt.ptr<bf16>, #blocked> loc(#loc8)
    %9 = arith.extf %8 : tensor<1024xbf16, #blocked> to tensor<1024xf32, #blocked> loc(#loc9)
    %10 = arith.select %2, %9, %cst : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc10)
    %11 = "tt.reduce"(%10) <{axis = 0 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc12)), %arg7: f32 loc(callsite(#loc1 at #loc12))):
      %34 = arith.addf %arg6, %arg7 : f32 loc(#loc45)
      tt.reduce.return %34 : f32 loc(#loc36)
    }) : (tensor<1024xf32, #blocked>) -> f32 loc(#loc36)
    %12 = arith.addf %11, %cst_0 : f32 loc(#loc39)
    %13 = arith.divf %12, %cst_1 : f32 loc(#loc16)
    %14 = tt.splat %13 : f32 -> tensor<1024xf32, #blocked> loc(#loc40)
    %15 = arith.subf %9, %14 : tensor<1024xf32, #blocked> loc(#loc17)
    %16 = arith.mulf %15, %15 : tensor<1024xf32, #blocked> loc(#loc18)
    %17 = arith.select %2, %16, %cst : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc19)
    %18 = "tt.reduce"(%17) <{axis = 0 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc20)), %arg7: f32 loc(callsite(#loc1 at #loc20))):
      %34 = arith.addf %arg6, %arg7 : f32 loc(#loc46)
      tt.reduce.return %34 : f32 loc(#loc41)
    }) : (tensor<1024xf32, #blocked>) -> f32 loc(#loc41)
    %19 = arith.addf %18, %cst_0 : f32 loc(#loc43)
    %20 = arith.divf %19, %cst_1 : f32 loc(#loc22)
    %21 = arith.addf %20, %cst_2 : f32 loc(#loc23)
    %22 = tt.extern_elementwise %21 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (f32) -> f32 loc(#loc24)
    %23 = tt.splat %22 : f32 -> tensor<1024xf32, #blocked> loc(#loc44)
    %24 = arith.mulf %15, %23 : tensor<1024xf32, #blocked> loc(#loc25)
    %25 = arith.addf %24, %cst : tensor<1024xf32, #blocked> loc(#loc26)
    %26 = arith.mulf %22, %cst_3 : f32 loc(#loc27)
    %27 = tt.splat %26 : f32 -> tensor<1xf32, #blocked1> loc(#loc27)
    %28 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc28)
    %29 = tt.addptr %28, %5 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc28)
    tt.store %29, %24, %2 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc29)
    %30 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc30)
    %31 = tt.addptr %30, %5 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc30)
    tt.store %31, %25, %2 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc31)
    %32 = tt.addptr %arg3, %0 : !tt.ptr<f32>, i32 loc(#loc32)
    %33 = tt.splat %32 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc32)
    tt.store %33, %27 : tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc33)
    tt.return loc(#loc34)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":25:28)
#loc3 = loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":28:28)
#loc4 = loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":30:25)
#loc5 = loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":35:41)
#loc6 = loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":35:37)
#loc7 = loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":35:30)
#loc8 = loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":35:46)
#loc9 = loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":35:69)
#loc10 = loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":40:35)
#loc11 = loc("/home/utka/proj/evs/vlm/lib/python3.12/site-packages/triton/language/standard.py":286:36)
#loc13 = loc("/home/utka/proj/evs/vlm/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc14 = loc("/home/utka/proj/evs/vlm/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":57:15)
#loc15 = loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":41:44)
#loc16 = loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":44:20)
#loc17 = loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":45:19)
#loc18 = loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":46:20)
#loc19 = loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":48:37)
#loc21 = loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":49:45)
#loc22 = loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":52:21)
#loc23 = loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":54:20)
#loc24 = loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":55:28)
#loc25 = loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":56:20)
#loc26 = loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":60:20)
#loc27 = loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":62:20)
#loc28 = loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":63:25)
#loc29 = loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":63:48)
#loc30 = loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":64:25)
#loc31 = loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":64:48)
#loc32 = loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":65:25)
#loc33 = loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":65:37)
#loc34 = loc("results/my_experiment/torchinductor_cache_0/nt/cntn7dontywatle3qdac5xbvrzxspphrtzdxeykxipim5ocfyhyc.py":65:4)
#loc35 = loc(fused[#loc6, #loc5])
#loc36 = loc(callsite(#loc11 at #loc12))
#loc38 = loc(callsite(#loc13 at #loc11))
#loc39 = loc(callsite(#loc14 at #loc15))
#loc40 = loc(fused[#loc17, #loc16])
#loc41 = loc(callsite(#loc11 at #loc20))
#loc43 = loc(callsite(#loc14 at #loc21))
#loc44 = loc(fused[#loc25, #loc24])
#loc45 = loc(callsite(#loc38 at #loc12))
#loc46 = loc(callsite(#loc38 at #loc20))
