; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define ptx_kernel void @triton_poi_fused_cat_11(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4, ptr addrspace(1) readnone captures(none) %5) local_unnamed_addr !dbg !6 {
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %8 = shl i32 %7, 9, !dbg !10
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %10 = shl i32 %9, 1, !dbg !11
  %11 = and i32 %10, 510, !dbg !11
  %12 = or disjoint i32 %11, %8, !dbg !12
  %13 = sdiv i32 %12, 4, !dbg !13
  %14 = srem i32 %13, 32, !dbg !14
  %15 = mul i32 %13, 4, !dbg !15
  %.decomposed = sub i32 %12, %15, !dbg !15
  %16 = sdiv i32 %12, 128, !dbg !16
  %17 = icmp slt i32 %14, 4, !dbg !17
  %18 = mul nsw i32 %16, -112, !dbg !18
  %19 = add i32 %18, %12, !dbg !18
  %20 = sext i32 %19 to i64, !dbg !19
  %21 = getelementptr double, ptr addrspace(1) %0, i64 %20, !dbg !19
  %22 = tail call { i64, i64 } asm sideeffect "mov.u64 $0, $2;\0A\09mov.u64 $1, $3;\0A\09@$5 ld.global.v2.b64 { $0, $1 }, [ $4 + 0 ];", "=l,=l,l,l,l,b"(i64 0, i64 0, ptr addrspace(1) %21, i1 %17) #1, !dbg !20
  %23 = extractvalue { i64, i64 } %22, 0, !dbg !20
  %24 = extractvalue { i64, i64 } %22, 1, !dbg !20
  %25 = bitcast i64 %23 to double, !dbg !20
  %26 = bitcast i64 %24 to double, !dbg !20
  %27 = fptrunc double %25 to float, !dbg !21
  %28 = fptrunc double %26 to float, !dbg !21
  %29 = add nsw i32 %14, -4, !dbg !22
  %30 = icmp ult i32 %29, 14, !dbg !22
  %31 = shl nsw i32 %14, 2, !dbg !23
  %32 = mul nsw i32 %16, 56, !dbg !24
  %33 = add nsw i32 %32, %.decomposed, !dbg !23
  %34 = add nsw i32 %33, -16, !dbg !25
  %35 = add nsw i32 %34, %31, !dbg !26
  %36 = sext i32 %35 to i64, !dbg !27
  %37 = getelementptr double, ptr addrspace(1) %1, i64 %36, !dbg !27
  %38 = tail call { i64, i64 } asm sideeffect "mov.u64 $0, $2;\0A\09mov.u64 $1, $3;\0A\09@$5 ld.global.v2.b64 { $0, $1 }, [ $4 + 0 ];", "=l,=l,l,l,l,b"(i64 0, i64 0, ptr addrspace(1) %37, i1 %30) #1, !dbg !28
  %39 = extractvalue { i64, i64 } %38, 0, !dbg !28
  %40 = extractvalue { i64, i64 } %38, 1, !dbg !28
  %41 = bitcast i64 %39 to double, !dbg !28
  %42 = bitcast i64 %40 to double, !dbg !28
  %43 = fptrunc double %41 to float, !dbg !29
  %44 = fptrunc double %42 to float, !dbg !29
  %45 = icmp sgt i32 %14, 17, !dbg !30
  %46 = add nsw i32 %33, -72, !dbg !31
  %47 = add nsw i32 %46, %31, !dbg !32
  %48 = sext i32 %47 to i64, !dbg !33
  %49 = getelementptr double, ptr addrspace(1) %2, i64 %48, !dbg !33
  %50 = tail call { i64, i64 } asm sideeffect "mov.u64 $0, $2;\0A\09mov.u64 $1, $3;\0A\09@$5 ld.global.v2.b64 { $0, $1 }, [ $4 + 0 ];", "=l,=l,l,l,l,b"(i64 0, i64 0, ptr addrspace(1) %49, i1 %45) #1, !dbg !34
  %51 = extractvalue { i64, i64 } %50, 0, !dbg !34
  %52 = extractvalue { i64, i64 } %50, 1, !dbg !34
  %53 = bitcast i64 %51 to double, !dbg !34
  %54 = bitcast i64 %52 to double, !dbg !34
  %55 = fptrunc double %53 to float, !dbg !35
  %56 = fptrunc double %54 to float, !dbg !35
  %57 = select i1 %45, float %55, float 0.000000e+00, !dbg !36
  %58 = select i1 %45, float %56, float 0.000000e+00, !dbg !36
  %59 = select i1 %30, float %43, float %57, !dbg !37
  %60 = select i1 %30, float %44, float %58, !dbg !37
  %61 = select i1 %17, float %27, float %59, !dbg !37
  %62 = select i1 %17, float %28, float %60, !dbg !37
  %63 = sext i32 %12 to i64, !dbg !38
  %64 = getelementptr float, ptr addrspace(1) %3, i64 %63, !dbg !38
  %65 = bitcast float %61 to i32, !dbg !39
  %66 = bitcast float %62 to i32, !dbg !39
  tail call void asm sideeffect "st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l"(i32 %65, i32 %66, ptr addrspace(1) %64) #1, !dbg !39
  ret void, !dbg !40
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cqxo43dcqhooszq2srvoezajlsfbp44flpwu5x2w3q5xrs3r3sfm.py", directory: "results/my_experiment/torchinductor_cache_0/qx")
!4 = !{ptr @triton_poi_fused_cat_11, !"reqntidx", i32 256}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_poi_fused_cat_11", linkageName: "triton_poi_fused_cat_11", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 20, column: 28, scope: !6)
!10 = !DILocation(line: 20, column: 33, scope: !6)
!11 = !DILocation(line: 21, column: 36, scope: !6)
!12 = !DILocation(line: 21, column: 23, scope: !6)
!13 = !DILocation(line: 23, column: 21, scope: !6)
!14 = !DILocation(line: 23, column: 26, scope: !6)
!15 = !DILocation(line: 24, column: 19, scope: !6)
!16 = !DILocation(line: 25, column: 19, scope: !6)
!17 = !DILocation(line: 31, column: 18, scope: !6)
!18 = !DILocation(line: 32, column: 44, scope: !6)
!19 = !DILocation(line: 32, column: 30, scope: !6)
!20 = !DILocation(line: 32, column: 52, scope: !6)
!21 = !DILocation(line: 33, column: 19, scope: !6)
!22 = !DILocation(line: 39, column: 19, scope: !6)
!23 = !DILocation(line: 40, column: 39, scope: !6)
!24 = !DILocation(line: 40, column: 55, scope: !6)
!25 = !DILocation(line: 40, column: 36, scope: !6)
!26 = !DILocation(line: 40, column: 52, scope: !6)
!27 = !DILocation(line: 40, column: 31, scope: !6)
!28 = !DILocation(line: 40, column: 60, scope: !6)
!29 = !DILocation(line: 41, column: 21, scope: !6)
!30 = !DILocation(line: 44, column: 20, scope: !6)
!31 = !DILocation(line: 47, column: 36, scope: !6)
!32 = !DILocation(line: 47, column: 53, scope: !6)
!33 = !DILocation(line: 47, column: 31, scope: !6)
!34 = !DILocation(line: 47, column: 61, scope: !6)
!35 = !DILocation(line: 48, column: 21, scope: !6)
!36 = !DILocation(line: 50, column: 35, scope: !6)
!37 = !DILocation(line: 0, scope: !6)
!38 = !DILocation(line: 53, column: 25, scope: !6)
!39 = !DILocation(line: 53, column: 37, scope: !6)
!40 = !DILocation(line: 53, column: 4, scope: !6)
