; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define ptx_kernel void @triton_red_fused__to_copy_mean_pow_9(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3, ptr addrspace(1) readnone captures(none) %4) local_unnamed_addr !dbg !6 {
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %7 = shl i32 %6, 3, !dbg !10
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %9 = lshr i32 %8, 5, !dbg !11
  %10 = and i32 %9, 7, !dbg !11
  %11 = and i32 %8, 7, !dbg !11
  %12 = or disjoint i32 %10, %7, !dbg !12
  %13 = or disjoint i32 %7, %11, !dbg !12
  %14 = icmp slt i32 %12, 6144, !dbg !13
  %15 = icmp slt i32 %13, 6144, !dbg !13
  %16 = shl i32 %8, 2, !dbg !14
  %17 = and i32 %16, 124, !dbg !14
  %18 = sdiv i32 %12, 12, !dbg !15
  %19 = mul i32 %18, 12, !dbg !16
  %.decomposed = sub i32 %12, %19, !dbg !16
  %20 = icmp samesign ult i32 %17, 96, !dbg !17
  %21 = or disjoint i32 %17, 1152, !dbg !18
  %22 = mul nsw i32 %.decomposed, 96, !dbg !19
  %23 = add nsw i32 %21, %22, !dbg !20
  %24 = mul i32 %18, 3456, !dbg !21
  %25 = add i32 %23, %24, !dbg !22
  %26 = sext i32 %25 to i64, !dbg !23
  %27 = getelementptr bfloat, ptr addrspace(1) %0, i64 %26, !dbg !23
  %28 = and i1 %20, %14, !dbg !24
  %29 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, $2;\0A\09mov.u32 $1, $3;\0A\09@$5 ld.global.L1::evict_first.v2.b32 { $0, $1 }, [ $4 + 0 ];", "=r,=r,r,r,l,b"(i32 0, i32 0, ptr addrspace(1) %27, i1 %28) #3, !dbg !25
  %30 = extractvalue { i32, i32 } %29, 0, !dbg !25
  %31 = bitcast i32 %30 to <2 x bfloat>, !dbg !25
  %32 = extractvalue { i32, i32 } %29, 1, !dbg !25
  %33 = bitcast i32 %32 to <2 x bfloat>, !dbg !25
  %34 = extractelement <2 x bfloat> %31, i64 0, !dbg !25
  %35 = extractelement <2 x bfloat> %31, i64 1, !dbg !25
  %36 = extractelement <2 x bfloat> %33, i64 0, !dbg !25
  %37 = extractelement <2 x bfloat> %33, i64 1, !dbg !25
  %38 = fpext bfloat %34 to float, !dbg !26
  %39 = fpext bfloat %35 to float, !dbg !26
  %40 = fpext bfloat %36 to float, !dbg !26
  %41 = fpext bfloat %37 to float, !dbg !26
  %42 = fmul float %38, %38, !dbg !27
  %43 = fmul float %39, %39, !dbg !27
  %44 = fmul float %40, %40, !dbg !27
  %45 = fmul float %41, %41, !dbg !27
  %46 = fadd float %42, %43, !dbg !28
  %47 = fadd float %44, %46, !dbg !28
  %48 = fadd float %45, %47, !dbg !28
  %49 = select i1 %28, float %48, float 0.000000e+00, !dbg !28
  %50 = bitcast float %49 to i32, !dbg !33
  %51 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %50, i32 16, i32 31), !dbg !33
  %52 = bitcast i32 %51 to float, !dbg !33
  %53 = fadd float %49, %52, !dbg !28
  %54 = bitcast float %53 to i32, !dbg !33
  %55 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %54, i32 8, i32 31), !dbg !33
  %56 = bitcast i32 %55 to float, !dbg !33
  %57 = fadd float %53, %56, !dbg !28
  %58 = bitcast float %57 to i32, !dbg !33
  %59 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %58, i32 4, i32 31), !dbg !33
  %60 = bitcast i32 %59 to float, !dbg !33
  %61 = fadd float %57, %60, !dbg !28
  %62 = bitcast float %61 to i32, !dbg !33
  %63 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %62, i32 2, i32 31), !dbg !33
  %64 = bitcast i32 %63 to float, !dbg !33
  %65 = fadd float %61, %64, !dbg !28
  %66 = bitcast float %65 to i32, !dbg !33
  %67 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %66, i32 1, i32 31), !dbg !33
  %68 = bitcast i32 %67 to float, !dbg !33
  %69 = fadd float %65, %68, !dbg !28
  %70 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %10, !dbg !34
  %71 = bitcast float %69 to <1 x i32>, !dbg !34
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %70, <1 x i32> %71, i1 true) #3, !dbg !34
  tail call void @llvm.nvvm.barrier0(), !dbg !34
  %72 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %11, !dbg !34
  %73 = load i32, ptr addrspace(3) %72, align 4, !dbg !34
  %74 = sext i32 %13 to i64, !dbg !35
  %75 = getelementptr float, ptr addrspace(1) %1, i64 %74, !dbg !35
  %76 = and i32 %8, 248, !dbg !36
  %77 = icmp eq i32 %76, 0, !dbg !36
  %78 = and i1 %77, %15, !dbg !36
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %73, ptr addrspace(1) %75, i1 %78) #3, !dbg !36
  ret void, !dbg !37
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py", directory: "results/my_experiment/torchinductor_cache_0/uw")
!4 = !{ptr @triton_red_fused__to_copy_mean_pow_9, !"reqntidx", i32 256}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_red_fused__to_copy_mean_pow_9", linkageName: "triton_red_fused__to_copy_mean_pow_9", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 23, column: 28, scope: !6)
!10 = !DILocation(line: 23, column: 33, scope: !6)
!11 = !DILocation(line: 24, column: 44, scope: !6)
!12 = !DILocation(line: 24, column: 23, scope: !6)
!13 = !DILocation(line: 25, column: 21, scope: !6)
!14 = !DILocation(line: 26, column: 37, scope: !6)
!15 = !DILocation(line: 29, column: 19, scope: !6)
!16 = !DILocation(line: 28, column: 19, scope: !6)
!17 = !DILocation(line: 34, column: 29, scope: !6)
!18 = !DILocation(line: 38, column: 41, scope: !6)
!19 = !DILocation(line: 38, column: 51, scope: !6)
!20 = !DILocation(line: 38, column: 48, scope: !6)
!21 = !DILocation(line: 38, column: 61, scope: !6)
!22 = !DILocation(line: 38, column: 56, scope: !6)
!23 = !DILocation(line: 38, column: 34, scope: !6)
!24 = !DILocation(line: 38, column: 74, scope: !6)
!25 = !DILocation(line: 38, column: 66, scope: !6)
!26 = !DILocation(line: 38, column: 128, scope: !6)
!27 = !DILocation(line: 40, column: 22, scope: !6)
!28 = !DILocation(line: 256, column: 15, scope: !29, inlinedAt: !32)
!29 = distinct !DILexicalBlockFile(scope: !31, file: !30, discriminator: 0)
!30 = !DIFile(filename: "standard.py", directory: "/home/utka/proj/evs/vlm/lib/python3.12/site-packages/triton/language")
!31 = distinct !DILexicalBlockFile(scope: !6, file: !30, discriminator: 0)
!32 = !DILocation(line: 44, column: 25, scope: !6)
!33 = !DILocation(line: 286, column: 36, scope: !31, inlinedAt: !32)
!34 = !DILocation(line: 44, column: 28, scope: !6)
!35 = !DILocation(line: 45, column: 25, scope: !6)
!36 = !DILocation(line: 45, column: 36, scope: !6)
!37 = !DILocation(line: 45, column: 4, scope: !6)
