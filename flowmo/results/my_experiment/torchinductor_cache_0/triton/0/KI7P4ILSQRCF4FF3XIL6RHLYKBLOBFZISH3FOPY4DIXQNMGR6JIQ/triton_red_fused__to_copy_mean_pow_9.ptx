//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_red_fused__to_copy_mean_pow_9 // -- Begin function triton_red_fused__to_copy_mean_pow_9
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused__to_copy_mean_pow_9
.visible .entry triton_red_fused__to_copy_mean_pow_9(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_mean_pow_9_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_mean_pow_9_param_1,
	.param .u32 triton_red_fused__to_copy_mean_pow_9_param_2,
	.param .u32 triton_red_fused__to_copy_mean_pow_9_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_mean_pow_9_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<97>;
	.reg .f32 	%f<26>;
	.reg .b64 	%rd<39>;
	.loc	1 18 0                          // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:18:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_red_fused__to_copy_mean_pow_9_param_1];
	ld.param.u64 	%rd4, [triton_red_fused__to_copy_mean_pow_9_param_0];
$L__tmp0:
	.loc	1 23 28                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:23:28
	mov.u32 	%r1, %ctaid.x;
	.loc	1 23 33                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:23:33
	shl.b32 	%r2, %r1, 6;
	.loc	1 24 44                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:24:44
	mov.u32 	%r3, %tid.x;
	bfe.u32 	%r4, %r3, 1, 6;
	.loc	1 24 23                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:24:23
	or.b32  	%r8, %r4, %r2;
	.loc	1 25 21                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:25:21
	setp.gt.s32 	%p1, %r8, 6143;
	.loc	1 26 37                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:26:37
	shl.b32 	%r9, %r3, 2;
	and.b32  	%r5, %r9, 4;
	.loc	1 29 19                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:29:19
	mul.hi.s32 	%r10, %r8, 715827883;
	shr.u32 	%r11, %r10, 31;
	shr.s32 	%r12, %r10, 1;
	add.s32 	%r6, %r12, %r11;
	@%p1 bra 	$L__BB0_5;
// %bb.1:                               // %.split.us.preheader
	.loc	1 32 40                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:32:40
	mul.lo.s32 	%r75, %r6, 2304;
	mad.lo.s32 	%r76, %r1, 6144, %r75;
	mad.lo.s32 	%r77, %r4, 96, %r76;
	or.b32  	%r78, %r77, %r5;
	cvt.u64.u32 	%rd1, %r78;
	mov.f32 	%f21, 0f00000000;
	mov.b64 	%rd38, -8;
	mov.f32 	%f22, %f21;
	mov.f32 	%f23, %f21;
	mov.f32 	%f24, %f21;
$L__BB0_2:                              // %.split.us
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 38 34                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:34
	add.s64 	%rd34, %rd1, %rd38;
	cvt.u32.u64 	%r83, %rd34;
	add.s32 	%r84, %r83, 1160;
	mul.wide.s32 	%rd35, %r84, 2;
	add.s64 	%rd33, %rd4, %rd35;
	mov.b32 	%r81, 0;
	mov.pred 	%p14, -1;
	.loc	1 38 66                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:66
	// begin inline asm
	mov.u32 %r79, %r81;
	mov.u32 %r80, %r81;
	@%p14 ld.global.L1::evict_first.v2.b32 { %r79, %r80 }, [ %rd33 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r79;
	mov.b32 	{%rs3, %rs4}, %r80;
	.loc	1 38 128                        // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:128
	cvt.f32.bf16 	%f13, %rs1;
	cvt.f32.bf16 	%f14, %rs2;
	cvt.f32.bf16 	%f15, %rs3;
	cvt.f32.bf16 	%f16, %rs4;
	.loc	1 42 23                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:42:23
	fma.rn.f32 	%f21, %f13, %f13, %f21;
	fma.rn.f32 	%f22, %f14, %f14, %f22;
	fma.rn.f32 	%f23, %f15, %f15, %f23;
	fma.rn.f32 	%f24, %f16, %f16, %f24;
	.loc	1 32 40                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:32:40
	add.s64 	%rd38, %rd38, 8;
	setp.lt.u64 	%p15, %rd38, 88;
	@%p15 bra 	$L__BB0_2;
// %bb.3:                               // %.split4.us.loopexit
	.loc	1 24 44                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:24:44
	add.f32 	%f17, %f21, %f22;
	add.f32 	%f18, %f23, %f17;
	add.f32 	%f25, %f24, %f18;
	bra.uni 	$L__BB0_4;
$L__BB0_5:                              // %.split.preheader
	.loc	1 0 44                          // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:0:44
	mul.lo.s32 	%r13, %r6, 12;
	sub.s32 	%r14, %r8, %r13;
	mul.lo.s32 	%r15, %r6, 3456;
	mad.lo.s32 	%r16, %r14, 96, %r15;
	add.s32 	%r7, %r16, 1152;
	.loc	1 38 56                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:56
	or.b32  	%r65, %r7, %r5;
	.loc	1 38 34                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:34
	mul.wide.s32 	%rd18, %r65, 2;
	add.s64 	%rd6, %rd4, %rd18;
	mov.b32 	%r19, 0;
	mov.pred 	%p2, 0;
	.loc	1 38 66                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:66
	// begin inline asm
	mov.u32 %r17, %r19;
	mov.u32 %r18, %r19;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r17, %r18 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 38 34                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:34
	cvt.s64.s32 	%rd19, %r7;
	cvt.u64.u32 	%rd20, %r5;
	add.s64 	%rd21, %rd19, %rd20;
	shl.b64 	%rd22, %rd21, 1;
	add.s64 	%rd23, %rd4, %rd22;
	add.s64 	%rd7, %rd23, 16;
	.loc	1 38 66                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:66
	// begin inline asm
	mov.u32 %r21, %r19;
	mov.u32 %r22, %r19;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r21, %r22 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 38 34                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:34
	add.s64 	%rd8, %rd23, 32;
	.loc	1 38 66                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:66
	// begin inline asm
	mov.u32 %r25, %r19;
	mov.u32 %r26, %r19;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r25, %r26 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 38 34                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:34
	add.s64 	%rd9, %rd23, 48;
	.loc	1 38 66                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:66
	// begin inline asm
	mov.u32 %r29, %r19;
	mov.u32 %r30, %r19;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r29, %r30 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 38 56                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:56
	add.s32 	%r66, %r7, %r5;
	add.s32 	%r67, %r66, 32;
	.loc	1 38 34                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:34
	mul.wide.s32 	%rd24, %r67, 2;
	add.s64 	%rd10, %rd4, %rd24;
	.loc	1 38 66                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:66
	// begin inline asm
	mov.u32 %r33, %r19;
	mov.u32 %r34, %r19;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r33, %r34 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 38 56                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:56
	add.s32 	%r68, %r66, 40;
	.loc	1 38 34                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:34
	mul.wide.s32 	%rd25, %r68, 2;
	add.s64 	%rd11, %rd4, %rd25;
	.loc	1 38 66                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:66
	// begin inline asm
	mov.u32 %r37, %r19;
	mov.u32 %r38, %r19;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r37, %r38 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 38 56                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:56
	add.s32 	%r69, %r66, 48;
	.loc	1 38 34                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:34
	mul.wide.s32 	%rd26, %r69, 2;
	add.s64 	%rd12, %rd4, %rd26;
	.loc	1 38 66                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:66
	// begin inline asm
	mov.u32 %r41, %r19;
	mov.u32 %r42, %r19;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r41, %r42 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 38 56                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:56
	add.s32 	%r70, %r66, 56;
	.loc	1 38 34                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:34
	mul.wide.s32 	%rd27, %r70, 2;
	add.s64 	%rd13, %rd4, %rd27;
	.loc	1 38 66                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:66
	// begin inline asm
	mov.u32 %r45, %r19;
	mov.u32 %r46, %r19;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r45, %r46 }, [ %rd13 + 0 ];
	// end inline asm
	.loc	1 38 56                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:56
	add.s32 	%r71, %r66, 64;
	.loc	1 38 34                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:34
	mul.wide.s32 	%rd28, %r71, 2;
	add.s64 	%rd14, %rd4, %rd28;
	.loc	1 38 66                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:66
	// begin inline asm
	mov.u32 %r49, %r19;
	mov.u32 %r50, %r19;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r49, %r50 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 38 56                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:56
	add.s32 	%r72, %r66, 72;
	.loc	1 38 34                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:34
	mul.wide.s32 	%rd29, %r72, 2;
	add.s64 	%rd15, %rd4, %rd29;
	.loc	1 38 66                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:66
	// begin inline asm
	mov.u32 %r53, %r19;
	mov.u32 %r54, %r19;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r53, %r54 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 38 56                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:56
	add.s32 	%r73, %r66, 80;
	.loc	1 38 34                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:34
	mul.wide.s32 	%rd30, %r73, 2;
	add.s64 	%rd16, %rd4, %rd30;
	.loc	1 38 66                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:66
	// begin inline asm
	mov.u32 %r57, %r19;
	mov.u32 %r58, %r19;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r57, %r58 }, [ %rd16 + 0 ];
	// end inline asm
	.loc	1 38 56                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:56
	add.s32 	%r74, %r66, 88;
	.loc	1 38 34                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:34
	mul.wide.s32 	%rd31, %r74, 2;
	add.s64 	%rd17, %rd4, %rd31;
	.loc	1 38 66                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:38:66
	// begin inline asm
	mov.u32 %r61, %r19;
	mov.u32 %r62, %r19;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r61, %r62 }, [ %rd17 + 0 ];
	// end inline asm
	mov.f32 	%f25, 0f00000000;
$L__BB0_4:                              // %.split4.us
	.loc	1 24 44                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:24:44
	and.b32  	%r88, %r3, 63;
	.loc	1 24 23                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:24:23
	or.b32  	%r89, %r2, %r88;
	.loc	1 25 21                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:25:21
	setp.lt.s32 	%p18, %r89, 6144;
	.loc	1 24 44                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:24:44
	and.b32  	%r90, %r3, 64;
	setp.eq.s32 	%p19, %r90, 0;
$L__tmp1:
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r91, %f25;
	shfl.sync.bfly.b32	%r92, %r91, 1, 31, -1;
	mov.b32 	%f19, %r92;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f25, %f19;
$L__tmp2:
	.loc	1 44 28                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:44:28
	shl.b32 	%r93, %r4, 2;
	mov.u32 	%r94, global_smem;
	add.s32 	%r85, %r94, %r93;
	mov.b32 	%r86, %f20;
	mov.pred 	%p16, -1;
	// begin inline asm
	@%p16 st.shared.b32 [ %r85 + 0 ], %r86;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r95, %r88, 2;
	add.s32 	%r96, %r94, %r95;
	ld.shared.u32 	%r87, [%r96];
	.loc	1 45 25                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:45:25
	mul.wide.s32 	%rd37, %r89, 4;
	add.s64 	%rd36, %rd5, %rd37;
	.loc	1 45 36                         // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:45:36
	and.pred  	%p17, %p19, %p18;
	// begin inline asm
	@%p17 st.global.b32 [ %rd36 + 0 ], { %r87 };
	// end inline asm
	.loc	1 45 4                          // cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py:45:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "results/my_experiment/torchinductor_cache_0/uw/cuwgp6q2xoojbitpl7faygm7upgsuy75sl7h66reu5avftunejd7.py"
	.file	2 "/home/utka/proj/evs/vlm/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 210                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xcb DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 117
.b8 119
.b8 103
.b8 112
.b8 54
.b8 113
.b8 50
.b8 120
.b8 111
.b8 111
.b8 106
.b8 98
.b8 105
.b8 116
.b8 112
.b8 108
.b8 55
.b8 102
.b8 97
.b8 121
.b8 103
.b8 109
.b8 55
.b8 117
.b8 112
.b8 103
.b8 115
.b8 117
.b8 121
.b8 55
.b8 53
.b8 115
.b8 108
.b8 55
.b8 104
.b8 54
.b8 54
.b8 114
.b8 101
.b8 117
.b8 53
.b8 97
.b8 118
.b8 102
.b8 116
.b8 117
.b8 110
.b8 101
.b8 106
.b8 100
.b8 55
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 114                                 // DW_AT_comp_dir
.b8 101
.b8 115
.b8 117
.b8 108
.b8 116
.b8 115
.b8 47
.b8 109
.b8 121
.b8 95
.b8 101
.b8 120
.b8 112
.b8 101
.b8 114
.b8 105
.b8 109
.b8 101
.b8 110
.b8 116
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 95
.b8 48
.b8 47
.b8 117
.b8 119
.b8 0
.b8 2                                   // Abbrev [2] 0x80:0x27 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 57
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa7:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 128                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbc:0x18 DW_TAG_inlined_subroutine
.b32 128                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
