; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define ptx_kernel void @triton_poi_fused__to_copy_13(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5, ptr addrspace(1) readnone captures(none) %6) local_unnamed_addr !dbg !6 {
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %9 = shl i32 %8, 9, !dbg !10
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %11 = shl i32 %10, 1, !dbg !11
  %12 = and i32 %11, 510, !dbg !11
  %13 = or disjoint i32 %12, %9, !dbg !12
  %14 = or disjoint i32 %13, 1, !dbg !12
  %15 = sdiv i32 %13, 5013504, !dbg !13
  %16 = srem i32 %13, 417792, !dbg !14
  %17 = srem i32 %14, 417792, !dbg !14
  %18 = srem i32 %13, 96, !dbg !15
  %19 = srem i32 %14, 96, !dbg !15
  %20 = shl nsw i32 %16, 1, !dbg !16
  %21 = shl nsw i32 %17, 1, !dbg !16
  %22 = mul nsw i32 %15, 835584, !dbg !17
  %23 = add nsw i32 %20, %22, !dbg !18
  %24 = add nsw i32 %21, %22, !dbg !18
  %25 = sext i32 %23 to i64, !dbg !19
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !19
  %27 = sext i32 %24 to i64, !dbg !19
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !19
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %26) #1, !dbg !20
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %28) #1, !dbg !20
  %.lhs.trunc = trunc nsw i32 %18 to i8, !dbg !21
  %31 = ashr exact i8 %.lhs.trunc, 1, !dbg !21
  %.sext = sext i8 %31 to i32, !dbg !21
  %.lhs.trunc5 = trunc nsw i32 %19 to i8, !dbg !21
  %32 = sdiv i8 %.lhs.trunc5, 2, !dbg !21
  %.sext6 = sext i8 %32 to i32, !dbg !21
  %33 = shl nsw i32 %.sext, 1, !dbg !22
  %34 = shl nsw i32 %.sext6, 1, !dbg !22
  %35 = sub nsw i32 %13, %18, !dbg !23
  %36 = add i32 %33, %35, !dbg !24
  %37 = add i32 %34, %35, !dbg !24
  %38 = sext i32 %36 to i64, !dbg !25
  %39 = getelementptr float, ptr addrspace(1) %1, i64 %38, !dbg !25
  %40 = sext i32 %37 to i64, !dbg !25
  %41 = getelementptr float, ptr addrspace(1) %1, i64 %40, !dbg !25
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %39) #1, !dbg !26
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %41) #1, !dbg !26
  %44 = or disjoint i32 %20, 1, !dbg !27
  %45 = add nsw i32 %44, %22, !dbg !28
  %46 = or disjoint i32 %22, 1, !dbg !27
  %47 = add nsw i32 %46, %21, !dbg !28
  %48 = sext i32 %45 to i64, !dbg !29
  %49 = getelementptr float, ptr addrspace(1) %0, i64 %48, !dbg !29
  %50 = sext i32 %47 to i64, !dbg !29
  %51 = getelementptr float, ptr addrspace(1) %0, i64 %50, !dbg !29
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %49) #1, !dbg !30
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %51) #1, !dbg !30
  %54 = or disjoint i32 %35, 1, !dbg !31
  %55 = add i32 %54, %33, !dbg !32
  %56 = add i32 %54, %34, !dbg !32
  %57 = sext i32 %55 to i64, !dbg !33
  %58 = getelementptr float, ptr addrspace(1) %1, i64 %57, !dbg !33
  %59 = sext i32 %56 to i64, !dbg !33
  %60 = getelementptr float, ptr addrspace(1) %1, i64 %59, !dbg !33
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %58) #1, !dbg !34
  %62 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %60) #1, !dbg !34
  %63 = getelementptr float, ptr addrspace(1) %2, i64 %38, !dbg !35
  %64 = getelementptr float, ptr addrspace(1) %2, i64 %40, !dbg !35
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %63) #1, !dbg !36
  %66 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %64) #1, !dbg !36
  %67 = getelementptr float, ptr addrspace(1) %2, i64 %57, !dbg !37
  %68 = getelementptr float, ptr addrspace(1) %2, i64 %59, !dbg !37
  %69 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %67) #1, !dbg !38
  %70 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %68) #1, !dbg !38
  %71 = sext i32 %13 to i64, !dbg !39
  %72 = getelementptr bfloat, ptr addrspace(1) %3, i64 %71, !dbg !39
  %73 = insertelement <2 x i32> poison, i32 %42, i64 0, !dbg !26
  %74 = insertelement <2 x i32> %73, i32 %30, i64 1, !dbg !26
  %75 = bitcast <2 x i32> %74 to <2 x float>, !dbg !26
  %76 = insertelement <2 x i32> poison, i32 %29, i64 0, !dbg !20
  %77 = insertelement <2 x i32> %76, i32 %43, i64 1, !dbg !20
  %78 = bitcast <2 x i32> %77 to <2 x float>, !dbg !20
  %79 = insertelement <2 x i32> poison, i32 %61, i64 0, !dbg !34
  %80 = insertelement <2 x i32> %79, i32 %53, i64 1, !dbg !34
  %81 = bitcast <2 x i32> %80 to <2 x float>, !dbg !34
  %82 = insertelement <2 x i32> poison, i32 %52, i64 0, !dbg !30
  %83 = insertelement <2 x i32> %82, i32 %62, i64 1, !dbg !30
  %84 = bitcast <2 x i32> %83 to <2 x float>, !dbg !30
  %85 = fmul <2 x float> %75, %78, !dbg !40
  %86 = fmul <2 x float> %81, %84, !dbg !41
  %87 = fadd <2 x float> %85, %86, !dbg !42
  %88 = fptrunc <2 x float> %87 to <2 x bfloat>, !dbg !43
  %89 = bitcast <2 x bfloat> %88 to i32, !dbg !43
  tail call void asm sideeffect "st.global.b32 [ $1 + 0 ], { $0 };", "r,l"(i32 %89, ptr addrspace(1) %72) #1, !dbg !43
  %90 = getelementptr bfloat, ptr addrspace(1) %4, i64 %71, !dbg !44
  %91 = insertelement <2 x i32> poison, i32 %65, i64 0, !dbg !36
  %92 = insertelement <2 x i32> %91, i32 %66, i64 1, !dbg !36
  %93 = bitcast <2 x i32> %92 to <2 x float>, !dbg !36
  %94 = insertelement <2 x i32> poison, i32 %69, i64 0, !dbg !38
  %95 = insertelement <2 x i32> %94, i32 %70, i64 1, !dbg !38
  %96 = bitcast <2 x i32> %95 to <2 x float>, !dbg !38
  %97 = insertelement <2 x i32> %76, i32 %30, i64 1, !dbg !20
  %98 = bitcast <2 x i32> %97 to <2 x float>, !dbg !20
  %99 = insertelement <2 x i32> %82, i32 %53, i64 1, !dbg !30
  %100 = bitcast <2 x i32> %99 to <2 x float>, !dbg !30
  %101 = fmul <2 x float> %98, %93, !dbg !45
  %102 = fmul <2 x float> %100, %96, !dbg !46
  %103 = fadd <2 x float> %101, %102, !dbg !47
  %104 = fptrunc <2 x float> %103 to <2 x bfloat>, !dbg !48
  %105 = bitcast <2 x bfloat> %104 to i32, !dbg !48
  tail call void asm sideeffect "st.global.b32 [ $1 + 0 ], { $0 };", "r,l"(i32 %105, ptr addrspace(1) %90) #1, !dbg !48
  ret void, !dbg !49
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cz5bsmvy4vpmw334kld47e3roamvykzjdthccx23rhizodac5bkq.py", directory: "results/my_experiment/torchinductor_cache_0/z5")
!4 = !{ptr @triton_poi_fused__to_copy_13, !"reqntidx", i32 256}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_poi_fused__to_copy_13", linkageName: "triton_poi_fused__to_copy_13", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 20, column: 28, scope: !6)
!10 = !DILocation(line: 20, column: 33, scope: !6)
!11 = !DILocation(line: 21, column: 36, scope: !6)
!12 = !DILocation(line: 21, column: 23, scope: !6)
!13 = !DILocation(line: 23, column: 19, scope: !6)
!14 = !DILocation(line: 24, column: 19, scope: !6)
!15 = !DILocation(line: 25, column: 19, scope: !6)
!16 = !DILocation(line: 28, column: 32, scope: !6)
!17 = !DILocation(line: 28, column: 44, scope: !6)
!18 = !DILocation(line: 28, column: 37, scope: !6)
!19 = !DILocation(line: 28, column: 30, scope: !6)
!20 = !DILocation(line: 28, column: 49, scope: !6)
!21 = !DILocation(line: 29, column: 39, scope: !6)
!22 = !DILocation(line: 29, column: 33, scope: !6)
!23 = !DILocation(line: 29, column: 47, scope: !6)
!24 = !DILocation(line: 29, column: 44, scope: !6)
!25 = !DILocation(line: 29, column: 30, scope: !6)
!26 = !DILocation(line: 29, column: 52, scope: !6)
!27 = !DILocation(line: 30, column: 34, scope: !6)
!28 = !DILocation(line: 30, column: 41, scope: !6)
!29 = !DILocation(line: 30, column: 30, scope: !6)
!30 = !DILocation(line: 30, column: 53, scope: !6)
!31 = !DILocation(line: 31, column: 34, scope: !6)
!32 = !DILocation(line: 31, column: 48, scope: !6)
!33 = !DILocation(line: 31, column: 30, scope: !6)
!34 = !DILocation(line: 31, column: 56, scope: !6)
!35 = !DILocation(line: 32, column: 30, scope: !6)
!36 = !DILocation(line: 32, column: 52, scope: !6)
!37 = !DILocation(line: 33, column: 31, scope: !6)
!38 = !DILocation(line: 33, column: 57, scope: !6)
!39 = !DILocation(line: 42, column: 25, scope: !6)
!40 = !DILocation(line: 34, column: 18, scope: !6)
!41 = !DILocation(line: 35, column: 18, scope: !6)
!42 = !DILocation(line: 36, column: 18, scope: !6)
!43 = !DILocation(line: 42, column: 36, scope: !6)
!44 = !DILocation(line: 43, column: 25, scope: !6)
!45 = !DILocation(line: 38, column: 18, scope: !6)
!46 = !DILocation(line: 39, column: 19, scope: !6)
!47 = !DILocation(line: 40, column: 19, scope: !6)
!48 = !DILocation(line: 43, column: 37, scope: !6)
!49 = !DILocation(line: 43, column: 4, scope: !6)
