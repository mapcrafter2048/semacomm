; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define ptx_kernel void @triton_per_fused__log_softmax__log_softmax_backward_data__softmax__softmax_backward_data__to_copy_add_div_mul_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7, i32 %8, ptr addrspace(1) readnone captures(none) %9) local_unnamed_addr !dbg !6 {
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %13 = shl i32 %12, 2, !dbg !10
  %14 = and i32 %13, 508, !dbg !10
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %1) #5, !dbg !11
  %16 = shl i32 %11, 9, !dbg !12
  %17 = or disjoint i32 %14, %16, !dbg !13
  %18 = sext i32 %17 to i64, !dbg !14
  %19 = getelementptr bfloat, ptr addrspace(1) %0, i64 %18, !dbg !14
  %20 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l"(ptr addrspace(1) %19) #5, !dbg !15
  %21 = sext i32 %11 to i64, !dbg !16
  %22 = getelementptr float, ptr addrspace(1) %2, i64 %21, !dbg !16
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %22) #5, !dbg !17
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %22) #5, !dbg !17
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %22) #5, !dbg !17
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %22) #5, !dbg !17
  %27 = getelementptr float, ptr addrspace(1) %3, i64 %21, !dbg !18
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %27) #5, !dbg !19
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %27) #5, !dbg !19
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %27) #5, !dbg !19
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %27) #5, !dbg !19
  %32 = zext nneg i32 %14 to i64, !dbg !20
  %33 = getelementptr float, ptr addrspace(1) %4, i64 %32, !dbg !20
  %34 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l"(ptr addrspace(1) %33) #5, !dbg !21
  %35 = extractvalue { i32, i32, i32, i32 } %34, 0, !dbg !21
  %36 = extractvalue { i32, i32, i32, i32 } %34, 1, !dbg !21
  %37 = extractvalue { i32, i32, i32, i32 } %34, 2, !dbg !21
  %38 = extractvalue { i32, i32, i32, i32 } %34, 3, !dbg !21
  %39 = bitcast i32 %35 to float, !dbg !21
  %40 = bitcast i32 %36 to float, !dbg !21
  %41 = bitcast i32 %37 to float, !dbg !21
  %42 = bitcast i32 %38 to float, !dbg !21
  %43 = getelementptr float, ptr addrspace(1) %5, i64 %21, !dbg !22
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %43) #5, !dbg !23
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %43) #5, !dbg !23
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %43) #5, !dbg !23
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %43) #5, !dbg !23
  %48 = getelementptr float, ptr addrspace(1) %6, i64 %21, !dbg !24
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %48) #5, !dbg !25
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %48) #5, !dbg !25
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %48) #5, !dbg !25
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %48) #5, !dbg !25
  %53 = fadd float %39, 0x3EE4F8B580000000, !dbg !26
  %54 = fadd float %40, 0x3EE4F8B580000000, !dbg !26
  %55 = fadd float %41, 0x3EE4F8B580000000, !dbg !26
  %56 = fadd float %42, 0x3EE4F8B580000000, !dbg !26
  %57 = fcmp olt float %53, 0x3810000000000000, !dbg !27
  %58 = fmul float %53, 0x4160000000000000, !dbg !27
  %.02.i = select i1 %57, float %58, float %53, !dbg !27
  %i.i.0.i = select i1 %57, float -2.300000e+01, float 0.000000e+00, !dbg !27
  %59 = bitcast float %.02.i to i32, !dbg !27
  %60 = add i32 %59, -1059760811, !dbg !27
  %61 = and i32 %60, -8388608, !dbg !27
  %62 = sub i32 %59, %61, !dbg !27
  %63 = bitcast i32 %62 to float, !dbg !27
  %64 = sitofp i32 %61 to float, !dbg !27
  %65 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not.i = icmp eq i32 %65, 0, !dbg !27
  %66 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %64, float 0x3E80000000000000, float %i.i.0.i) #5, !dbg !27
  %67 = tail call float @llvm.nvvm.fma.rn.f(float %64, float 0x3E80000000000000, float %i.i.0.i) #5, !dbg !27
  %.08.i = select i1 %.not.i, float %67, float %66, !dbg !27
  %68 = fadd float %63, -1.000000e+00, !dbg !27
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not1.i = icmp eq i32 %69, 0, !dbg !27
  %70 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %68, float 0x3FC2073EC0000000) #5, !dbg !27
  %71 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %68, float 0x3FC2073EC0000000) #5, !dbg !27
  %.010.i = select i1 %.not1.i, float %71, float %70, !dbg !27
  %72 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not2.i = icmp eq i32 %72, 0, !dbg !27
  %73 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %68, float 0xBFBF19B980000000) #5, !dbg !27
  %74 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %68, float 0xBFBF19B980000000) #5, !dbg !27
  %.011.i = select i1 %.not2.i, float %74, float %73, !dbg !27
  %75 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not3.i = icmp eq i32 %75, 0, !dbg !27
  %76 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %68, float 0x3FC1E52AA0000000) #5, !dbg !27
  %77 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %68, float 0x3FC1E52AA0000000) #5, !dbg !27
  %.012.i = select i1 %.not3.i, float %77, float %76, !dbg !27
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not4.i = icmp eq i32 %78, 0, !dbg !27
  %79 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %68, float 0xBFC55B1720000000) #5, !dbg !27
  %80 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %68, float 0xBFC55B1720000000) #5, !dbg !27
  %.09.i = select i1 %.not4.i, float %80, float %79, !dbg !27
  %81 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not5.i = icmp eq i32 %81, 0, !dbg !27
  %82 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %68, float 0x3FC99DA160000000) #5, !dbg !27
  %83 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %68, float 0x3FC99DA160000000) #5, !dbg !27
  %.05.i = select i1 %.not5.i, float %83, float %82, !dbg !27
  %84 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not6.i = icmp eq i32 %84, 0, !dbg !27
  %85 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %68, float 0xBFCFFFE440000000) #5, !dbg !27
  %86 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %68, float 0xBFCFFFE440000000) #5, !dbg !27
  %.01.i = select i1 %.not6.i, float %86, float %85, !dbg !27
  %87 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not7.i = icmp eq i32 %87, 0, !dbg !27
  %88 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %68, float 0x3FD5554F00000000) #5, !dbg !27
  %89 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %68, float 0x3FD5554F00000000) #5, !dbg !27
  %.0.i = select i1 %.not7.i, float %89, float %88, !dbg !27
  %90 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not8.i = icmp eq i32 %90, 0, !dbg !27
  %91 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %68, float -5.000000e-01) #5, !dbg !27
  %92 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %68, float -5.000000e-01) #5, !dbg !27
  %.07.i = select i1 %.not8.i, float %92, float %91, !dbg !27
  %93 = fmul float %68, %.07.i, !dbg !27
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not9.i = icmp eq i32 %94, 0, !dbg !27
  %95 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %93, float %68, float %68) #5, !dbg !27
  %96 = tail call float @llvm.nvvm.fma.rn.f(float %93, float %68, float %68) #5, !dbg !27
  %.06.i = select i1 %.not9.i, float %96, float %95, !dbg !27
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not10.i = icmp eq i32 %97, 0, !dbg !27
  %98 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #5, !dbg !27
  %99 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #5, !dbg !27
  %.04.i = select i1 %.not10.i, float %99, float %98, !dbg !27
  %100 = icmp ugt i32 %59, 2139095039, !dbg !27
  br i1 %100, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !27

__nv_fmaf_rn.exit.i.i:                            ; preds = %10
  %101 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not11.i = icmp eq i32 %101, 0, !dbg !27
  %102 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !27
  %103 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !27
  %.03.i = select i1 %.not11.i, float %103, float %102, !dbg !27
  br label %__nv_logf.exit, !dbg !27

__nv_logf.exit:                                   ; preds = %10, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %10 ], !dbg !27
  %104 = fcmp olt float %54, 0x3810000000000000, !dbg !27
  %105 = fmul float %54, 0x4160000000000000, !dbg !27
  %.02.i1 = select i1 %104, float %105, float %54, !dbg !27
  %i.i.0.i2 = select i1 %104, float -2.300000e+01, float 0.000000e+00, !dbg !27
  %106 = bitcast float %.02.i1 to i32, !dbg !27
  %107 = add i32 %106, -1059760811, !dbg !27
  %108 = and i32 %107, -8388608, !dbg !27
  %109 = sub i32 %106, %108, !dbg !27
  %110 = bitcast i32 %109 to float, !dbg !27
  %111 = sitofp i32 %108 to float, !dbg !27
  %112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not.i3 = icmp eq i32 %112, 0, !dbg !27
  %113 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %111, float 0x3E80000000000000, float %i.i.0.i2) #5, !dbg !27
  %114 = tail call float @llvm.nvvm.fma.rn.f(float %111, float 0x3E80000000000000, float %i.i.0.i2) #5, !dbg !27
  %.08.i4 = select i1 %.not.i3, float %114, float %113, !dbg !27
  %115 = fadd float %110, -1.000000e+00, !dbg !27
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not1.i5 = icmp eq i32 %116, 0, !dbg !27
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %115, float 0x3FC2073EC0000000) #5, !dbg !27
  %118 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %115, float 0x3FC2073EC0000000) #5, !dbg !27
  %.010.i6 = select i1 %.not1.i5, float %118, float %117, !dbg !27
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not2.i7 = icmp eq i32 %119, 0, !dbg !27
  %120 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i6, float %115, float 0xBFBF19B980000000) #5, !dbg !27
  %121 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i6, float %115, float 0xBFBF19B980000000) #5, !dbg !27
  %.011.i8 = select i1 %.not2.i7, float %121, float %120, !dbg !27
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not3.i9 = icmp eq i32 %122, 0, !dbg !27
  %123 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i8, float %115, float 0x3FC1E52AA0000000) #5, !dbg !27
  %124 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i8, float %115, float 0x3FC1E52AA0000000) #5, !dbg !27
  %.012.i10 = select i1 %.not3.i9, float %124, float %123, !dbg !27
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not4.i11 = icmp eq i32 %125, 0, !dbg !27
  %126 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i10, float %115, float 0xBFC55B1720000000) #5, !dbg !27
  %127 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i10, float %115, float 0xBFC55B1720000000) #5, !dbg !27
  %.09.i12 = select i1 %.not4.i11, float %127, float %126, !dbg !27
  %128 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not5.i13 = icmp eq i32 %128, 0, !dbg !27
  %129 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i12, float %115, float 0x3FC99DA160000000) #5, !dbg !27
  %130 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i12, float %115, float 0x3FC99DA160000000) #5, !dbg !27
  %.05.i14 = select i1 %.not5.i13, float %130, float %129, !dbg !27
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not6.i15 = icmp eq i32 %131, 0, !dbg !27
  %132 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %115, float 0xBFCFFFE440000000) #5, !dbg !27
  %133 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %115, float 0xBFCFFFE440000000) #5, !dbg !27
  %.01.i16 = select i1 %.not6.i15, float %133, float %132, !dbg !27
  %134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not7.i17 = icmp eq i32 %134, 0, !dbg !27
  %135 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i16, float %115, float 0x3FD5554F00000000) #5, !dbg !27
  %136 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i16, float %115, float 0x3FD5554F00000000) #5, !dbg !27
  %.0.i18 = select i1 %.not7.i17, float %136, float %135, !dbg !27
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not8.i19 = icmp eq i32 %137, 0, !dbg !27
  %138 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i18, float %115, float -5.000000e-01) #5, !dbg !27
  %139 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i18, float %115, float -5.000000e-01) #5, !dbg !27
  %.07.i20 = select i1 %.not8.i19, float %139, float %138, !dbg !27
  %140 = fmul float %115, %.07.i20, !dbg !27
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not9.i21 = icmp eq i32 %141, 0, !dbg !27
  %142 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %140, float %115, float %115) #5, !dbg !27
  %143 = tail call float @llvm.nvvm.fma.rn.f(float %140, float %115, float %115) #5, !dbg !27
  %.06.i22 = select i1 %.not9.i21, float %143, float %142, !dbg !27
  %144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not10.i23 = icmp eq i32 %144, 0, !dbg !27
  %145 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #5, !dbg !27
  %146 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #5, !dbg !27
  %.04.i24 = select i1 %.not10.i23, float %146, float %145, !dbg !27
  %147 = icmp ugt i32 %106, 2139095039, !dbg !27
  br i1 %147, label %__nv_fmaf_rn.exit.i.i27, label %__nv_logf.exit30, !dbg !27

__nv_fmaf_rn.exit.i.i27:                          ; preds = %__nv_logf.exit
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not11.i28 = icmp eq i32 %148, 0, !dbg !27
  %149 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !27
  %150 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !27
  %.03.i29 = select i1 %.not11.i28, float %150, float %149, !dbg !27
  br label %__nv_logf.exit30, !dbg !27

__nv_logf.exit30:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i27
  %r.i.0.i25 = phi float [ %.03.i29, %__nv_fmaf_rn.exit.i.i27 ], [ %.04.i24, %__nv_logf.exit ], !dbg !27
  %151 = fcmp olt float %55, 0x3810000000000000, !dbg !27
  %152 = fmul float %55, 0x4160000000000000, !dbg !27
  %.02.i31 = select i1 %151, float %152, float %55, !dbg !27
  %i.i.0.i32 = select i1 %151, float -2.300000e+01, float 0.000000e+00, !dbg !27
  %153 = bitcast float %.02.i31 to i32, !dbg !27
  %154 = add i32 %153, -1059760811, !dbg !27
  %155 = and i32 %154, -8388608, !dbg !27
  %156 = sub i32 %153, %155, !dbg !27
  %157 = bitcast i32 %156 to float, !dbg !27
  %158 = sitofp i32 %155 to float, !dbg !27
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not.i33 = icmp eq i32 %159, 0, !dbg !27
  %160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %158, float 0x3E80000000000000, float %i.i.0.i32) #5, !dbg !27
  %161 = tail call float @llvm.nvvm.fma.rn.f(float %158, float 0x3E80000000000000, float %i.i.0.i32) #5, !dbg !27
  %.08.i34 = select i1 %.not.i33, float %161, float %160, !dbg !27
  %162 = fadd float %157, -1.000000e+00, !dbg !27
  %163 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not1.i35 = icmp eq i32 %163, 0, !dbg !27
  %164 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %162, float 0x3FC2073EC0000000) #5, !dbg !27
  %165 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %162, float 0x3FC2073EC0000000) #5, !dbg !27
  %.010.i36 = select i1 %.not1.i35, float %165, float %164, !dbg !27
  %166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not2.i37 = icmp eq i32 %166, 0, !dbg !27
  %167 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i36, float %162, float 0xBFBF19B980000000) #5, !dbg !27
  %168 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i36, float %162, float 0xBFBF19B980000000) #5, !dbg !27
  %.011.i38 = select i1 %.not2.i37, float %168, float %167, !dbg !27
  %169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not3.i39 = icmp eq i32 %169, 0, !dbg !27
  %170 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i38, float %162, float 0x3FC1E52AA0000000) #5, !dbg !27
  %171 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i38, float %162, float 0x3FC1E52AA0000000) #5, !dbg !27
  %.012.i40 = select i1 %.not3.i39, float %171, float %170, !dbg !27
  %172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not4.i41 = icmp eq i32 %172, 0, !dbg !27
  %173 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i40, float %162, float 0xBFC55B1720000000) #5, !dbg !27
  %174 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i40, float %162, float 0xBFC55B1720000000) #5, !dbg !27
  %.09.i42 = select i1 %.not4.i41, float %174, float %173, !dbg !27
  %175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not5.i43 = icmp eq i32 %175, 0, !dbg !27
  %176 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i42, float %162, float 0x3FC99DA160000000) #5, !dbg !27
  %177 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i42, float %162, float 0x3FC99DA160000000) #5, !dbg !27
  %.05.i44 = select i1 %.not5.i43, float %177, float %176, !dbg !27
  %178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not6.i45 = icmp eq i32 %178, 0, !dbg !27
  %179 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i44, float %162, float 0xBFCFFFE440000000) #5, !dbg !27
  %180 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i44, float %162, float 0xBFCFFFE440000000) #5, !dbg !27
  %.01.i46 = select i1 %.not6.i45, float %180, float %179, !dbg !27
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not7.i47 = icmp eq i32 %181, 0, !dbg !27
  %182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i46, float %162, float 0x3FD5554F00000000) #5, !dbg !27
  %183 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i46, float %162, float 0x3FD5554F00000000) #5, !dbg !27
  %.0.i48 = select i1 %.not7.i47, float %183, float %182, !dbg !27
  %184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not8.i49 = icmp eq i32 %184, 0, !dbg !27
  %185 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i48, float %162, float -5.000000e-01) #5, !dbg !27
  %186 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i48, float %162, float -5.000000e-01) #5, !dbg !27
  %.07.i50 = select i1 %.not8.i49, float %186, float %185, !dbg !27
  %187 = fmul float %162, %.07.i50, !dbg !27
  %188 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not9.i51 = icmp eq i32 %188, 0, !dbg !27
  %189 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %187, float %162, float %162) #5, !dbg !27
  %190 = tail call float @llvm.nvvm.fma.rn.f(float %187, float %162, float %162) #5, !dbg !27
  %.06.i52 = select i1 %.not9.i51, float %190, float %189, !dbg !27
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not10.i53 = icmp eq i32 %191, 0, !dbg !27
  %192 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i34, float 0x3FE62E4300000000, float %.06.i52) #5, !dbg !27
  %193 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i34, float 0x3FE62E4300000000, float %.06.i52) #5, !dbg !27
  %.04.i54 = select i1 %.not10.i53, float %193, float %192, !dbg !27
  %194 = icmp ugt i32 %153, 2139095039, !dbg !27
  br i1 %194, label %__nv_fmaf_rn.exit.i.i57, label %__nv_logf.exit60, !dbg !27

__nv_fmaf_rn.exit.i.i57:                          ; preds = %__nv_logf.exit30
  %195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not11.i58 = icmp eq i32 %195, 0, !dbg !27
  %196 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !27
  %197 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !27
  %.03.i59 = select i1 %.not11.i58, float %197, float %196, !dbg !27
  br label %__nv_logf.exit60, !dbg !27

__nv_logf.exit60:                                 ; preds = %__nv_logf.exit30, %__nv_fmaf_rn.exit.i.i57
  %r.i.0.i55 = phi float [ %.03.i59, %__nv_fmaf_rn.exit.i.i57 ], [ %.04.i54, %__nv_logf.exit30 ], !dbg !27
  %198 = fcmp olt float %56, 0x3810000000000000, !dbg !27
  %199 = fmul float %56, 0x4160000000000000, !dbg !27
  %.02.i61 = select i1 %198, float %199, float %56, !dbg !27
  %i.i.0.i62 = select i1 %198, float -2.300000e+01, float 0.000000e+00, !dbg !27
  %200 = bitcast float %.02.i61 to i32, !dbg !27
  %201 = add i32 %200, -1059760811, !dbg !27
  %202 = and i32 %201, -8388608, !dbg !27
  %203 = sub i32 %200, %202, !dbg !27
  %204 = bitcast i32 %203 to float, !dbg !27
  %205 = sitofp i32 %202 to float, !dbg !27
  %206 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not.i63 = icmp eq i32 %206, 0, !dbg !27
  %207 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %205, float 0x3E80000000000000, float %i.i.0.i62) #5, !dbg !27
  %208 = tail call float @llvm.nvvm.fma.rn.f(float %205, float 0x3E80000000000000, float %i.i.0.i62) #5, !dbg !27
  %.08.i64 = select i1 %.not.i63, float %208, float %207, !dbg !27
  %209 = fadd float %204, -1.000000e+00, !dbg !27
  %210 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not1.i65 = icmp eq i32 %210, 0, !dbg !27
  %211 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %209, float 0x3FC2073EC0000000) #5, !dbg !27
  %212 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %209, float 0x3FC2073EC0000000) #5, !dbg !27
  %.010.i66 = select i1 %.not1.i65, float %212, float %211, !dbg !27
  %213 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not2.i67 = icmp eq i32 %213, 0, !dbg !27
  %214 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i66, float %209, float 0xBFBF19B980000000) #5, !dbg !27
  %215 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i66, float %209, float 0xBFBF19B980000000) #5, !dbg !27
  %.011.i68 = select i1 %.not2.i67, float %215, float %214, !dbg !27
  %216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not3.i69 = icmp eq i32 %216, 0, !dbg !27
  %217 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i68, float %209, float 0x3FC1E52AA0000000) #5, !dbg !27
  %218 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i68, float %209, float 0x3FC1E52AA0000000) #5, !dbg !27
  %.012.i70 = select i1 %.not3.i69, float %218, float %217, !dbg !27
  %219 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not4.i71 = icmp eq i32 %219, 0, !dbg !27
  %220 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i70, float %209, float 0xBFC55B1720000000) #5, !dbg !27
  %221 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i70, float %209, float 0xBFC55B1720000000) #5, !dbg !27
  %.09.i72 = select i1 %.not4.i71, float %221, float %220, !dbg !27
  %222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not5.i73 = icmp eq i32 %222, 0, !dbg !27
  %223 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i72, float %209, float 0x3FC99DA160000000) #5, !dbg !27
  %224 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i72, float %209, float 0x3FC99DA160000000) #5, !dbg !27
  %.05.i74 = select i1 %.not5.i73, float %224, float %223, !dbg !27
  %225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not6.i75 = icmp eq i32 %225, 0, !dbg !27
  %226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i74, float %209, float 0xBFCFFFE440000000) #5, !dbg !27
  %227 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i74, float %209, float 0xBFCFFFE440000000) #5, !dbg !27
  %.01.i76 = select i1 %.not6.i75, float %227, float %226, !dbg !27
  %228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not7.i77 = icmp eq i32 %228, 0, !dbg !27
  %229 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i76, float %209, float 0x3FD5554F00000000) #5, !dbg !27
  %230 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i76, float %209, float 0x3FD5554F00000000) #5, !dbg !27
  %.0.i78 = select i1 %.not7.i77, float %230, float %229, !dbg !27
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not8.i79 = icmp eq i32 %231, 0, !dbg !27
  %232 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i78, float %209, float -5.000000e-01) #5, !dbg !27
  %233 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i78, float %209, float -5.000000e-01) #5, !dbg !27
  %.07.i80 = select i1 %.not8.i79, float %233, float %232, !dbg !27
  %234 = fmul float %209, %.07.i80, !dbg !27
  %235 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not9.i81 = icmp eq i32 %235, 0, !dbg !27
  %236 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %234, float %209, float %209) #5, !dbg !27
  %237 = tail call float @llvm.nvvm.fma.rn.f(float %234, float %209, float %209) #5, !dbg !27
  %.06.i82 = select i1 %.not9.i81, float %237, float %236, !dbg !27
  %238 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not10.i83 = icmp eq i32 %238, 0, !dbg !27
  %239 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #5, !dbg !27
  %240 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #5, !dbg !27
  %.04.i84 = select i1 %.not10.i83, float %240, float %239, !dbg !27
  %241 = icmp ugt i32 %200, 2139095039, !dbg !27
  br i1 %241, label %__nv_fmaf_rn.exit.i.i87, label %__nv_logf.exit90, !dbg !27

__nv_fmaf_rn.exit.i.i87:                          ; preds = %__nv_logf.exit60
  %242 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not11.i88 = icmp eq i32 %242, 0, !dbg !27
  %243 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !27
  %244 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !27
  %.03.i89 = select i1 %.not11.i88, float %244, float %243, !dbg !27
  br label %__nv_logf.exit90, !dbg !27

__nv_logf.exit90:                                 ; preds = %__nv_logf.exit60, %__nv_fmaf_rn.exit.i.i87
  %r.i.0.i85 = phi float [ %.03.i89, %__nv_fmaf_rn.exit.i.i87 ], [ %.04.i84, %__nv_logf.exit60 ], !dbg !27
  %245 = fcmp oeq float %.02.i31, 0.000000e+00, !dbg !27
  %r.i.1.i56 = select i1 %245, float 0xFFF0000000000000, float %r.i.0.i55, !dbg !27
  %246 = fcmp oeq float %.02.i1, 0.000000e+00, !dbg !27
  %r.i.1.i26 = select i1 %246, float 0xFFF0000000000000, float %r.i.0.i25, !dbg !27
  %247 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !27
  %r.i.1.i = select i1 %247, float 0xFFF0000000000000, float %r.i.0.i, !dbg !27
  %248 = bitcast i32 %15 to float, !dbg !11
  %249 = fmul float %248, 0x3F647AE140000000, !dbg !28
  %250 = fadd float %249, 0.000000e+00, !dbg !29
  %251 = fmul float %249, 0x3F60000000000000, !dbg !30
  %252 = fsub float 0.000000e+00, %251, !dbg !31
  %253 = extractvalue { i32, i32 } %20, 1, !dbg !15
  %254 = bitcast i32 %253 to <2 x bfloat>, !dbg !15
  %255 = extractelement <2 x bfloat> %254, i64 1, !dbg !15
  %256 = fpext bfloat %255 to float, !dbg !32
  %257 = fmul float %256, 2.000000e+00, !dbg !33
  %258 = fmul float %257, 1.000000e+01, !dbg !34
  %259 = fadd float %258, 0x3EE4F8B580000000, !dbg !35
  %260 = bitcast i32 %26 to float, !dbg !17
  %261 = fsub float %259, %260, !dbg !36
  %262 = bitcast i32 %31 to float, !dbg !19
  %263 = fsub float %261, %262, !dbg !37
  %264 = fmul float %252, %263, !dbg !38
  %265 = extractelement <2 x bfloat> %254, i64 0, !dbg !15
  %266 = fpext bfloat %265 to float, !dbg !32
  %267 = fmul float %266, 2.000000e+00, !dbg !33
  %268 = fmul float %267, 1.000000e+01, !dbg !34
  %269 = fadd float %268, 0x3EE4F8B580000000, !dbg !35
  %270 = fsub float %269, %260, !dbg !36
  %271 = fsub float %270, %262, !dbg !37
  %272 = fmul float %252, %271, !dbg !38
  %273 = extractvalue { i32, i32 } %20, 0, !dbg !15
  %274 = bitcast i32 %273 to <2 x bfloat>, !dbg !15
  %275 = extractelement <2 x bfloat> %274, i64 1, !dbg !15
  %276 = fpext bfloat %275 to float, !dbg !32
  %277 = fmul float %276, 2.000000e+00, !dbg !33
  %278 = fmul float %277, 1.000000e+01, !dbg !34
  %279 = fadd float %278, 0x3EE4F8B580000000, !dbg !35
  %280 = fsub float %279, %260, !dbg !36
  %281 = fsub float %280, %262, !dbg !37
  %282 = fmul float %252, %281, !dbg !38
  %283 = extractelement <2 x bfloat> %274, i64 0, !dbg !15
  %284 = fpext bfloat %283 to float, !dbg !32
  %285 = fmul float %284, 2.000000e+00, !dbg !33
  %286 = fmul float %285, 1.000000e+01, !dbg !34
  %287 = fadd float %286, 0x3EE4F8B580000000, !dbg !35
  %288 = fsub float %287, %260, !dbg !36
  %289 = fsub float %288, %262, !dbg !37
  %290 = fmul float %252, %289, !dbg !38
  %291 = bitcast i32 %52 to float, !dbg !25
  %292 = bitcast i32 %47 to float, !dbg !23
  %293 = lshr i32 %12, 5, !dbg !10
  %294 = and i32 %12, 31, !dbg !10
  %295 = fcmp oeq float %.02.i61, 0.000000e+00, !dbg !27
  %r.i.1.i86 = select i1 %295, float 0xFFF0000000000000, float %r.i.0.i85, !dbg !27
  %296 = fmul float %250, %r.i.1.i, !dbg !39
  %297 = fmul float %250, %r.i.1.i26, !dbg !39
  %298 = fmul float %250, %r.i.1.i56, !dbg !39
  %299 = fmul float %250, %r.i.1.i86, !dbg !39
  %300 = fmul float %250, %39, !dbg !40
  %301 = fmul float %250, %40, !dbg !40
  %302 = fmul float %250, %41, !dbg !40
  %303 = fmul float %250, %42, !dbg !40
  %304 = tail call float @llvm.nvvm.div.full(float %300, float %53), !dbg !41
  %305 = tail call float @llvm.nvvm.div.full(float %301, float %54), !dbg !41
  %306 = tail call float @llvm.nvvm.div.full(float %302, float %55), !dbg !41
  %307 = tail call float @llvm.nvvm.div.full(float %303, float %56), !dbg !41
  %308 = fadd float %296, %304, !dbg !42
  %309 = fadd float %297, %305, !dbg !42
  %310 = fadd float %298, %306, !dbg !42
  %311 = fadd float %299, %307, !dbg !42
  %312 = fmul float %308, 0x3F60000000000000, !dbg !43
  %313 = fmul float %309, 0x3F60000000000000, !dbg !43
  %314 = fmul float %310, 0x3F60000000000000, !dbg !43
  %315 = fmul float %311, 0x3F60000000000000, !dbg !43
  %316 = fadd float %290, %312, !dbg !44
  %317 = fadd float %282, %313, !dbg !44
  %318 = fadd float %272, %314, !dbg !44
  %319 = fadd float %264, %315, !dbg !44
  %320 = fsub float %285, %292, !dbg !45
  %321 = fsub float %277, %292, !dbg !45
  %322 = fsub float %267, %292, !dbg !45
  %323 = fsub float %257, %292, !dbg !45
  %324 = fmul float %320, 1.000000e+01, !dbg !46
  %325 = fmul float %321, 1.000000e+01, !dbg !46
  %326 = fmul float %322, 1.000000e+01, !dbg !46
  %327 = fmul float %323, 1.000000e+01, !dbg !46
  %328 = fmul float %324, 0x3FF7154760000000, !dbg !47
  %329 = tail call float @llvm.nvvm.ex2.approx.f(float %328), !dbg !47
  %330 = fmul float %325, 0x3FF7154760000000, !dbg !47
  %331 = tail call float @llvm.nvvm.ex2.approx.f(float %330), !dbg !47
  %332 = fmul float %326, 0x3FF7154760000000, !dbg !47
  %333 = tail call float @llvm.nvvm.ex2.approx.f(float %332), !dbg !47
  %334 = fmul float %327, 0x3FF7154760000000, !dbg !47
  %335 = tail call float @llvm.nvvm.ex2.approx.f(float %334), !dbg !47
  %336 = tail call float @llvm.nvvm.div.full(float %329, float %291), !dbg !48
  %337 = tail call float @llvm.nvvm.div.full(float %331, float %291), !dbg !48
  %338 = tail call float @llvm.nvvm.div.full(float %333, float %291), !dbg !48
  %339 = tail call float @llvm.nvvm.div.full(float %335, float %291), !dbg !48
  %340 = and i32 %293, 3, !dbg !49
  %341 = icmp eq i32 %294, 0, !dbg !49
  %342 = zext nneg i32 %340 to i64, !dbg !49
  %343 = getelementptr float, ptr addrspace(3) @global_smem, i64 %342, !dbg !49
  %344 = icmp slt i32 %12, 4, !dbg !49
  %345 = sext i32 %12 to i64, !dbg !49
  %346 = getelementptr float, ptr addrspace(3) @global_smem, i64 %345, !dbg !49
  %347 = and i32 %12, 3, !dbg !49
  %348 = icmp eq i32 %347, 0, !dbg !49
  %349 = and i1 %344, %348, !dbg !49
  %350 = fmul float %316, %336, !dbg !53
  %351 = fmul float %317, %337, !dbg !53
  %352 = fmul float %318, %338, !dbg !53
  %353 = fmul float %319, %339, !dbg !53
  %354 = fadd float %350, %351, !dbg !54
  %355 = fadd float %354, %352, !dbg !54
  %356 = fadd float %355, %353, !dbg !54
  %357 = bitcast float %356 to i32, !dbg !57
  %358 = fmul float %289, 0x3FF7154760000000, !dbg !58
  %359 = fmul float %281, 0x3FF7154760000000, !dbg !58
  %360 = fmul float %271, 0x3FF7154760000000, !dbg !58
  %361 = fmul float %263, 0x3FF7154760000000, !dbg !58
  %362 = fsub float 0.000000e+00, %336, !dbg !59
  %363 = fsub float 0.000000e+00, %337, !dbg !59
  %364 = fsub float 0.000000e+00, %338, !dbg !59
  %365 = fsub float 0.000000e+00, %339, !dbg !59
  %366 = insertelement <2 x float> poison, float %252, i64 0, !dbg !60
  %367 = shufflevector <2 x float> %366, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !60
  %368 = insertelement <2 x float> poison, float %338, i64 0, !dbg !60
  %369 = insertelement <2 x float> %368, float %339, i64 1, !dbg !60
  %370 = fmul <2 x float> %367, %369, !dbg !60
  %371 = insertelement <2 x float> poison, float %336, i64 0, !dbg !60
  %372 = insertelement <2 x float> %371, float %337, i64 1, !dbg !60
  %373 = fmul <2 x float> %367, %372, !dbg !60
  %shift = shufflevector <2 x float> %373, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !61
  %374 = fadd <2 x float> %373, %shift, !dbg !61
  %375 = fadd <2 x float> %374, %370, !dbg !61
  %shift99 = shufflevector <2 x float> %370, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !61
  %376 = fadd <2 x float> %375, %shift99, !dbg !61
  %377 = extractelement <2 x float> %376, i64 0, !dbg !61
  %378 = bitcast float %377 to i32, !dbg !49
  %379 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %378, i32 16, i32 31), !dbg !49
  %380 = bitcast i32 %379 to float, !dbg !49
  %381 = fadd float %377, %380, !dbg !61
  %382 = bitcast float %381 to i32, !dbg !49
  %383 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %382, i32 8, i32 31), !dbg !49
  %384 = bitcast i32 %383 to float, !dbg !49
  %385 = fadd float %381, %384, !dbg !61
  %386 = bitcast float %385 to i32, !dbg !49
  %387 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %386, i32 4, i32 31), !dbg !49
  %388 = bitcast i32 %387 to float, !dbg !49
  %389 = fadd float %385, %388, !dbg !61
  %390 = bitcast float %389 to i32, !dbg !49
  %391 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %390, i32 2, i32 31), !dbg !49
  %392 = bitcast i32 %391 to float, !dbg !49
  %393 = fadd float %389, %392, !dbg !61
  %394 = bitcast float %393 to i32, !dbg !49
  %395 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %394, i32 1, i32 31), !dbg !49
  %396 = bitcast i32 %395 to float, !dbg !49
  %397 = fadd float %393, %396, !dbg !61
  %398 = bitcast float %397 to <1 x i32>, !dbg !49
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %343, <1 x i32> %398, i1 %341) #5, !dbg !49
  tail call void @llvm.nvvm.barrier0(), !dbg !49
  %399 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %346, i1 %344) #5, !dbg !49
  %400 = bitcast i32 %399 to float, !dbg !49
  %401 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %399, i32 2, i32 31), !dbg !49
  %402 = bitcast i32 %401 to float, !dbg !49
  %403 = fadd float %400, %402, !dbg !61
  %404 = bitcast float %403 to i32, !dbg !49
  %405 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %404, i32 1, i32 31), !dbg !49
  %406 = bitcast i32 %405 to float, !dbg !49
  %407 = fadd float %403, %406, !dbg !61
  %408 = bitcast float %407 to <1 x i32>, !dbg !49
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %346, <1 x i32> %408, i1 %349) #5, !dbg !49
  tail call void @llvm.nvvm.barrier0(), !dbg !49
  %409 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !49
  %410 = fadd float %409, 0.000000e+00, !dbg !62
  tail call void @llvm.nvvm.barrier0(), !dbg !57
  %411 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %357, i32 16, i32 31), !dbg !57
  %412 = bitcast i32 %411 to float, !dbg !57
  %413 = fadd float %356, %412, !dbg !54
  %414 = bitcast float %413 to i32, !dbg !57
  %415 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %414, i32 8, i32 31), !dbg !57
  %416 = bitcast i32 %415 to float, !dbg !57
  %417 = fadd float %413, %416, !dbg !54
  %418 = bitcast float %417 to i32, !dbg !57
  %419 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %418, i32 4, i32 31), !dbg !57
  %420 = bitcast i32 %419 to float, !dbg !57
  %421 = fadd float %417, %420, !dbg !54
  %422 = bitcast float %421 to i32, !dbg !57
  %423 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %422, i32 2, i32 31), !dbg !57
  %424 = bitcast i32 %423 to float, !dbg !57
  %425 = fadd float %421, %424, !dbg !54
  %426 = bitcast float %425 to i32, !dbg !57
  %427 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %426, i32 1, i32 31), !dbg !57
  %428 = bitcast i32 %427 to float, !dbg !57
  %429 = fadd float %425, %428, !dbg !54
  %430 = bitcast float %429 to <1 x i32>, !dbg !57
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %343, <1 x i32> %430, i1 %341) #5, !dbg !57
  tail call void @llvm.nvvm.barrier0(), !dbg !57
  %431 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %346, i1 %344) #5, !dbg !57
  %432 = bitcast i32 %431 to float, !dbg !57
  %433 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %431, i32 2, i32 31), !dbg !57
  %434 = bitcast i32 %433 to float, !dbg !57
  %435 = fadd float %432, %434, !dbg !54
  %436 = bitcast float %435 to i32, !dbg !57
  %437 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %436, i32 1, i32 31), !dbg !57
  %438 = bitcast i32 %437 to float, !dbg !57
  %439 = fadd float %435, %438, !dbg !54
  %440 = bitcast float %439 to <1 x i32>, !dbg !57
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %346, <1 x i32> %440, i1 %349) #5, !dbg !57
  tail call void @llvm.nvvm.barrier0(), !dbg !57
  %441 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !57
  %442 = fadd float %441, 0.000000e+00, !dbg !66
  %443 = tail call float @llvm.nvvm.ex2.approx.f(float %358), !dbg !58
  %444 = tail call float @llvm.nvvm.ex2.approx.f(float %359), !dbg !58
  %445 = tail call float @llvm.nvvm.ex2.approx.f(float %360), !dbg !58
  %446 = tail call float @llvm.nvvm.ex2.approx.f(float %361), !dbg !58
  %447 = insertelement <2 x float> poison, float %410, i64 0, !dbg !68
  %448 = shufflevector <2 x float> %447, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !68
  %449 = insertelement <2 x float> poison, float %443, i64 0, !dbg !68
  %450 = insertelement <2 x float> %449, float %444, i64 1, !dbg !68
  %451 = fmul <2 x float> %448, %450, !dbg !68
  %452 = insertelement <2 x float> poison, float %445, i64 0, !dbg !68
  %453 = insertelement <2 x float> %452, float %446, i64 1, !dbg !68
  %454 = fmul <2 x float> %448, %453, !dbg !68
  %455 = fsub <2 x float> %373, %451, !dbg !69
  %456 = fsub <2 x float> %370, %454, !dbg !69
  %457 = fmul <2 x float> %455, splat (float 1.000000e+01), !dbg !70
  %458 = fmul <2 x float> %456, splat (float 1.000000e+01), !dbg !70
  %459 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !71
  %460 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %362, float %442, float %350) #5, !dbg !71
  %461 = tail call float @llvm.nvvm.fma.rn.f(float %362, float %442, float %350) #5, !dbg !71
  %462 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !71
  %463 = insertelement <2 x i32> poison, i32 %459, i64 0, !dbg !71
  %464 = insertelement <2 x i32> %463, i32 %462, i64 1, !dbg !71
  %465 = icmp eq <2 x i32> %464, zeroinitializer, !dbg !71
  %466 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %363, float %442, float %351) #5, !dbg !71
  %467 = tail call float @llvm.nvvm.fma.rn.f(float %363, float %442, float %351) #5, !dbg !71
  %468 = insertelement <2 x float> poison, float %461, i64 0, !dbg !71
  %469 = insertelement <2 x float> %468, float %467, i64 1, !dbg !71
  %470 = insertelement <2 x float> poison, float %460, i64 0, !dbg !71
  %471 = insertelement <2 x float> %470, float %466, i64 1, !dbg !71
  %472 = select <2 x i1> %465, <2 x float> %469, <2 x float> %471, !dbg !71
  %473 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !71
  %474 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %364, float %442, float %352) #5, !dbg !71
  %475 = tail call float @llvm.nvvm.fma.rn.f(float %364, float %442, float %352) #5, !dbg !71
  %476 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !71
  %477 = insertelement <2 x i32> poison, i32 %473, i64 0, !dbg !71
  %478 = insertelement <2 x i32> %477, i32 %476, i64 1, !dbg !71
  %479 = icmp eq <2 x i32> %478, zeroinitializer, !dbg !71
  %480 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %365, float %442, float %353) #5, !dbg !71
  %481 = tail call float @llvm.nvvm.fma.rn.f(float %365, float %442, float %353) #5, !dbg !71
  %482 = insertelement <2 x float> poison, float %475, i64 0, !dbg !71
  %483 = insertelement <2 x float> %482, float %481, i64 1, !dbg !71
  %484 = insertelement <2 x float> poison, float %474, i64 0, !dbg !71
  %485 = insertelement <2 x float> %484, float %480, i64 1, !dbg !71
  %486 = select <2 x i1> %479, <2 x float> %483, <2 x float> %485, !dbg !71
  %487 = fmul <2 x float> %472, splat (float 1.000000e+01), !dbg !72
  %488 = fmul <2 x float> %486, splat (float 1.000000e+01), !dbg !72
  %489 = fadd <2 x float> %457, %487, !dbg !73
  %490 = fadd <2 x float> %458, %488, !dbg !73
  %491 = fmul <2 x float> %489, splat (float 2.000000e+00), !dbg !74
  %492 = fmul <2 x float> %490, splat (float 2.000000e+00), !dbg !74
  %493 = fptrunc <2 x float> %491 to <2 x bfloat>, !dbg !75
  %494 = fptrunc <2 x float> %492 to <2 x bfloat>, !dbg !75
  %495 = bitcast <2 x bfloat> %493 to i32, !dbg !75
  %496 = bitcast <2 x bfloat> %494 to i32, !dbg !75
  tail call void asm sideeffect "st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l"(i32 %495, i32 %496, ptr addrspace(1) %19) #5, !dbg !75
  ret void, !dbg !76
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.div.full(float, float) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #1

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #2

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #3

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #2 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #3 = { convergent nocallback nounwind }
attributes #4 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cbd22e6jyf67sf2xa2gb4eufruwchlvjvoije34wcugshfc6yxtm.py", directory: "results/my_experiment/torchinductor_cache_0/bd")
!4 = !{ptr @triton_per_fused__log_softmax__log_softmax_backward_data__softmax__softmax_backward_data__to_copy_add_div_mul_0, !"reqntidx", i32 128}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_per_fused__log_softmax__log_softmax_backward_data__softmax__softmax_backward_data__to_copy_add_div_mul_0", linkageName: "triton_per_fused__log_softmax__log_softmax_backward_data__softmax__softmax_backward_data__to_copy_add_div_mul_0", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 25, column: 28, scope: !6)
!10 = !DILocation(line: 28, column: 28, scope: !6)
!11 = !DILocation(line: 35, column: 19, scope: !6)
!12 = !DILocation(line: 37, column: 45, scope: !6)
!13 = !DILocation(line: 37, column: 41, scope: !6)
!14 = !DILocation(line: 37, column: 34, scope: !6)
!15 = !DILocation(line: 37, column: 50, scope: !6)
!16 = !DILocation(line: 38, column: 31, scope: !6)
!17 = !DILocation(line: 38, column: 36, scope: !6)
!18 = !DILocation(line: 39, column: 31, scope: !6)
!19 = !DILocation(line: 39, column: 36, scope: !6)
!20 = !DILocation(line: 40, column: 31, scope: !6)
!21 = !DILocation(line: 40, column: 38, scope: !6)
!22 = !DILocation(line: 41, column: 31, scope: !6)
!23 = !DILocation(line: 41, column: 36, scope: !6)
!24 = !DILocation(line: 42, column: 31, scope: !6)
!25 = !DILocation(line: 42, column: 36, scope: !6)
!26 = !DILocation(line: 63, column: 20, scope: !6)
!27 = !DILocation(line: 64, column: 24, scope: !6)
!28 = !DILocation(line: 44, column: 18, scope: !6)
!29 = !DILocation(line: 62, column: 13, scope: !6)
!30 = !DILocation(line: 48, column: 18, scope: !6)
!31 = !DILocation(line: 49, column: 12, scope: !6)
!32 = !DILocation(line: 37, column: 59, scope: !6)
!33 = !DILocation(line: 51, column: 19, scope: !6)
!34 = !DILocation(line: 53, column: 20, scope: !6)
!35 = !DILocation(line: 55, column: 20, scope: !6)
!36 = !DILocation(line: 57, column: 20, scope: !6)
!37 = !DILocation(line: 58, column: 20, scope: !6)
!38 = !DILocation(line: 59, column: 19, scope: !6)
!39 = !DILocation(line: 65, column: 20, scope: !6)
!40 = !DILocation(line: 66, column: 20, scope: !6)
!41 = !DILocation(line: 67, column: 21, scope: !6)
!42 = !DILocation(line: 68, column: 20, scope: !6)
!43 = !DILocation(line: 69, column: 20, scope: !6)
!44 = !DILocation(line: 70, column: 20, scope: !6)
!45 = !DILocation(line: 73, column: 20, scope: !6)
!46 = !DILocation(line: 74, column: 20, scope: !6)
!47 = !DILocation(line: 75, column: 24, scope: !6)
!48 = !DILocation(line: 76, column: 21, scope: !6)
!49 = !DILocation(line: 286, column: 36, scope: !50, inlinedAt: !52)
!50 = distinct !DILexicalBlockFile(scope: !6, file: !51, discriminator: 0)
!51 = !DIFile(filename: "standard.py", directory: "/home/utka/proj/evs/vlm/lib/python3.12/site-packages/triton/language")
!52 = !DILocation(line: 79, column: 59, scope: !6)
!53 = !DILocation(line: 80, column: 20, scope: !6)
!54 = !DILocation(line: 256, column: 15, scope: !55, inlinedAt: !56)
!55 = distinct !DILexicalBlockFile(scope: !50, file: !51, discriminator: 0)
!56 = !DILocation(line: 82, column: 59, scope: !6)
!57 = !DILocation(line: 286, column: 36, scope: !50, inlinedAt: !56)
!58 = !DILocation(line: 83, column: 24, scope: !6)
!59 = !DILocation(line: 88, column: 13, scope: !6)
!60 = !DILocation(line: 77, column: 19, scope: !6)
!61 = !DILocation(line: 256, column: 15, scope: !55, inlinedAt: !52)
!62 = !DILocation(line: 57, column: 15, scope: !63, inlinedAt: !65)
!63 = distinct !DILexicalBlockFile(scope: !6, file: !64, discriminator: 0)
!64 = !DIFile(filename: "triton_helpers.py", directory: "/home/utka/proj/evs/vlm/lib/python3.12/site-packages/torch/_inductor/runtime")
!65 = !DILocation(line: 79, column: 45, scope: !6)
!66 = !DILocation(line: 57, column: 15, scope: !63, inlinedAt: !67)
!67 = !DILocation(line: 82, column: 45, scope: !6)
!68 = !DILocation(line: 84, column: 20, scope: !6)
!69 = !DILocation(line: 85, column: 20, scope: !6)
!70 = !DILocation(line: 87, column: 20, scope: !6)
!71 = !DILocation(line: 89, column: 40, scope: !6)
!72 = !DILocation(line: 91, column: 20, scope: !6)
!73 = !DILocation(line: 92, column: 20, scope: !6)
!74 = !DILocation(line: 93, column: 20, scope: !6)
!75 = !DILocation(line: 94, column: 51, scope: !6)
!76 = !DILocation(line: 94, column: 4, scope: !6)
