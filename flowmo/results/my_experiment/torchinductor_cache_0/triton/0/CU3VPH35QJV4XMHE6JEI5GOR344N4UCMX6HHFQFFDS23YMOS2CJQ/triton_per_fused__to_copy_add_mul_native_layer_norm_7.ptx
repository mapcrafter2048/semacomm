//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_per_fused__to_copy_add_mul_native_layer_norm_7 // -- Begin function triton_per_fused__to_copy_add_mul_native_layer_norm_7
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused__to_copy_add_mul_native_layer_norm_7
.visible .entry triton_per_fused__to_copy_add_mul_native_layer_norm_7(
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_mul_native_layer_norm_7_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_mul_native_layer_norm_7_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_mul_native_layer_norm_7_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_mul_native_layer_norm_7_param_3,
	.param .u32 triton_per_fused__to_copy_add_mul_native_layer_norm_7_param_4,
	.param .u32 triton_per_fused__to_copy_add_mul_native_layer_norm_7_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_mul_native_layer_norm_7_param_6
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<12>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<62>;
	.reg .f32 	%f<65>;
	.reg .b64 	%rd<11>;
	.loc	1 18 0                          // coujrnwfbe6v56qyyics4xsog6exr4iotdm2kfjtolrxvbwljnhg.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // coujrnwfbe6v56qyyics4xsog6exr4iotdm2kfjtolrxvbwljnhg.py:18:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd5, [triton_per_fused__to_copy_add_mul_native_layer_norm_7_param_0];
	ld.param.u64 	%rd6, [triton_per_fused__to_copy_add_mul_native_layer_norm_7_param_1];
$L__tmp0:
	.loc	1 25 28                         // coujrnwfbe6v56qyyics4xsog6exr4iotdm2kfjtolrxvbwljnhg.py:25:28
	mov.u32 	%r21, %ctaid.x;
	ld.param.u64 	%rd7, [triton_per_fused__to_copy_add_mul_native_layer_norm_7_param_2];
	.loc	1 28 28                         // coujrnwfbe6v56qyyics4xsog6exr4iotdm2kfjtolrxvbwljnhg.py:28:28
	mov.u32 	%r22, %tid.x;
	and.b32  	%r23, %r22, 31;
	ld.param.u64 	%rd8, [triton_per_fused__to_copy_add_mul_native_layer_norm_7_param_3];
	shl.b32 	%r24, %r22, 2;
	and.b32  	%r25, %r24, 1020;
	.loc	1 30 25                         // coujrnwfbe6v56qyyics4xsog6exr4iotdm2kfjtolrxvbwljnhg.py:30:25
	setp.lt.u32 	%p1, %r25, 768;
	.loc	1 35 37                         // coujrnwfbe6v56qyyics4xsog6exr4iotdm2kfjtolrxvbwljnhg.py:35:37
	mad.lo.s32 	%r26, %r21, 768, %r25;
	.loc	1 35 30                         // coujrnwfbe6v56qyyics4xsog6exr4iotdm2kfjtolrxvbwljnhg.py:35:30
	mul.wide.s32 	%rd9, %r26, 2;
	add.s64 	%rd1, %rd6, %rd9;
	mov.b32 	%r3, 0;
	.loc	1 35 46                         // coujrnwfbe6v56qyyics4xsog6exr4iotdm2kfjtolrxvbwljnhg.py:35:46
	// begin inline asm
	mov.u32 %r1, %r3;
	mov.u32 %r2, %r3;
	@%p1 ld.global.v2.b32 { %r1, %r2 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r1;
	mov.b32 	{%rs3, %rs4}, %r2;
	.loc	1 35 69                         // coujrnwfbe6v56qyyics4xsog6exr4iotdm2kfjtolrxvbwljnhg.py:35:69
	cvt.f32.bf16 	%f1, %rs1;
	cvt.f32.bf16 	%f2, %rs2;
	cvt.f32.bf16 	%f3, %rs3;
	cvt.f32.bf16 	%f4, %rs4;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f5, %f1, %f2;
	add.f32 	%f6, %f5, %f3;
	add.f32 	%f7, %f6, %f4;
	selp.f32 	%f8, %f7, 0f00000000, %p1;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r27, %f8;
	shfl.sync.bfly.b32	%r28, %r27, 16, 31, -1;
	mov.b32 	%f9, %r28;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f8, %f9;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r29, %f10;
	shfl.sync.bfly.b32	%r30, %r29, 8, 31, -1;
	mov.b32 	%f11, %r30;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r31, %f12;
	shfl.sync.bfly.b32	%r32, %r31, 4, 31, -1;
	mov.b32 	%f13, %r32;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r33, %f14;
	shfl.sync.bfly.b32	%r34, %r33, 2, 31, -1;
	mov.b32 	%f15, %r34;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r35, %f16;
	shfl.sync.bfly.b32	%r36, %r35, 1, 31, -1;
	mov.b32 	%f17, %r36;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p2, %r23, 0;
	shr.u32 	%r37, %r22, 3;
	and.b32  	%r38, %r37, 28;
	mov.u32 	%r39, global_smem;
	add.s32 	%r5, %r39, %r38;
	mov.b32 	%r6, %f18;
	// begin inline asm
	@%p2 st.shared.b32 [ %r5 + 0 ], %r6;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p3, %r22, 8;
	add.s32 	%r8, %r39, %r24;
	// begin inline asm
	@%p3 ld.shared.b32 %r7, [ %r8 + 0 ];
	// end inline asm
	mov.b32 	%f19, %r7;
	shfl.sync.bfly.b32	%r40, %r7, 4, 31, -1;
	mov.b32 	%f20, %r40;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f19, %f20;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r41, %f21;
	shfl.sync.bfly.b32	%r42, %r41, 2, 31, -1;
	mov.b32 	%f22, %r42;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r43, %f23;
	shfl.sync.bfly.b32	%r44, %r43, 1, 31, -1;
	mov.b32 	%f24, %r44;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r45, %r22, 7;
	setp.eq.s32 	%p11, %r45, 0;
	and.pred  	%p4, %p3, %p11;
	mov.b32 	%r10, %f25;
	// begin inline asm
	@%p4 st.shared.b32 [ %r8 + 0 ], %r10;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f26, [global_smem];
$L__tmp2:
	.loc	3 57 15                         // triton_helpers.py:57:15
	add.f32 	%f27, %f26, 0f00000000;
	mov.f32 	%f28, 0f44400000;
$L__tmp3:
	.loc	1 44 20                         // coujrnwfbe6v56qyyics4xsog6exr4iotdm2kfjtolrxvbwljnhg.py:44:20
	div.full.f32 	%f29, %f27, %f28;
	.loc	1 45 19                         // coujrnwfbe6v56qyyics4xsog6exr4iotdm2kfjtolrxvbwljnhg.py:45:19
	sub.f32 	%f30, %f1, %f29;
	sub.f32 	%f31, %f2, %f29;
	sub.f32 	%f32, %f3, %f29;
	sub.f32 	%f33, %f4, %f29;
	.loc	1 46 20                         // coujrnwfbe6v56qyyics4xsog6exr4iotdm2kfjtolrxvbwljnhg.py:46:20
	mul.f32 	%f34, %f31, %f31;
$L__tmp4:
	.loc	2 286 36                        // standard.py:286:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f35, %f30, %f30, %f34;
	fma.rn.f32 	%f36, %f32, %f32, %f35;
	fma.rn.f32 	%f37, %f33, %f33, %f36;
	selp.f32 	%f38, %f37, 0f00000000, %p1;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r46, %f38;
	shfl.sync.bfly.b32	%r47, %r46, 16, 31, -1;
	mov.b32 	%f39, %r47;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r48, %f40;
	shfl.sync.bfly.b32	%r49, %r48, 8, 31, -1;
	mov.b32 	%f41, %r49;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r50, %f42;
	shfl.sync.bfly.b32	%r51, %r50, 4, 31, -1;
	mov.b32 	%f43, %r51;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r52, %f44;
	shfl.sync.bfly.b32	%r53, %r52, 2, 31, -1;
	mov.b32 	%f45, %r53;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r54, %f46;
	shfl.sync.bfly.b32	%r55, %r54, 1, 31, -1;
	mov.b32 	%f47, %r55;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r12, %f48;
	// begin inline asm
	@%p2 st.shared.b32 [ %r5 + 0 ], %r12;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p3 ld.shared.b32 %r13, [ %r8 + 0 ];
	// end inline asm
	mov.b32 	%f49, %r13;
	shfl.sync.bfly.b32	%r56, %r13, 4, 31, -1;
	mov.b32 	%f50, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f51, %f49, %f50;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r57, %f51;
	shfl.sync.bfly.b32	%r58, %r57, 2, 31, -1;
	mov.b32 	%f52, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r59, %f53;
	shfl.sync.bfly.b32	%r60, %r59, 1, 31, -1;
	mov.b32 	%f54, %r60;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f55, %f53, %f54;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r16, %f55;
	// begin inline asm
	@%p4 st.shared.b32 [ %r8 + 0 ], %r16;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f56, [global_smem];
$L__tmp5:
	.loc	3 57 15                         // triton_helpers.py:57:15
	add.f32 	%f57, %f56, 0f00000000;
$L__tmp6:
	.loc	1 51 21                         // coujrnwfbe6v56qyyics4xsog6exr4iotdm2kfjtolrxvbwljnhg.py:51:21
	div.full.f32 	%f58, %f57, %f28;
	.loc	1 53 20                         // coujrnwfbe6v56qyyics4xsog6exr4iotdm2kfjtolrxvbwljnhg.py:53:20
	add.f32 	%f59, %f58, 0f358637BD;
	.loc	1 54 28                         // coujrnwfbe6v56qyyics4xsog6exr4iotdm2kfjtolrxvbwljnhg.py:54:28
	rsqrt.approx.ftz.f32 	%f60, %f59;
	.loc	1 60 20                         // coujrnwfbe6v56qyyics4xsog6exr4iotdm2kfjtolrxvbwljnhg.py:60:20
	fma.rn.f32 	%f61, %f30, %f60, 0f00000000;
	fma.rn.f32 	%f62, %f31, %f60, 0f00000000;
	fma.rn.f32 	%f63, %f32, %f60, 0f00000000;
	fma.rn.f32 	%f64, %f33, %f60, 0f00000000;
	.loc	1 62 4                          // coujrnwfbe6v56qyyics4xsog6exr4iotdm2kfjtolrxvbwljnhg.py:62:4
	bar.sync 	0;
	.loc	1 63 28                         // coujrnwfbe6v56qyyics4xsog6exr4iotdm2kfjtolrxvbwljnhg.py:63:28
	mul.wide.s32 	%rd10, %r21, 4;
	add.s64 	%rd2, %rd5, %rd10;
	.loc	1 63 40                         // coujrnwfbe6v56qyyics4xsog6exr4iotdm2kfjtolrxvbwljnhg.py:63:40
	and.b32  	%r61, %r22, 255;
	setp.eq.s32 	%p8, %r61, 0;
	mov.b32 	%r17, %f60;
	// begin inline asm
	@%p8 st.global.b32 [ %rd2 + 0 ], { %r17 };
	// end inline asm
	.loc	1 64 25                         // coujrnwfbe6v56qyyics4xsog6exr4iotdm2kfjtolrxvbwljnhg.py:64:25
	add.s64 	%rd3, %rd8, %rd9;
	.loc	1 64 48                         // coujrnwfbe6v56qyyics4xsog6exr4iotdm2kfjtolrxvbwljnhg.py:64:48
	cvt.rn.bf16x2.f32 	%r18, %f62, %f61;
	cvt.rn.bf16x2.f32 	%r19, %f64, %f63;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd3 + 0 ], { %r18, %r19 };
	// end inline asm
	.loc	1 65 25                         // coujrnwfbe6v56qyyics4xsog6exr4iotdm2kfjtolrxvbwljnhg.py:65:25
	add.s64 	%rd4, %rd7, %rd10;
	.loc	1 65 37                         // coujrnwfbe6v56qyyics4xsog6exr4iotdm2kfjtolrxvbwljnhg.py:65:37
	mov.b32 	%r20, %f29;
	// begin inline asm
	@%p8 st.global.b32 [ %rd4 + 0 ], { %r20 };
	// end inline asm
	.loc	1 65 4                          // coujrnwfbe6v56qyyics4xsog6exr4iotdm2kfjtolrxvbwljnhg.py:65:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "results/my_experiment/torchinductor_cache_0/ou/coujrnwfbe6v56qyyics4xsog6exr4iotdm2kfjtolrxvbwljnhg.py"
	.file	2 "/home/utka/proj/evs/vlm/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/utka/proj/evs/vlm/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 299                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x124 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 111
.b8 117
.b8 106
.b8 114
.b8 110
.b8 119
.b8 102
.b8 98
.b8 101
.b8 54
.b8 118
.b8 53
.b8 54
.b8 113
.b8 121
.b8 121
.b8 105
.b8 99
.b8 115
.b8 52
.b8 120
.b8 115
.b8 111
.b8 103
.b8 54
.b8 101
.b8 120
.b8 114
.b8 52
.b8 105
.b8 111
.b8 116
.b8 100
.b8 109
.b8 50
.b8 107
.b8 102
.b8 106
.b8 116
.b8 111
.b8 108
.b8 114
.b8 120
.b8 118
.b8 98
.b8 119
.b8 108
.b8 106
.b8 110
.b8 104
.b8 103
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 114                                 // DW_AT_comp_dir
.b8 101
.b8 115
.b8 117
.b8 108
.b8 116
.b8 115
.b8 47
.b8 109
.b8 121
.b8 95
.b8 101
.b8 120
.b8 112
.b8 101
.b8 114
.b8 105
.b8 109
.b8 101
.b8 110
.b8 116
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 95
.b8 48
.b8 47
.b8 111
.b8 117
.b8 0
.b8 2                                   // Abbrev [2] 0x80:0x38 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 55
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xb8:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 128                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xcd:0x18 DW_TAG_inlined_subroutine
.b32 128                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 41                                  // DW_AT_call_line
.b8 57                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe5:0x18 DW_TAG_inlined_subroutine
.b32 128                                // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 41                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xfd:0x18 DW_TAG_inlined_subroutine
.b32 128                                // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x115:0x18 DW_TAG_inlined_subroutine
.b32 128                                // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
