; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define ptx_kernel void @triton_red_fused__to_copy_mean_pow_7(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3, ptr addrspace(1) readnone captures(none) %4) local_unnamed_addr !dbg !6 {
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %7 = shl i32 %6, 3, !dbg !10
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %9 = lshr i32 %8, 5, !dbg !11
  %10 = and i32 %9, 7, !dbg !11
  %11 = and i32 %8, 7, !dbg !11
  %12 = or disjoint i32 %10, %7, !dbg !12
  %13 = or disjoint i32 %7, %11, !dbg !12
  %14 = icmp slt i32 %12, 6144, !dbg !13
  %15 = icmp slt i32 %13, 6144, !dbg !13
  %16 = shl i32 %8, 2, !dbg !14
  %17 = and i32 %16, 124, !dbg !14
  %18 = sdiv i32 %12, 12, !dbg !15
  %19 = mul i32 %18, 12, !dbg !16
  %.decomposed = sub i32 %12, %19, !dbg !16
  %20 = icmp samesign ult i32 %17, 96, !dbg !17
  %21 = mul nsw i32 %.decomposed, 96, !dbg !18
  %22 = add nsw i32 %21, %17, !dbg !19
  %23 = mul i32 %18, 3456, !dbg !20
  %24 = add i32 %22, %23, !dbg !21
  %25 = sext i32 %24 to i64, !dbg !22
  %26 = getelementptr bfloat, ptr addrspace(1) %0, i64 %25, !dbg !22
  %27 = and i1 %20, %14, !dbg !23
  %28 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, $2;\0A\09mov.u32 $1, $3;\0A\09@$5 ld.global.L1::evict_first.v2.b32 { $0, $1 }, [ $4 + 0 ];", "=r,=r,r,r,l,b"(i32 0, i32 0, ptr addrspace(1) %26, i1 %27) #3, !dbg !24
  %29 = extractvalue { i32, i32 } %28, 0, !dbg !24
  %30 = bitcast i32 %29 to <2 x bfloat>, !dbg !24
  %31 = extractvalue { i32, i32 } %28, 1, !dbg !24
  %32 = bitcast i32 %31 to <2 x bfloat>, !dbg !24
  %33 = extractelement <2 x bfloat> %30, i64 0, !dbg !24
  %34 = extractelement <2 x bfloat> %30, i64 1, !dbg !24
  %35 = extractelement <2 x bfloat> %32, i64 0, !dbg !24
  %36 = extractelement <2 x bfloat> %32, i64 1, !dbg !24
  %37 = fpext bfloat %33 to float, !dbg !25
  %38 = fpext bfloat %34 to float, !dbg !25
  %39 = fpext bfloat %35 to float, !dbg !25
  %40 = fpext bfloat %36 to float, !dbg !25
  %41 = fmul float %37, %37, !dbg !26
  %42 = fmul float %38, %38, !dbg !26
  %43 = fmul float %39, %39, !dbg !26
  %44 = fmul float %40, %40, !dbg !26
  %45 = fadd float %41, %42, !dbg !27
  %46 = fadd float %43, %45, !dbg !27
  %47 = fadd float %44, %46, !dbg !27
  %48 = select i1 %27, float %47, float 0.000000e+00, !dbg !27
  %49 = bitcast float %48 to i32, !dbg !32
  %50 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %49, i32 16, i32 31), !dbg !32
  %51 = bitcast i32 %50 to float, !dbg !32
  %52 = fadd float %48, %51, !dbg !27
  %53 = bitcast float %52 to i32, !dbg !32
  %54 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %53, i32 8, i32 31), !dbg !32
  %55 = bitcast i32 %54 to float, !dbg !32
  %56 = fadd float %52, %55, !dbg !27
  %57 = bitcast float %56 to i32, !dbg !32
  %58 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %57, i32 4, i32 31), !dbg !32
  %59 = bitcast i32 %58 to float, !dbg !32
  %60 = fadd float %56, %59, !dbg !27
  %61 = bitcast float %60 to i32, !dbg !32
  %62 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %61, i32 2, i32 31), !dbg !32
  %63 = bitcast i32 %62 to float, !dbg !32
  %64 = fadd float %60, %63, !dbg !27
  %65 = bitcast float %64 to i32, !dbg !32
  %66 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %65, i32 1, i32 31), !dbg !32
  %67 = bitcast i32 %66 to float, !dbg !32
  %68 = fadd float %64, %67, !dbg !27
  %69 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %10, !dbg !33
  %70 = bitcast float %68 to <1 x i32>, !dbg !33
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %69, <1 x i32> %70, i1 true) #3, !dbg !33
  tail call void @llvm.nvvm.barrier0(), !dbg !33
  %71 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %11, !dbg !33
  %72 = load i32, ptr addrspace(3) %71, align 4, !dbg !33
  %73 = sext i32 %13 to i64, !dbg !34
  %74 = getelementptr float, ptr addrspace(1) %1, i64 %73, !dbg !34
  %75 = and i32 %8, 248, !dbg !35
  %76 = icmp eq i32 %75, 0, !dbg !35
  %77 = and i1 %76, %15, !dbg !35
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %72, ptr addrspace(1) %74, i1 %77) #3, !dbg !35
  ret void, !dbg !36
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c3sg2gpb3pdyenoywzsdvtinxcpgtgfewdle2u5ewpsnkitx2ubu.py", directory: "results/my_experiment/torchinductor_cache_0/3s")
!4 = !{ptr @triton_red_fused__to_copy_mean_pow_7, !"reqntidx", i32 256}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_red_fused__to_copy_mean_pow_7", linkageName: "triton_red_fused__to_copy_mean_pow_7", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 23, column: 28, scope: !6)
!10 = !DILocation(line: 23, column: 33, scope: !6)
!11 = !DILocation(line: 24, column: 44, scope: !6)
!12 = !DILocation(line: 24, column: 23, scope: !6)
!13 = !DILocation(line: 25, column: 21, scope: !6)
!14 = !DILocation(line: 26, column: 37, scope: !6)
!15 = !DILocation(line: 29, column: 19, scope: !6)
!16 = !DILocation(line: 28, column: 19, scope: !6)
!17 = !DILocation(line: 34, column: 29, scope: !6)
!18 = !DILocation(line: 38, column: 44, scope: !6)
!19 = !DILocation(line: 38, column: 41, scope: !6)
!20 = !DILocation(line: 38, column: 54, scope: !6)
!21 = !DILocation(line: 38, column: 49, scope: !6)
!22 = !DILocation(line: 38, column: 34, scope: !6)
!23 = !DILocation(line: 38, column: 67, scope: !6)
!24 = !DILocation(line: 38, column: 59, scope: !6)
!25 = !DILocation(line: 38, column: 121, scope: !6)
!26 = !DILocation(line: 40, column: 22, scope: !6)
!27 = !DILocation(line: 256, column: 15, scope: !28, inlinedAt: !31)
!28 = distinct !DILexicalBlockFile(scope: !30, file: !29, discriminator: 0)
!29 = !DIFile(filename: "standard.py", directory: "/home/utka/proj/evs/vlm/lib/python3.12/site-packages/triton/language")
!30 = distinct !DILexicalBlockFile(scope: !6, file: !29, discriminator: 0)
!31 = !DILocation(line: 44, column: 25, scope: !6)
!32 = !DILocation(line: 286, column: 36, scope: !30, inlinedAt: !31)
!33 = !DILocation(line: 44, column: 28, scope: !6)
!34 = !DILocation(line: 45, column: 25, scope: !6)
!35 = !DILocation(line: 45, column: 36, scope: !6)
!36 = !DILocation(line: 45, column: 4, scope: !6)
