#blocked = #ttg.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("results/my_experiment/torchinductor_cache_0/2g/c2giwn4pcqsvr4il64ulm7duwrp2k4nqymoua6vnxfa4kz7artsa.py":18:0)
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 4 : i32, ttg.target = "cuda:86", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_add_zeros_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("results/my_experiment/torchinductor_cache_0/2g/c2giwn4pcqsvr4il64ulm7duwrp2k4nqymoua6vnxfa4kz7artsa.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32} loc("results/my_experiment/torchinductor_cache_0/2g/c2giwn4pcqsvr4il64ulm7duwrp2k4nqymoua6vnxfa4kz7artsa.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<256> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<3> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<1536> : tensor<128xi32, #blocked> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_1 : tensor<128xi32, #blocked> loc(#loc6)
    %6 = arith.divsi %4, %cst_0 : tensor<128xi32, #blocked> loc(#loc7)
    %7 = arith.remsi %6, %cst : tensor<128xi32, #blocked> loc(#loc8)
    %8 = arith.sitofp %7 : tensor<128xi32, #blocked> to tensor<128xf32, #blocked> loc(#loc9)
    %9 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc10)
    %10 = tt.addptr %9, %4 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc10)
    tt.store %10, %8, %5 : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc11)
    tt.return loc(#loc12)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("results/my_experiment/torchinductor_cache_0/2g/c2giwn4pcqsvr4il64ulm7duwrp2k4nqymoua6vnxfa4kz7artsa.py":20:28)
#loc3 = loc("results/my_experiment/torchinductor_cache_0/2g/c2giwn4pcqsvr4il64ulm7duwrp2k4nqymoua6vnxfa4kz7artsa.py":20:33)
#loc4 = loc("results/my_experiment/torchinductor_cache_0/2g/c2giwn4pcqsvr4il64ulm7duwrp2k4nqymoua6vnxfa4kz7artsa.py":21:36)
#loc5 = loc("results/my_experiment/torchinductor_cache_0/2g/c2giwn4pcqsvr4il64ulm7duwrp2k4nqymoua6vnxfa4kz7artsa.py":21:23)
#loc6 = loc("results/my_experiment/torchinductor_cache_0/2g/c2giwn4pcqsvr4il64ulm7duwrp2k4nqymoua6vnxfa4kz7artsa.py":22:21)
#loc7 = loc("results/my_experiment/torchinductor_cache_0/2g/c2giwn4pcqsvr4il64ulm7duwrp2k4nqymoua6vnxfa4kz7artsa.py":23:21)
#loc8 = loc("results/my_experiment/torchinductor_cache_0/2g/c2giwn4pcqsvr4il64ulm7duwrp2k4nqymoua6vnxfa4kz7artsa.py":23:26)
#loc9 = loc("results/my_experiment/torchinductor_cache_0/2g/c2giwn4pcqsvr4il64ulm7duwrp2k4nqymoua6vnxfa4kz7artsa.py":26:19)
#loc10 = loc("results/my_experiment/torchinductor_cache_0/2g/c2giwn4pcqsvr4il64ulm7duwrp2k4nqymoua6vnxfa4kz7artsa.py":27:25)
#loc11 = loc("results/my_experiment/torchinductor_cache_0/2g/c2giwn4pcqsvr4il64ulm7duwrp2k4nqymoua6vnxfa4kz7artsa.py":27:36)
#loc12 = loc("results/my_experiment/torchinductor_cache_0/2g/c2giwn4pcqsvr4il64ulm7duwrp2k4nqymoua6vnxfa4kz7artsa.py":27:4)
