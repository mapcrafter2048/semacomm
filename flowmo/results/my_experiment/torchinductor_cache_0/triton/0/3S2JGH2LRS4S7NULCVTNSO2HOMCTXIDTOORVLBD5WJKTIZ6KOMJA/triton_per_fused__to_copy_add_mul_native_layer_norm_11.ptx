//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_per_fused__to_copy_add_mul_native_layer_norm_11 // -- Begin function triton_per_fused__to_copy_add_mul_native_layer_norm_11
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused__to_copy_add_mul_native_layer_norm_11
.visible .entry triton_per_fused__to_copy_add_mul_native_layer_norm_11(
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_mul_native_layer_norm_11_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_mul_native_layer_norm_11_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_mul_native_layer_norm_11_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_mul_native_layer_norm_11_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_mul_native_layer_norm_11_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_mul_native_layer_norm_11_param_5,
	.param .u32 triton_per_fused__to_copy_add_mul_native_layer_norm_11_param_6,
	.param .u32 triton_per_fused__to_copy_add_mul_native_layer_norm_11_param_7,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_mul_native_layer_norm_11_param_8
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<15>;
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<76>;
	.reg .f32 	%f<81>;
	.reg .b64 	%rd<17>;
	.loc	1 18 0                          // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:18:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd8, [triton_per_fused__to_copy_add_mul_native_layer_norm_11_param_0];
	ld.param.u64 	%rd9, [triton_per_fused__to_copy_add_mul_native_layer_norm_11_param_1];
$L__tmp0:
	.loc	1 25 28                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:25:28
	mov.u32 	%r35, %ctaid.x;
	ld.param.u64 	%rd10, [triton_per_fused__to_copy_add_mul_native_layer_norm_11_param_2];
	.loc	1 28 28                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:28:28
	mov.u32 	%r36, %tid.x;
	and.b32  	%r37, %r36, 31;
	ld.param.u64 	%rd11, [triton_per_fused__to_copy_add_mul_native_layer_norm_11_param_3];
	ld.param.u64 	%rd12, [triton_per_fused__to_copy_add_mul_native_layer_norm_11_param_4];
	shl.b32 	%r38, %r36, 2;
	ld.param.u64 	%rd13, [triton_per_fused__to_copy_add_mul_native_layer_norm_11_param_5];
	and.b32  	%r39, %r38, 1020;
	.loc	1 30 25                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:30:25
	setp.lt.u32 	%p1, %r39, 768;
	.loc	1 35 37                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:35:37
	mad.lo.s32 	%r40, %r35, 768, %r39;
	.loc	1 35 30                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:35:30
	mul.wide.s32 	%rd14, %r40, 2;
	add.s64 	%rd1, %rd10, %rd14;
	mov.b32 	%r3, 0;
	.loc	1 35 46                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:35:46
	// begin inline asm
	mov.u32 %r1, %r3;
	mov.u32 %r2, %r3;
	@%p1 ld.global.v2.b32 { %r1, %r2 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 36 34                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:36:34
	add.s64 	%rd2, %rd8, %rd14;
	.loc	1 36 50                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:36:50
	// begin inline asm
	mov.u32 %r5, %r3;
	mov.u32 %r6, %r3;
	@%p1 ld.global.v2.b32 { %r5, %r6 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 37 30                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:37:30
	mul.wide.u32 	%rd15, %r39, 4;
	add.s64 	%rd3, %rd11, %rd15;
	.loc	1 37 37                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:37:37
	// begin inline asm
	mov.u32 %r9, %r3;
	mov.u32 %r10, %r3;
	mov.u32 %r11, %r3;
	mov.u32 %r12, %r3;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r9, %r10, %r11, %r12 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 35 69                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:35:69
	mov.b32 	{%rs1, %rs2}, %r1;
	cvt.f32.bf16 	%f1, %rs1;
	cvt.f32.bf16 	%f2, %rs2;
	.loc	1 36 73                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:36:73
	mov.b32 	{%rs3, %rs4}, %r5;
	cvt.f32.bf16 	%f3, %rs4;
	cvt.f32.bf16 	%f4, %rs3;
	.loc	1 37 37                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:37:37
	mov.b32 	%f5, %r10;
	mov.b32 	%f6, %r9;
	.loc	1 39 18                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:39:18
	add.f32 	%f7, %f6, %f4;
	add.f32 	%f8, %f5, %f3;
	.loc	1 42 18                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:42:18
	add.f32 	%f9, %f8, %f2;
	add.f32 	%f10, %f7, %f1;
	.loc	1 35 69                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:35:69
	mov.b32 	{%rs5, %rs6}, %r2;
	cvt.f32.bf16 	%f11, %rs5;
	cvt.f32.bf16 	%f12, %rs6;
	.loc	1 36 73                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:36:73
	mov.b32 	{%rs7, %rs8}, %r6;
	cvt.f32.bf16 	%f13, %rs8;
	cvt.f32.bf16 	%f14, %rs7;
	.loc	1 37 37                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:37:37
	mov.b32 	%f15, %r12;
	mov.b32 	%f16, %r11;
	.loc	1 39 18                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:39:18
	add.f32 	%f17, %f16, %f14;
	add.f32 	%f18, %f15, %f13;
	.loc	1 42 18                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:42:18
	add.f32 	%f19, %f18, %f12;
	add.f32 	%f20, %f17, %f11;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f10, %f9;
	add.f32 	%f22, %f20, %f21;
	add.f32 	%f23, %f19, %f22;
	selp.f32 	%f24, %f23, 0f00000000, %p1;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r41, %f24;
	shfl.sync.bfly.b32	%r42, %r41, 16, 31, -1;
	mov.b32 	%f25, %r42;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r43, %f26;
	shfl.sync.bfly.b32	%r44, %r43, 8, 31, -1;
	mov.b32 	%f27, %r44;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r45, %f28;
	shfl.sync.bfly.b32	%r46, %r45, 4, 31, -1;
	mov.b32 	%f29, %r46;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f28, %f29;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r47, %f30;
	shfl.sync.bfly.b32	%r48, %r47, 2, 31, -1;
	mov.b32 	%f31, %r48;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r49, %f32;
	shfl.sync.bfly.b32	%r50, %r49, 1, 31, -1;
	mov.b32 	%f33, %r50;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f32, %f33;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p4, %r37, 0;
	shr.u32 	%r51, %r36, 3;
	and.b32  	%r52, %r51, 28;
	mov.u32 	%r53, global_smem;
	add.s32 	%r17, %r53, %r52;
	mov.b32 	%r18, %f34;
	// begin inline asm
	@%p4 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p5, %r36, 8;
	add.s32 	%r20, %r53, %r38;
	// begin inline asm
	@%p5 ld.shared.b32 %r19, [ %r20 + 0 ];
	// end inline asm
	mov.b32 	%f35, %r19;
	shfl.sync.bfly.b32	%r54, %r19, 4, 31, -1;
	mov.b32 	%f36, %r54;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f37, %f35, %f36;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r55, %f37;
	shfl.sync.bfly.b32	%r56, %r55, 2, 31, -1;
	mov.b32 	%f38, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r57, %f39;
	shfl.sync.bfly.b32	%r58, %r57, 1, 31, -1;
	mov.b32 	%f40, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r59, %r36, 7;
	setp.eq.s32 	%p14, %r59, 0;
	and.pred  	%p6, %p5, %p14;
	mov.b32 	%r22, %f41;
	// begin inline asm
	@%p6 st.shared.b32 [ %r20 + 0 ], %r22;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f42, [global_smem];
$L__tmp2:
	.loc	3 57 15                         // triton_helpers.py:57:15
	add.f32 	%f43, %f42, 0f00000000;
	mov.f32 	%f44, 0f44400000;
$L__tmp3:
	.loc	1 51 21                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:51:21
	div.full.f32 	%f45, %f43, %f44;
	.loc	1 52 19                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:52:19
	sub.f32 	%f46, %f10, %f45;
	sub.f32 	%f47, %f9, %f45;
	sub.f32 	%f48, %f20, %f45;
	sub.f32 	%f49, %f19, %f45;
	.loc	1 53 20                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:53:20
	mul.f32 	%f50, %f47, %f47;
$L__tmp4:
	.loc	2 286 36                        // standard.py:286:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f51, %f46, %f46, %f50;
	fma.rn.f32 	%f52, %f48, %f48, %f51;
	fma.rn.f32 	%f53, %f49, %f49, %f52;
	selp.f32 	%f54, %f53, 0f00000000, %p1;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r60, %f54;
	shfl.sync.bfly.b32	%r61, %r60, 16, 31, -1;
	mov.b32 	%f55, %r61;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f56, %f54, %f55;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r62, %f56;
	shfl.sync.bfly.b32	%r63, %r62, 8, 31, -1;
	mov.b32 	%f57, %r63;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f58, %f56, %f57;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r64, %f58;
	shfl.sync.bfly.b32	%r65, %r64, 4, 31, -1;
	mov.b32 	%f59, %r65;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f60, %f58, %f59;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r66, %f60;
	shfl.sync.bfly.b32	%r67, %r66, 2, 31, -1;
	mov.b32 	%f61, %r67;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f62, %f60, %f61;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r68, %f62;
	shfl.sync.bfly.b32	%r69, %r68, 1, 31, -1;
	mov.b32 	%f63, %r69;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f64, %f62, %f63;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r24, %f64;
	// begin inline asm
	@%p4 st.shared.b32 [ %r17 + 0 ], %r24;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p5 ld.shared.b32 %r25, [ %r20 + 0 ];
	// end inline asm
	mov.b32 	%f65, %r25;
	shfl.sync.bfly.b32	%r70, %r25, 4, 31, -1;
	mov.b32 	%f66, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f67, %f65, %f66;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r71, %f67;
	shfl.sync.bfly.b32	%r72, %r71, 2, 31, -1;
	mov.b32 	%f68, %r72;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f69, %f67, %f68;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r73, %f69;
	shfl.sync.bfly.b32	%r74, %r73, 1, 31, -1;
	mov.b32 	%f70, %r74;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f71, %f69, %f70;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r28, %f71;
	// begin inline asm
	@%p6 st.shared.b32 [ %r20 + 0 ], %r28;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f72, [global_smem];
$L__tmp5:
	.loc	3 57 15                         // triton_helpers.py:57:15
	add.f32 	%f73, %f72, 0f00000000;
$L__tmp6:
	.loc	1 58 21                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:58:21
	div.full.f32 	%f74, %f73, %f44;
	.loc	1 60 20                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:60:20
	add.f32 	%f75, %f74, 0f358637BD;
	.loc	1 61 28                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:61:28
	rsqrt.approx.ftz.f32 	%f76, %f75;
	.loc	1 66 20                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:66:20
	fma.rn.f32 	%f77, %f46, %f76, 0f00000000;
	fma.rn.f32 	%f78, %f47, %f76, 0f00000000;
	fma.rn.f32 	%f79, %f48, %f76, 0f00000000;
	fma.rn.f32 	%f80, %f49, %f76, 0f00000000;
	.loc	1 68 50                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:68:50
	cvt.rn.bf16x2.f32 	%r29, %f9, %f10;
	cvt.rn.bf16x2.f32 	%r30, %f19, %f20;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd2 + 0 ], { %r29, %r30 };
	// end inline asm
	.loc	1 69 4                          // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:69:4
	bar.sync 	0;
	.loc	1 70 28                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:70:28
	mul.wide.s32 	%rd16, %r35, 4;
	add.s64 	%rd5, %rd9, %rd16;
	.loc	1 70 40                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:70:40
	and.b32  	%r75, %r36, 255;
	setp.eq.s32 	%p11, %r75, 0;
	mov.b32 	%r31, %f76;
	// begin inline asm
	@%p11 st.global.b32 [ %rd5 + 0 ], { %r31 };
	// end inline asm
	.loc	1 71 25                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:71:25
	add.s64 	%rd6, %rd13, %rd14;
	.loc	1 71 48                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:71:48
	cvt.rn.bf16x2.f32 	%r32, %f78, %f77;
	cvt.rn.bf16x2.f32 	%r33, %f80, %f79;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd6 + 0 ], { %r32, %r33 };
	// end inline asm
	.loc	1 72 25                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:72:25
	add.s64 	%rd7, %rd12, %rd16;
	.loc	1 72 37                         // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:72:37
	mov.b32 	%r34, %f45;
	// begin inline asm
	@%p11 st.global.b32 [ %rd7 + 0 ], { %r34 };
	// end inline asm
	.loc	1 72 4                          // cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py:72:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "results/my_experiment/torchinductor_cache_0/fj/cfjvgo5yg57k5smnmulvey6azzcf6uifbjnrj7whzvtopp2ct4p6.py"
	.file	2 "/home/utka/proj/evs/vlm/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/utka/proj/evs/vlm/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 300                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x125 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 102
.b8 106
.b8 118
.b8 103
.b8 111
.b8 53
.b8 121
.b8 103
.b8 53
.b8 55
.b8 107
.b8 53
.b8 115
.b8 109
.b8 110
.b8 109
.b8 117
.b8 108
.b8 118
.b8 101
.b8 121
.b8 54
.b8 97
.b8 122
.b8 122
.b8 99
.b8 102
.b8 54
.b8 117
.b8 105
.b8 102
.b8 98
.b8 106
.b8 110
.b8 114
.b8 106
.b8 55
.b8 119
.b8 104
.b8 122
.b8 118
.b8 116
.b8 111
.b8 112
.b8 112
.b8 50
.b8 99
.b8 116
.b8 52
.b8 112
.b8 54
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 114                                 // DW_AT_comp_dir
.b8 101
.b8 115
.b8 117
.b8 108
.b8 116
.b8 115
.b8 47
.b8 109
.b8 121
.b8 95
.b8 101
.b8 120
.b8 112
.b8 101
.b8 114
.b8 105
.b8 109
.b8 101
.b8 110
.b8 116
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 95
.b8 48
.b8 47
.b8 102
.b8 106
.b8 0
.b8 2                                   // Abbrev [2] 0x80:0x39 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 49
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xb9:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 128                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xce:0x18 DW_TAG_inlined_subroutine
.b32 128                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe6:0x18 DW_TAG_inlined_subroutine
.b32 128                                // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xfe:0x18 DW_TAG_inlined_subroutine
.b32 128                                // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 56                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x116:0x18 DW_TAG_inlined_subroutine
.b32 128                                // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 56                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
