#blocked = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [1, 0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [0, 1]}>
#loc = loc("results/my_experiment/torchinductor_cache_0/gp/cgp6xd44d736trxjtcfgc76gpmvjqqhsbcousni2zfzaxzdgru26.py":18:0)
#loc1 = loc(unknown)
#loc16 = loc("results/my_experiment/torchinductor_cache_0/gp/cgp6xd44d736trxjtcfgc76gpmvjqqhsbcousni2zfzaxzdgru26.py":40:24)
#loc25 = loc(callsite(#loc1 at #loc16))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 2 : i32, ttg.target = "cuda:86", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused__to_copy_mean_pow_15(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("results/my_experiment/torchinductor_cache_0/gp/cgp6xd44d736trxjtcfgc76gpmvjqqhsbcousni2zfzaxzdgru26.py":18:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("results/my_experiment/torchinductor_cache_0/gp/cgp6xd44d736trxjtcfgc76gpmvjqqhsbcousni2zfzaxzdgru26.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("results/my_experiment/torchinductor_cache_0/gp/cgp6xd44d736trxjtcfgc76gpmvjqqhsbcousni2zfzaxzdgru26.py":18:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("results/my_experiment/torchinductor_cache_0/gp/cgp6xd44d736trxjtcfgc76gpmvjqqhsbcousni2zfzaxzdgru26.py":18:0)) attributes {noinline = false} {
    %c2304_i32 = arith.constant 2304 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c12_i32 = arith.constant 12 : i32 loc(#loc1)
    %cst = arith.constant dense<768> : tensor<1x64xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc3)
    %2 = tt.expand_dims %1 {axis = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x64xi32, #blocked> loc(#loc3)
    %3 = arith.remsi %0, %c12_i32 : i32 loc(#loc4)
    %4 = arith.divsi %0, %c12_i32 : i32 loc(#loc5)
    %5 = arith.addi %2, %cst : tensor<1x64xi32, #blocked> loc(#loc6)
    %6 = arith.muli %3, %c64_i32 : i32 loc(#loc7)
    %7 = tt.splat %6 : i32 -> tensor<1x64xi32, #blocked> loc(#loc22)
    %8 = arith.addi %5, %7 : tensor<1x64xi32, #blocked> loc(#loc8)
    %9 = arith.muli %4, %c2304_i32 : i32 loc(#loc9)
    %10 = tt.splat %9 : i32 -> tensor<1x64xi32, #blocked> loc(#loc23)
    %11 = arith.addi %8, %10 : tensor<1x64xi32, #blocked> loc(#loc10)
    %12 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<1x64x!tt.ptr<bf16>, #blocked> loc(#loc11)
    %13 = tt.addptr %12, %11 : tensor<1x64x!tt.ptr<bf16>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc11)
    %14 = tt.load %13 : tensor<1x64x!tt.ptr<bf16>, #blocked> loc(#loc12)
    %15 = arith.extf %14 : tensor<1x64xbf16, #blocked> to tensor<1x64xf32, #blocked> loc(#loc13)
    %16 = arith.mulf %15, %15 : tensor<1x64xf32, #blocked> loc(#loc14)
    %17 = "tt.reduce"(%16) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc16)), %arg5: f32 loc(callsite(#loc1 at #loc16))):
      %22 = arith.addf %arg4, %arg5 : f32 loc(#loc27)
      tt.reduce.return %22 : f32 loc(#loc24)
    }) : (tensor<1x64xf32, #blocked>) -> tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc24)
    %18 = ttg.convert_layout %17 : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc18)
    %19 = tt.expand_dims %18 {axis = 1 : i32} : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<1x1xf32, #blocked1> loc(#loc18)
    %20 = tt.addptr %arg1, %0 : !tt.ptr<f32>, i32 loc(#loc19)
    %21 = tt.splat %20 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc20)
    tt.store %21, %19 : tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc20)
    tt.return loc(#loc21)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("results/my_experiment/torchinductor_cache_0/gp/cgp6xd44d736trxjtcfgc76gpmvjqqhsbcousni2zfzaxzdgru26.py":24:28)
#loc3 = loc("results/my_experiment/torchinductor_cache_0/gp/cgp6xd44d736trxjtcfgc76gpmvjqqhsbcousni2zfzaxzdgru26.py":27:38)
#loc4 = loc("results/my_experiment/torchinductor_cache_0/gp/cgp6xd44d736trxjtcfgc76gpmvjqqhsbcousni2zfzaxzdgru26.py":33:19)
#loc5 = loc("results/my_experiment/torchinductor_cache_0/gp/cgp6xd44d736trxjtcfgc76gpmvjqqhsbcousni2zfzaxzdgru26.py":34:19)
#loc6 = loc("results/my_experiment/torchinductor_cache_0/gp/cgp6xd44d736trxjtcfgc76gpmvjqqhsbcousni2zfzaxzdgru26.py":36:36)
#loc7 = loc("results/my_experiment/torchinductor_cache_0/gp/cgp6xd44d736trxjtcfgc76gpmvjqqhsbcousni2zfzaxzdgru26.py":36:46)
#loc8 = loc("results/my_experiment/torchinductor_cache_0/gp/cgp6xd44d736trxjtcfgc76gpmvjqqhsbcousni2zfzaxzdgru26.py":36:43)
#loc9 = loc("results/my_experiment/torchinductor_cache_0/gp/cgp6xd44d736trxjtcfgc76gpmvjqqhsbcousni2zfzaxzdgru26.py":36:56)
#loc10 = loc("results/my_experiment/torchinductor_cache_0/gp/cgp6xd44d736trxjtcfgc76gpmvjqqhsbcousni2zfzaxzdgru26.py":36:51)
#loc11 = loc("results/my_experiment/torchinductor_cache_0/gp/cgp6xd44d736trxjtcfgc76gpmvjqqhsbcousni2zfzaxzdgru26.py":36:30)
#loc12 = loc("results/my_experiment/torchinductor_cache_0/gp/cgp6xd44d736trxjtcfgc76gpmvjqqhsbcousni2zfzaxzdgru26.py":36:61)
#loc13 = loc("results/my_experiment/torchinductor_cache_0/gp/cgp6xd44d736trxjtcfgc76gpmvjqqhsbcousni2zfzaxzdgru26.py":36:70)
#loc14 = loc("results/my_experiment/torchinductor_cache_0/gp/cgp6xd44d736trxjtcfgc76gpmvjqqhsbcousni2zfzaxzdgru26.py":38:18)
#loc15 = loc("/home/utka/proj/evs/vlm/lib/python3.12/site-packages/triton/language/standard.py":286:36)
#loc17 = loc("/home/utka/proj/evs/vlm/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc18 = loc("results/my_experiment/torchinductor_cache_0/gp/cgp6xd44d736trxjtcfgc76gpmvjqqhsbcousni2zfzaxzdgru26.py":40:27)
#loc19 = loc("results/my_experiment/torchinductor_cache_0/gp/cgp6xd44d736trxjtcfgc76gpmvjqqhsbcousni2zfzaxzdgru26.py":41:25)
#loc20 = loc("results/my_experiment/torchinductor_cache_0/gp/cgp6xd44d736trxjtcfgc76gpmvjqqhsbcousni2zfzaxzdgru26.py":41:36)
#loc21 = loc("results/my_experiment/torchinductor_cache_0/gp/cgp6xd44d736trxjtcfgc76gpmvjqqhsbcousni2zfzaxzdgru26.py":41:4)
#loc22 = loc(fused[#loc8, #loc7])
#loc23 = loc(fused[#loc10, #loc9])
#loc24 = loc(callsite(#loc15 at #loc16))
#loc26 = loc(callsite(#loc17 at #loc15))
#loc27 = loc(callsite(#loc26 at #loc16))
