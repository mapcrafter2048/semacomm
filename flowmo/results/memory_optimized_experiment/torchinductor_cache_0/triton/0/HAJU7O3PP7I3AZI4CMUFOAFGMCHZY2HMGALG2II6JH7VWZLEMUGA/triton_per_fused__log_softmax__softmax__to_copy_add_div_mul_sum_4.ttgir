#blocked = #ttg.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":18:0)
#loc1 = loc(unknown)
#loc13 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":45:72)
#loc23 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":49:59)
#loc27 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":55:72)
#loc32 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":60:59)
#loc37 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":66:59)
#loc53 = loc(callsite(#loc1 at #loc13))
#loc60 = loc(callsite(#loc1 at #loc23))
#loc64 = loc(callsite(#loc1 at #loc27))
#loc67 = loc(callsite(#loc1 at #loc32))
#loc71 = loc(callsite(#loc1 at #loc37))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 4 : i32, ttg.target = "cuda:86", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused__log_softmax__softmax__to_copy_add_div_mul_sum_4(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":18:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":18:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":18:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":18:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":18:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":18:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":18:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<9.99999974E-6> : tensor<512xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<1.000000e+01> : tensor<512xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<2.000000e+00> : tensor<512xf32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #blocked> loc(#loc3)
    %2 = arith.muli %0, %c512_i32 : i32 loc(#loc4)
    %3 = tt.splat %2 : i32 -> tensor<512xi32, #blocked> loc(#loc51)
    %4 = arith.addi %1, %3 : tensor<512xi32, #blocked> loc(#loc5)
    %5 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc6)
    %6 = tt.addptr %5, %4 : tensor<512x!tt.ptr<bf16>, #blocked>, tensor<512xi32, #blocked> loc(#loc6)
    %7 = tt.load %6 : tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc7)
    %8 = arith.extf %7 : tensor<512xbf16, #blocked> to tensor<512xf32, #blocked> loc(#loc8)
    %9 = arith.mulf %8, %cst_2 : tensor<512xf32, #blocked> loc(#loc9)
    %10 = arith.mulf %9, %cst_1 : tensor<512xf32, #blocked> loc(#loc10)
    %11 = arith.addf %10, %cst_0 : tensor<512xf32, #blocked> loc(#loc11)
    %12 = "tt.reduce"(%11) <{axis = 0 : i32}> ({
    ^bb0(%arg8: f32 loc(callsite(#loc1 at #loc13)), %arg9: f32 loc(callsite(#loc1 at #loc13))):
      %50 = arith.cmpf ogt, %arg8, %arg9 : f32 loc(#loc73)
      %51 = arith.cmpf une, %arg8, %arg8 : f32 loc(#loc74)
      %52 = arith.ori %50, %51 : i1 loc(#loc75)
      %53 = arith.select %52, %arg8, %arg9 : f32 loc(#loc76)
      tt.reduce.return %53 : f32 loc(#loc52)
    }) : (tensor<512xf32, #blocked>) -> f32 loc(#loc52)
    %13 = arith.addf %12, %cst : f32 loc(#loc58)
    %14 = tt.splat %13 : f32 -> tensor<1xf32, #blocked1> loc(#loc58)
    %15 = tt.splat %13 : f32 -> tensor<512xf32, #blocked> loc(#loc77)
    %16 = arith.subf %11, %15 : tensor<512xf32, #blocked> loc(#loc20)
    %17 = math.exp %16 : tensor<512xf32, #blocked> loc(#loc21)
    %18 = "tt.reduce"(%17) <{axis = 0 : i32}> ({
    ^bb0(%arg8: f32 loc(callsite(#loc1 at #loc23)), %arg9: f32 loc(callsite(#loc1 at #loc23))):
      %50 = arith.addf %arg8, %arg9 : f32 loc(#loc78)
      tt.reduce.return %50 : f32 loc(#loc59)
    }) : (tensor<512xf32, #blocked>) -> f32 loc(#loc59)
    %19 = arith.addf %18, %cst : f32 loc(#loc62)
    %20 = math.log %19 : f32 loc(#loc26)
    %21 = tt.splat %20 : f32 -> tensor<1xf32, #blocked1> loc(#loc26)
    %22 = "tt.reduce"(%9) <{axis = 0 : i32}> ({
    ^bb0(%arg8: f32 loc(callsite(#loc1 at #loc27)), %arg9: f32 loc(callsite(#loc1 at #loc27))):
      %50 = arith.cmpf ogt, %arg8, %arg9 : f32 loc(#loc79)
      %51 = arith.cmpf une, %arg8, %arg8 : f32 loc(#loc80)
      %52 = arith.ori %50, %51 : i1 loc(#loc81)
      %53 = arith.select %52, %arg8, %arg9 : f32 loc(#loc82)
      tt.reduce.return %53 : f32 loc(#loc63)
    }) : (tensor<512xf32, #blocked>) -> f32 loc(#loc63)
    %23 = arith.addf %22, %cst : f32 loc(#loc65)
    %24 = tt.splat %23 : f32 -> tensor<1xf32, #blocked1> loc(#loc65)
    %25 = tt.splat %23 : f32 -> tensor<512xf32, #blocked> loc(#loc83)
    %26 = arith.subf %9, %25 : tensor<512xf32, #blocked> loc(#loc29)
    %27 = arith.mulf %26, %cst_1 : tensor<512xf32, #blocked> loc(#loc30)
    %28 = math.exp %27 : tensor<512xf32, #blocked> loc(#loc31)
    %29 = "tt.reduce"(%28) <{axis = 0 : i32}> ({
    ^bb0(%arg8: f32 loc(callsite(#loc1 at #loc32)), %arg9: f32 loc(callsite(#loc1 at #loc32))):
      %50 = arith.addf %arg8, %arg9 : f32 loc(#loc84)
      tt.reduce.return %50 : f32 loc(#loc66)
    }) : (tensor<512xf32, #blocked>) -> f32 loc(#loc66)
    %30 = arith.addf %29, %cst : f32 loc(#loc68)
    %31 = tt.splat %30 : f32 -> tensor<1xf32, #blocked1> loc(#loc68)
    %32 = tt.splat %30 : f32 -> tensor<512xf32, #blocked> loc(#loc85)
    %33 = arith.divf %28, %32 : tensor<512xf32, #blocked> loc(#loc34)
    %34 = tt.splat %20 : f32 -> tensor<512xf32, #blocked> loc(#loc69)
    %35 = arith.subf %16, %34 : tensor<512xf32, #blocked> loc(#loc35)
    %36 = arith.mulf %33, %35 : tensor<512xf32, #blocked> loc(#loc36)
    %37 = "tt.reduce"(%36) <{axis = 0 : i32}> ({
    ^bb0(%arg8: f32 loc(callsite(#loc1 at #loc37)), %arg9: f32 loc(callsite(#loc1 at #loc37))):
      %50 = arith.addf %arg8, %arg9 : f32 loc(#loc86)
      tt.reduce.return %50 : f32 loc(#loc70)
    }) : (tensor<512xf32, #blocked>) -> f32 loc(#loc70)
    %38 = arith.addf %37, %cst : f32 loc(#loc72)
    %39 = tt.splat %38 : f32 -> tensor<1xf32, #blocked1> loc(#loc72)
    gpu.barrier loc(#loc39)
    %40 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc40)
    %41 = tt.splat %40 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc40)
    tt.store %41, %21 : tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc41)
    %42 = tt.addptr %arg2, %0 : !tt.ptr<f32>, i32 loc(#loc42)
    %43 = tt.splat %42 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc42)
    tt.store %43, %14 : tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc43)
    %44 = tt.addptr %arg3, %0 : !tt.ptr<f32>, i32 loc(#loc44)
    %45 = tt.splat %44 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc44)
    tt.store %45, %24 : tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc45)
    %46 = tt.addptr %arg4, %0 : !tt.ptr<f32>, i32 loc(#loc46)
    %47 = tt.splat %46 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc46)
    tt.store %47, %31 : tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc47)
    %48 = tt.addptr %arg5, %0 : !tt.ptr<f32>, i32 loc(#loc48)
    %49 = tt.splat %48 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc48)
    tt.store %49, %39 : tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc49)
    tt.return loc(#loc50)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":25:28)
#loc3 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":28:28)
#loc4 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":35:41)
#loc5 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":35:37)
#loc6 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":35:30)
#loc7 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":35:46)
#loc8 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":35:55)
#loc9 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":37:18)
#loc10 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":39:18)
#loc11 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":41:18)
#loc12 = loc("/home/utka/proj/evs/vlm/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":115:29)
#loc14 = loc("/home/utka/proj/evs/vlm/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":102:15)
#loc15 = loc("/home/utka/proj/evs/vlm/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":104:21)
#loc16 = loc("/home/utka/proj/evs/vlm/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":104:16)
#loc17 = loc("/home/utka/proj/evs/vlm/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":105:29)
#loc18 = loc("/home/utka/proj/evs/vlm/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":57:15)
#loc19 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":45:45)
#loc20 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":46:19)
#loc21 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":47:24)
#loc22 = loc("/home/utka/proj/evs/vlm/lib/python3.12/site-packages/triton/language/standard.py":286:36)
#loc24 = loc("/home/utka/proj/evs/vlm/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc25 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":49:45)
#loc26 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":50:24)
#loc28 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":55:45)
#loc29 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":56:20)
#loc30 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":57:20)
#loc31 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":58:24)
#loc33 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":60:45)
#loc34 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":61:21)
#loc35 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":63:20)
#loc36 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":64:20)
#loc38 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":66:45)
#loc39 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":67:4)
#loc40 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":68:28)
#loc41 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":68:40)
#loc42 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":69:25)
#loc43 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":69:37)
#loc44 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":70:25)
#loc45 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":70:37)
#loc46 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":71:25)
#loc47 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":71:37)
#loc48 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":72:25)
#loc49 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":72:37)
#loc50 = loc("results/memory_optimized_experiment/torchinductor_cache_0/hv/chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py":72:4)
#loc51 = loc(fused[#loc5, #loc4])
#loc52 = loc(callsite(#loc12 at #loc13))
#loc54 = loc(callsite(#loc14 at #loc12))
#loc55 = loc(callsite(#loc15 at #loc12))
#loc56 = loc(callsite(#loc16 at #loc12))
#loc57 = loc(callsite(#loc17 at #loc12))
#loc58 = loc(callsite(#loc18 at #loc19))
#loc59 = loc(callsite(#loc22 at #loc23))
#loc61 = loc(callsite(#loc24 at #loc22))
#loc62 = loc(callsite(#loc18 at #loc25))
#loc63 = loc(callsite(#loc12 at #loc27))
#loc65 = loc(callsite(#loc18 at #loc28))
#loc66 = loc(callsite(#loc22 at #loc32))
#loc68 = loc(callsite(#loc18 at #loc33))
#loc69 = loc(fused[#loc35, #loc26])
#loc70 = loc(callsite(#loc22 at #loc37))
#loc72 = loc(callsite(#loc18 at #loc38))
#loc73 = loc(callsite(#loc54 at #loc13))
#loc74 = loc(callsite(#loc55 at #loc13))
#loc75 = loc(callsite(#loc56 at #loc13))
#loc76 = loc(callsite(#loc57 at #loc13))
#loc77 = loc(fused[#loc20, #loc58])
#loc78 = loc(callsite(#loc61 at #loc23))
#loc79 = loc(callsite(#loc54 at #loc27))
#loc80 = loc(callsite(#loc55 at #loc27))
#loc81 = loc(callsite(#loc56 at #loc27))
#loc82 = loc(callsite(#loc57 at #loc27))
#loc83 = loc(fused[#loc29, #loc65])
#loc84 = loc(callsite(#loc61 at #loc32))
#loc85 = loc(fused[#loc34, #loc68])
#loc86 = loc(callsite(#loc61 at #loc37))
