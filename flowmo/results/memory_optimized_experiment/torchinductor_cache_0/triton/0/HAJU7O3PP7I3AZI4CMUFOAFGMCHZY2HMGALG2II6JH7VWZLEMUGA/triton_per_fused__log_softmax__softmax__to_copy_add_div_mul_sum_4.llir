; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define ptx_kernel void @triton_per_fused__log_softmax__softmax__to_copy_add_div_mul_sum_4(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6, i32 %7, ptr addrspace(1) readnone captures(none) %8) local_unnamed_addr !dbg !6 {
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %12 = and i32 %11, 31, !dbg !10
  %13 = lshr i32 %11, 5, !dbg !10
  %14 = shl i32 %11, 2, !dbg !10
  %15 = and i32 %14, 508, !dbg !10
  %16 = shl i32 %10, 9, !dbg !11
  %17 = or disjoint i32 %15, %16, !dbg !12
  %18 = sext i32 %17 to i64, !dbg !13
  %19 = getelementptr bfloat, ptr addrspace(1) %1, i64 %18, !dbg !13
  %20 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l"(ptr addrspace(1) %19) #5, !dbg !14
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !14
  %22 = bitcast i32 %21 to <2 x bfloat>, !dbg !14
  %23 = extractvalue { i32, i32 } %20, 1, !dbg !14
  %24 = bitcast i32 %23 to <2 x bfloat>, !dbg !14
  %25 = extractelement <2 x bfloat> %22, i64 0, !dbg !14
  %26 = extractelement <2 x bfloat> %22, i64 1, !dbg !14
  %27 = extractelement <2 x bfloat> %24, i64 0, !dbg !14
  %28 = extractelement <2 x bfloat> %24, i64 1, !dbg !14
  %29 = fpext bfloat %25 to float, !dbg !15
  %30 = fpext bfloat %26 to float, !dbg !15
  %31 = fpext bfloat %27 to float, !dbg !15
  %32 = fpext bfloat %28 to float, !dbg !15
  %33 = fmul float %29, 2.000000e+00, !dbg !16
  %34 = fmul float %30, 2.000000e+00, !dbg !16
  %35 = fmul float %31, 2.000000e+00, !dbg !16
  %36 = fmul float %32, 2.000000e+00, !dbg !16
  %37 = fmul float %33, 1.000000e+01, !dbg !17
  %38 = fmul float %34, 1.000000e+01, !dbg !17
  %39 = fmul float %35, 1.000000e+01, !dbg !17
  %40 = fmul float %36, 1.000000e+01, !dbg !17
  %41 = fadd float %37, 0x3EE4F8B580000000, !dbg !18
  %42 = fadd float %38, 0x3EE4F8B580000000, !dbg !18
  %43 = fadd float %39, 0x3EE4F8B580000000, !dbg !18
  %44 = fadd float %40, 0x3EE4F8B580000000, !dbg !18
  %45 = fcmp ogt float %41, %42, !dbg !19
  %46 = fcmp uno float %41, 0.000000e+00, !dbg !24
  %47 = or i1 %45, %46, !dbg !25
  %48 = select i1 %47, float %41, float %42, !dbg !26
  %49 = fcmp ogt float %48, %43, !dbg !19
  %50 = fcmp uno float %48, 0.000000e+00, !dbg !24
  %51 = or i1 %49, %50, !dbg !25
  %52 = select i1 %51, float %48, float %43, !dbg !26
  %53 = fcmp ogt float %52, %44, !dbg !19
  %54 = fcmp uno float %52, 0.000000e+00, !dbg !24
  %55 = or i1 %53, %54, !dbg !25
  %56 = select i1 %55, float %52, float %44, !dbg !26
  %57 = bitcast float %56 to i32, !dbg !27
  %58 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %57, i32 16, i32 31), !dbg !27
  %59 = bitcast i32 %58 to float, !dbg !27
  %60 = fcmp ogt float %56, %59, !dbg !19
  %61 = fcmp uno float %56, 0.000000e+00, !dbg !24
  %62 = or i1 %60, %61, !dbg !25
  %63 = select i1 %62, float %56, float %59, !dbg !26
  %64 = bitcast float %63 to i32, !dbg !27
  %65 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %64, i32 8, i32 31), !dbg !27
  %66 = bitcast i32 %65 to float, !dbg !27
  %67 = fcmp ogt float %63, %66, !dbg !19
  %68 = fcmp uno float %63, 0.000000e+00, !dbg !24
  %69 = or i1 %67, %68, !dbg !25
  %70 = select i1 %69, float %63, float %66, !dbg !26
  %71 = bitcast float %70 to i32, !dbg !27
  %72 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %71, i32 4, i32 31), !dbg !27
  %73 = bitcast i32 %72 to float, !dbg !27
  %74 = fcmp ogt float %70, %73, !dbg !19
  %75 = fcmp uno float %70, 0.000000e+00, !dbg !24
  %76 = or i1 %74, %75, !dbg !25
  %77 = select i1 %76, float %70, float %73, !dbg !26
  %78 = bitcast float %77 to i32, !dbg !27
  %79 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %78, i32 2, i32 31), !dbg !27
  %80 = bitcast i32 %79 to float, !dbg !27
  %81 = fcmp ogt float %77, %80, !dbg !19
  %82 = fcmp uno float %77, 0.000000e+00, !dbg !24
  %83 = or i1 %81, %82, !dbg !25
  %84 = select i1 %83, float %77, float %80, !dbg !26
  %85 = bitcast float %84 to i32, !dbg !27
  %86 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %85, i32 1, i32 31), !dbg !27
  %87 = bitcast i32 %86 to float, !dbg !27
  %88 = fcmp ogt float %84, %87, !dbg !19
  %89 = fcmp uno float %84, 0.000000e+00, !dbg !24
  %90 = or i1 %88, %89, !dbg !25
  %91 = and i32 %13, 3, !dbg !27
  %92 = icmp eq i32 %12, 0, !dbg !27
  %93 = zext nneg i32 %91 to i64, !dbg !27
  %94 = getelementptr float, ptr addrspace(3) @global_smem, i64 %93, !dbg !27
  %95 = select i1 %90, i32 %85, i32 %86, !dbg !26
  %96 = insertelement <1 x i32> poison, i32 %95, i64 0, !dbg !27
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %94, <1 x i32> %96, i1 %92) #5, !dbg !27
  tail call void @llvm.nvvm.barrier0(), !dbg !27
  %97 = icmp slt i32 %11, 4, !dbg !27
  %98 = sext i32 %11 to i64, !dbg !27
  %99 = getelementptr float, ptr addrspace(3) @global_smem, i64 %98, !dbg !27
  %100 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %99, i1 %97) #5, !dbg !27
  %101 = bitcast i32 %100 to float, !dbg !27
  %102 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %100, i32 2, i32 31), !dbg !27
  %103 = bitcast i32 %102 to float, !dbg !27
  %104 = fcmp ogt float %101, %103, !dbg !19
  %105 = fcmp uno float %101, 0.000000e+00, !dbg !24
  %106 = or i1 %105, %104, !dbg !25
  %107 = select i1 %106, float %101, float %103, !dbg !26
  %108 = bitcast float %107 to i32, !dbg !27
  %109 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %108, i32 1, i32 31), !dbg !27
  %110 = bitcast i32 %109 to float, !dbg !27
  %111 = fcmp ogt float %107, %110, !dbg !19
  %112 = fcmp uno float %107, 0.000000e+00, !dbg !24
  %113 = or i1 %111, %112, !dbg !25
  %114 = and i32 %11, 3, !dbg !27
  %115 = icmp eq i32 %114, 0, !dbg !27
  %116 = and i1 %97, %115, !dbg !27
  %117 = select i1 %113, i32 %108, i32 %109, !dbg !26
  %118 = insertelement <1 x i32> poison, i32 %117, i64 0, !dbg !27
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %99, <1 x i32> %118, i1 %116) #5, !dbg !27
  tail call void @llvm.nvvm.barrier0(), !dbg !27
  %119 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !27
  %120 = fadd float %119, 0.000000e+00, !dbg !28
  %121 = fsub float %41, %120, !dbg !30
  %122 = fsub float %42, %120, !dbg !30
  %123 = fsub float %43, %120, !dbg !30
  %124 = fsub float %44, %120, !dbg !30
  %125 = fmul float %121, 0x3FF7154760000000, !dbg !31
  %126 = tail call float @llvm.nvvm.ex2.approx.f(float %125), !dbg !31
  %127 = fmul float %122, 0x3FF7154760000000, !dbg !31
  %128 = tail call float @llvm.nvvm.ex2.approx.f(float %127), !dbg !31
  %129 = fmul float %123, 0x3FF7154760000000, !dbg !31
  %130 = tail call float @llvm.nvvm.ex2.approx.f(float %129), !dbg !31
  %131 = fmul float %124, 0x3FF7154760000000, !dbg !31
  %132 = tail call float @llvm.nvvm.ex2.approx.f(float %131), !dbg !31
  tail call void @llvm.nvvm.barrier0(), !dbg !32
  %133 = fadd float %126, %128, !dbg !36
  %134 = fadd float %133, %130, !dbg !36
  %135 = fadd float %134, %132, !dbg !36
  %136 = bitcast float %135 to i32, !dbg !32
  %137 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %136, i32 16, i32 31), !dbg !32
  %138 = bitcast i32 %137 to float, !dbg !32
  %139 = fadd float %135, %138, !dbg !36
  %140 = bitcast float %139 to i32, !dbg !32
  %141 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %140, i32 8, i32 31), !dbg !32
  %142 = bitcast i32 %141 to float, !dbg !32
  %143 = fadd float %139, %142, !dbg !36
  %144 = bitcast float %143 to i32, !dbg !32
  %145 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %144, i32 4, i32 31), !dbg !32
  %146 = bitcast i32 %145 to float, !dbg !32
  %147 = fadd float %143, %146, !dbg !36
  %148 = bitcast float %147 to i32, !dbg !32
  %149 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %148, i32 2, i32 31), !dbg !32
  %150 = bitcast i32 %149 to float, !dbg !32
  %151 = fadd float %147, %150, !dbg !36
  %152 = bitcast float %151 to i32, !dbg !32
  %153 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %152, i32 1, i32 31), !dbg !32
  %154 = bitcast i32 %153 to float, !dbg !32
  %155 = fadd float %151, %154, !dbg !36
  %156 = bitcast float %155 to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %94, <1 x i32> %156, i1 %92) #5, !dbg !32
  tail call void @llvm.nvvm.barrier0(), !dbg !32
  %157 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %99, i1 %97) #5, !dbg !32
  %158 = bitcast i32 %157 to float, !dbg !32
  %159 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %157, i32 2, i32 31), !dbg !32
  %160 = bitcast i32 %159 to float, !dbg !32
  %161 = fadd float %158, %160, !dbg !36
  %162 = bitcast float %161 to i32, !dbg !32
  %163 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %162, i32 1, i32 31), !dbg !32
  %164 = bitcast i32 %163 to float, !dbg !32
  %165 = fadd float %161, %164, !dbg !36
  %166 = bitcast float %165 to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %99, <1 x i32> %166, i1 %116) #5, !dbg !32
  tail call void @llvm.nvvm.barrier0(), !dbg !32
  %167 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !32
  %168 = fadd float %167, 0.000000e+00, !dbg !38
  %169 = fcmp olt float %167, 0x3810000000000000, !dbg !40
  %170 = fmul float %168, 0x4160000000000000, !dbg !40
  %.02.i = select i1 %169, float %170, float %168, !dbg !40
  %i.i.0.i = select i1 %169, float -2.300000e+01, float 0.000000e+00, !dbg !40
  %171 = bitcast float %.02.i to i32, !dbg !40
  %172 = add i32 %171, -1059760811, !dbg !40
  %173 = and i32 %172, -8388608, !dbg !40
  %174 = sub i32 %171, %173, !dbg !40
  %175 = bitcast i32 %174 to float, !dbg !40
  %176 = sitofp i32 %173 to float, !dbg !40
  %177 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not.i = icmp eq i32 %177, 0, !dbg !40
  %178 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %176, float 0x3E80000000000000, float %i.i.0.i) #5, !dbg !40
  %179 = tail call float @llvm.nvvm.fma.rn.f(float %176, float 0x3E80000000000000, float %i.i.0.i) #5, !dbg !40
  %.08.i = select i1 %.not.i, float %179, float %178, !dbg !40
  %180 = fadd float %175, -1.000000e+00, !dbg !40
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not1.i = icmp eq i32 %181, 0, !dbg !40
  %182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %180, float 0x3FC2073EC0000000) #5, !dbg !40
  %183 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %180, float 0x3FC2073EC0000000) #5, !dbg !40
  %.010.i = select i1 %.not1.i, float %183, float %182, !dbg !40
  %184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not2.i = icmp eq i32 %184, 0, !dbg !40
  %185 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %180, float 0xBFBF19B980000000) #5, !dbg !40
  %186 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %180, float 0xBFBF19B980000000) #5, !dbg !40
  %.011.i = select i1 %.not2.i, float %186, float %185, !dbg !40
  %187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not3.i = icmp eq i32 %187, 0, !dbg !40
  %188 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %180, float 0x3FC1E52AA0000000) #5, !dbg !40
  %189 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %180, float 0x3FC1E52AA0000000) #5, !dbg !40
  %.012.i = select i1 %.not3.i, float %189, float %188, !dbg !40
  %190 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not4.i = icmp eq i32 %190, 0, !dbg !40
  %191 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %180, float 0xBFC55B1720000000) #5, !dbg !40
  %192 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %180, float 0xBFC55B1720000000) #5, !dbg !40
  %.09.i = select i1 %.not4.i, float %192, float %191, !dbg !40
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not5.i = icmp eq i32 %193, 0, !dbg !40
  %194 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %180, float 0x3FC99DA160000000) #5, !dbg !40
  %195 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %180, float 0x3FC99DA160000000) #5, !dbg !40
  %.05.i = select i1 %.not5.i, float %195, float %194, !dbg !40
  %196 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not6.i = icmp eq i32 %196, 0, !dbg !40
  %197 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %180, float 0xBFCFFFE440000000) #5, !dbg !40
  %198 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %180, float 0xBFCFFFE440000000) #5, !dbg !40
  %.01.i = select i1 %.not6.i, float %198, float %197, !dbg !40
  %199 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not7.i = icmp eq i32 %199, 0, !dbg !40
  %200 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %180, float 0x3FD5554F00000000) #5, !dbg !40
  %201 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %180, float 0x3FD5554F00000000) #5, !dbg !40
  %.0.i = select i1 %.not7.i, float %201, float %200, !dbg !40
  %202 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not8.i = icmp eq i32 %202, 0, !dbg !40
  %203 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %180, float -5.000000e-01) #5, !dbg !40
  %204 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %180, float -5.000000e-01) #5, !dbg !40
  %.07.i = select i1 %.not8.i, float %204, float %203, !dbg !40
  %205 = fmul float %180, %.07.i, !dbg !40
  %206 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not9.i = icmp eq i32 %206, 0, !dbg !40
  %207 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %205, float %180, float %180) #5, !dbg !40
  %208 = tail call float @llvm.nvvm.fma.rn.f(float %205, float %180, float %180) #5, !dbg !40
  %.06.i = select i1 %.not9.i, float %208, float %207, !dbg !40
  %209 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not10.i = icmp eq i32 %209, 0, !dbg !40
  %210 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #5, !dbg !40
  %211 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #5, !dbg !40
  %.04.i = select i1 %.not10.i, float %211, float %210, !dbg !40
  %212 = icmp ugt i32 %171, 2139095039, !dbg !40
  br i1 %212, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !40

__nv_fmaf_rn.exit.i.i:                            ; preds = %9
  %213 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not11.i = icmp eq i32 %213, 0, !dbg !40
  %214 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !40
  %215 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !40
  %.03.i = select i1 %.not11.i, float %215, float %214, !dbg !40
  br label %__nv_logf.exit, !dbg !40

__nv_logf.exit:                                   ; preds = %9, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %9 ], !dbg !40
  %216 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !40
  %r.i.1.i = select i1 %216, float 0xFFF0000000000000, float %r.i.0.i, !dbg !40
  tail call void @llvm.nvvm.barrier0(), !dbg !41
  %217 = fcmp ogt float %33, %34, !dbg !43
  %218 = fcmp uno float %33, 0.000000e+00, !dbg !44
  %219 = or i1 %217, %218, !dbg !45
  %220 = select i1 %219, float %33, float %34, !dbg !46
  %221 = fcmp ogt float %220, %35, !dbg !43
  %222 = fcmp uno float %220, 0.000000e+00, !dbg !44
  %223 = or i1 %221, %222, !dbg !45
  %224 = select i1 %223, float %220, float %35, !dbg !46
  %225 = fcmp ogt float %224, %36, !dbg !43
  %226 = fcmp uno float %224, 0.000000e+00, !dbg !44
  %227 = or i1 %225, %226, !dbg !45
  %228 = select i1 %227, float %224, float %36, !dbg !46
  %229 = bitcast float %228 to i32, !dbg !41
  %230 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %229, i32 16, i32 31), !dbg !41
  %231 = bitcast i32 %230 to float, !dbg !41
  %232 = fcmp ogt float %228, %231, !dbg !43
  %233 = fcmp uno float %228, 0.000000e+00, !dbg !44
  %234 = or i1 %233, %232, !dbg !45
  %235 = select i1 %234, float %228, float %231, !dbg !46
  %236 = bitcast float %235 to i32, !dbg !41
  %237 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %236, i32 8, i32 31), !dbg !41
  %238 = bitcast i32 %237 to float, !dbg !41
  %239 = fcmp ogt float %235, %238, !dbg !43
  %240 = fcmp uno float %235, 0.000000e+00, !dbg !44
  %241 = or i1 %239, %240, !dbg !45
  %242 = select i1 %241, float %235, float %238, !dbg !46
  %243 = bitcast float %242 to i32, !dbg !41
  %244 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %243, i32 4, i32 31), !dbg !41
  %245 = bitcast i32 %244 to float, !dbg !41
  %246 = fcmp ogt float %242, %245, !dbg !43
  %247 = fcmp uno float %242, 0.000000e+00, !dbg !44
  %248 = or i1 %246, %247, !dbg !45
  %249 = select i1 %248, float %242, float %245, !dbg !46
  %250 = bitcast float %249 to i32, !dbg !41
  %251 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %250, i32 2, i32 31), !dbg !41
  %252 = bitcast i32 %251 to float, !dbg !41
  %253 = fcmp ogt float %249, %252, !dbg !43
  %254 = fcmp uno float %249, 0.000000e+00, !dbg !44
  %255 = or i1 %253, %254, !dbg !45
  %256 = select i1 %255, float %249, float %252, !dbg !46
  %257 = bitcast float %256 to i32, !dbg !41
  %258 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %257, i32 1, i32 31), !dbg !41
  %259 = bitcast i32 %258 to float, !dbg !41
  %260 = fcmp ogt float %256, %259, !dbg !43
  %261 = fcmp uno float %256, 0.000000e+00, !dbg !44
  %262 = or i1 %260, %261, !dbg !45
  %263 = select i1 %262, i32 %257, i32 %258, !dbg !46
  %264 = insertelement <1 x i32> poison, i32 %263, i64 0, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %94, <1 x i32> %264, i1 %92) #5, !dbg !41
  tail call void @llvm.nvvm.barrier0(), !dbg !41
  %265 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %99, i1 %97) #5, !dbg !41
  %266 = bitcast i32 %265 to float, !dbg !41
  %267 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %265, i32 2, i32 31), !dbg !41
  %268 = bitcast i32 %267 to float, !dbg !41
  %269 = fcmp ogt float %266, %268, !dbg !43
  %270 = fcmp uno float %266, 0.000000e+00, !dbg !44
  %271 = or i1 %270, %269, !dbg !45
  %272 = select i1 %271, float %266, float %268, !dbg !46
  %273 = bitcast float %272 to i32, !dbg !41
  %274 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %273, i32 1, i32 31), !dbg !41
  %275 = bitcast i32 %274 to float, !dbg !41
  %276 = fcmp ogt float %272, %275, !dbg !43
  %277 = fcmp uno float %272, 0.000000e+00, !dbg !44
  %278 = or i1 %276, %277, !dbg !45
  %279 = select i1 %278, i32 %273, i32 %274, !dbg !46
  %280 = insertelement <1 x i32> poison, i32 %279, i64 0, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %99, <1 x i32> %280, i1 %116) #5, !dbg !41
  tail call void @llvm.nvvm.barrier0(), !dbg !41
  %281 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !41
  %282 = fadd float %281, 0.000000e+00, !dbg !47
  %283 = fsub float %33, %282, !dbg !49
  %284 = fsub float %34, %282, !dbg !49
  %285 = fsub float %35, %282, !dbg !49
  %286 = fsub float %36, %282, !dbg !49
  %287 = fmul float %283, 1.000000e+01, !dbg !50
  %288 = fmul float %284, 1.000000e+01, !dbg !50
  %289 = fmul float %285, 1.000000e+01, !dbg !50
  %290 = fmul float %286, 1.000000e+01, !dbg !50
  %291 = fmul float %287, 0x3FF7154760000000, !dbg !51
  %292 = tail call float @llvm.nvvm.ex2.approx.f(float %291), !dbg !51
  %293 = fmul float %288, 0x3FF7154760000000, !dbg !51
  %294 = tail call float @llvm.nvvm.ex2.approx.f(float %293), !dbg !51
  %295 = fmul float %289, 0x3FF7154760000000, !dbg !51
  %296 = tail call float @llvm.nvvm.ex2.approx.f(float %295), !dbg !51
  %297 = fmul float %290, 0x3FF7154760000000, !dbg !51
  %298 = tail call float @llvm.nvvm.ex2.approx.f(float %297), !dbg !51
  tail call void @llvm.nvvm.barrier0(), !dbg !52
  %299 = fadd float %292, %294, !dbg !54
  %300 = fadd float %299, %296, !dbg !54
  %301 = fadd float %300, %298, !dbg !54
  %302 = bitcast float %301 to i32, !dbg !52
  %303 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %302, i32 16, i32 31), !dbg !52
  %304 = bitcast i32 %303 to float, !dbg !52
  %305 = fadd float %301, %304, !dbg !54
  %306 = bitcast float %305 to i32, !dbg !52
  %307 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %306, i32 8, i32 31), !dbg !52
  %308 = bitcast i32 %307 to float, !dbg !52
  %309 = fadd float %305, %308, !dbg !54
  %310 = bitcast float %309 to i32, !dbg !52
  %311 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %310, i32 4, i32 31), !dbg !52
  %312 = bitcast i32 %311 to float, !dbg !52
  %313 = fadd float %309, %312, !dbg !54
  %314 = bitcast float %313 to i32, !dbg !52
  %315 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %314, i32 2, i32 31), !dbg !52
  %316 = bitcast i32 %315 to float, !dbg !52
  %317 = fadd float %313, %316, !dbg !54
  %318 = bitcast float %317 to i32, !dbg !52
  %319 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %318, i32 1, i32 31), !dbg !52
  %320 = bitcast i32 %319 to float, !dbg !52
  %321 = fadd float %317, %320, !dbg !54
  %322 = bitcast float %321 to <1 x i32>, !dbg !52
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %94, <1 x i32> %322, i1 %92) #5, !dbg !52
  tail call void @llvm.nvvm.barrier0(), !dbg !52
  %323 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %99, i1 %97) #5, !dbg !52
  %324 = bitcast i32 %323 to float, !dbg !52
  %325 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %323, i32 2, i32 31), !dbg !52
  %326 = bitcast i32 %325 to float, !dbg !52
  %327 = fadd float %324, %326, !dbg !54
  %328 = bitcast float %327 to i32, !dbg !52
  %329 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %328, i32 1, i32 31), !dbg !52
  %330 = bitcast i32 %329 to float, !dbg !52
  %331 = fadd float %327, %330, !dbg !54
  %332 = bitcast float %331 to <1 x i32>, !dbg !52
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %99, <1 x i32> %332, i1 %116) #5, !dbg !52
  tail call void @llvm.nvvm.barrier0(), !dbg !52
  %333 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !52
  %334 = fadd float %333, 0.000000e+00, !dbg !55
  %335 = tail call float @llvm.nvvm.div.full(float %292, float %334), !dbg !57
  %336 = tail call float @llvm.nvvm.div.full(float %294, float %334), !dbg !57
  %337 = tail call float @llvm.nvvm.div.full(float %296, float %334), !dbg !57
  %338 = tail call float @llvm.nvvm.div.full(float %298, float %334), !dbg !57
  %339 = fsub float %121, %r.i.1.i, !dbg !58
  %340 = fsub float %122, %r.i.1.i, !dbg !58
  %341 = fsub float %123, %r.i.1.i, !dbg !58
  %342 = fsub float %124, %r.i.1.i, !dbg !58
  %343 = fmul float %339, %335, !dbg !59
  %344 = fmul float %340, %336, !dbg !59
  %345 = fmul float %341, %337, !dbg !59
  %346 = fmul float %342, %338, !dbg !59
  tail call void @llvm.nvvm.barrier0(), !dbg !60
  %347 = fadd float %343, %344, !dbg !62
  %348 = fadd float %347, %345, !dbg !62
  %349 = fadd float %348, %346, !dbg !62
  %350 = bitcast float %349 to i32, !dbg !60
  %351 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %350, i32 16, i32 31), !dbg !60
  %352 = bitcast i32 %351 to float, !dbg !60
  %353 = fadd float %349, %352, !dbg !62
  %354 = bitcast float %353 to i32, !dbg !60
  %355 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %354, i32 8, i32 31), !dbg !60
  %356 = bitcast i32 %355 to float, !dbg !60
  %357 = fadd float %353, %356, !dbg !62
  %358 = bitcast float %357 to i32, !dbg !60
  %359 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %358, i32 4, i32 31), !dbg !60
  %360 = bitcast i32 %359 to float, !dbg !60
  %361 = fadd float %357, %360, !dbg !62
  %362 = bitcast float %361 to i32, !dbg !60
  %363 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %362, i32 2, i32 31), !dbg !60
  %364 = bitcast i32 %363 to float, !dbg !60
  %365 = fadd float %361, %364, !dbg !62
  %366 = bitcast float %365 to i32, !dbg !60
  %367 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %366, i32 1, i32 31), !dbg !60
  %368 = bitcast i32 %367 to float, !dbg !60
  %369 = fadd float %365, %368, !dbg !62
  %370 = bitcast float %369 to <1 x i32>, !dbg !60
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %94, <1 x i32> %370, i1 %92) #5, !dbg !60
  tail call void @llvm.nvvm.barrier0(), !dbg !60
  %371 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %99, i1 %97) #5, !dbg !60
  %372 = bitcast i32 %371 to float, !dbg !60
  %373 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %371, i32 2, i32 31), !dbg !60
  %374 = bitcast i32 %373 to float, !dbg !60
  %375 = fadd float %372, %374, !dbg !62
  %376 = bitcast float %375 to i32, !dbg !60
  %377 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %376, i32 1, i32 31), !dbg !60
  %378 = bitcast i32 %377 to float, !dbg !60
  %379 = fadd float %375, %378, !dbg !62
  %380 = bitcast float %379 to <1 x i32>, !dbg !60
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %99, <1 x i32> %380, i1 %116) #5, !dbg !60
  tail call void @llvm.nvvm.barrier0(), !dbg !60
  %381 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !60
  %382 = fadd float %381, 0.000000e+00, !dbg !63
  tail call void @llvm.nvvm.barrier0(), !dbg !65
  %383 = sext i32 %10 to i64, !dbg !66
  %384 = getelementptr float, ptr addrspace(1) %0, i64 %383, !dbg !66
  %385 = and i32 %11, 127, !dbg !67
  %386 = icmp eq i32 %385, 0, !dbg !67
  %387 = bitcast float %r.i.1.i to i32, !dbg !67
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %387, ptr addrspace(1) %384, i1 %386) #5, !dbg !67
  %388 = getelementptr float, ptr addrspace(1) %2, i64 %383, !dbg !68
  %389 = bitcast float %120 to i32, !dbg !69
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %389, ptr addrspace(1) %388, i1 %386) #5, !dbg !69
  %390 = getelementptr float, ptr addrspace(1) %3, i64 %383, !dbg !70
  %391 = bitcast float %282 to i32, !dbg !71
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %391, ptr addrspace(1) %390, i1 %386) #5, !dbg !71
  %392 = getelementptr float, ptr addrspace(1) %4, i64 %383, !dbg !72
  %393 = bitcast float %334 to i32, !dbg !73
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %393, ptr addrspace(1) %392, i1 %386) #5, !dbg !73
  %394 = getelementptr float, ptr addrspace(1) %5, i64 %383, !dbg !74
  %395 = bitcast float %382 to i32, !dbg !75
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %395, ptr addrspace(1) %394, i1 %386) #5, !dbg !75
  ret void, !dbg !76
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.div.full(float, float) #3

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "chvra5xrmj346f2kqbwyajknblbu7p5yebpakaw2vguezcn6jswn.py", directory: "results/memory_optimized_experiment/torchinductor_cache_0/hv")
!4 = !{ptr @triton_per_fused__log_softmax__softmax__to_copy_add_div_mul_sum_4, !"reqntidx", i32 128}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_per_fused__log_softmax__softmax__to_copy_add_div_mul_sum_4", linkageName: "triton_per_fused__log_softmax__softmax__to_copy_add_div_mul_sum_4", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 25, column: 28, scope: !6)
!10 = !DILocation(line: 28, column: 28, scope: !6)
!11 = !DILocation(line: 35, column: 41, scope: !6)
!12 = !DILocation(line: 35, column: 37, scope: !6)
!13 = !DILocation(line: 35, column: 30, scope: !6)
!14 = !DILocation(line: 35, column: 46, scope: !6)
!15 = !DILocation(line: 35, column: 55, scope: !6)
!16 = !DILocation(line: 37, column: 18, scope: !6)
!17 = !DILocation(line: 39, column: 18, scope: !6)
!18 = !DILocation(line: 41, column: 18, scope: !6)
!19 = !DILocation(line: 102, column: 15, scope: !20, inlinedAt: !23)
!20 = distinct !DILexicalBlockFile(scope: !22, file: !21, discriminator: 0)
!21 = !DIFile(filename: "triton_helpers.py", directory: "/home/utka/proj/evs/vlm/lib/python3.12/site-packages/torch/_inductor/runtime")
!22 = distinct !DILexicalBlockFile(scope: !6, file: !21, discriminator: 0)
!23 = !DILocation(line: 45, column: 72, scope: !6)
!24 = !DILocation(line: 104, column: 21, scope: !20, inlinedAt: !23)
!25 = !DILocation(line: 104, column: 16, scope: !20, inlinedAt: !23)
!26 = !DILocation(line: 105, column: 29, scope: !20, inlinedAt: !23)
!27 = !DILocation(line: 115, column: 29, scope: !22, inlinedAt: !23)
!28 = !DILocation(line: 57, column: 15, scope: !22, inlinedAt: !29)
!29 = !DILocation(line: 45, column: 45, scope: !6)
!30 = !DILocation(line: 46, column: 19, scope: !6)
!31 = !DILocation(line: 47, column: 24, scope: !6)
!32 = !DILocation(line: 286, column: 36, scope: !33, inlinedAt: !35)
!33 = distinct !DILexicalBlockFile(scope: !6, file: !34, discriminator: 0)
!34 = !DIFile(filename: "standard.py", directory: "/home/utka/proj/evs/vlm/lib/python3.12/site-packages/triton/language")
!35 = !DILocation(line: 49, column: 59, scope: !6)
!36 = !DILocation(line: 256, column: 15, scope: !37, inlinedAt: !35)
!37 = distinct !DILexicalBlockFile(scope: !33, file: !34, discriminator: 0)
!38 = !DILocation(line: 57, column: 15, scope: !22, inlinedAt: !39)
!39 = !DILocation(line: 49, column: 45, scope: !6)
!40 = !DILocation(line: 50, column: 24, scope: !6)
!41 = !DILocation(line: 115, column: 29, scope: !22, inlinedAt: !42)
!42 = !DILocation(line: 55, column: 72, scope: !6)
!43 = !DILocation(line: 102, column: 15, scope: !20, inlinedAt: !42)
!44 = !DILocation(line: 104, column: 21, scope: !20, inlinedAt: !42)
!45 = !DILocation(line: 104, column: 16, scope: !20, inlinedAt: !42)
!46 = !DILocation(line: 105, column: 29, scope: !20, inlinedAt: !42)
!47 = !DILocation(line: 57, column: 15, scope: !22, inlinedAt: !48)
!48 = !DILocation(line: 55, column: 45, scope: !6)
!49 = !DILocation(line: 56, column: 20, scope: !6)
!50 = !DILocation(line: 57, column: 20, scope: !6)
!51 = !DILocation(line: 58, column: 24, scope: !6)
!52 = !DILocation(line: 286, column: 36, scope: !33, inlinedAt: !53)
!53 = !DILocation(line: 60, column: 59, scope: !6)
!54 = !DILocation(line: 256, column: 15, scope: !37, inlinedAt: !53)
!55 = !DILocation(line: 57, column: 15, scope: !22, inlinedAt: !56)
!56 = !DILocation(line: 60, column: 45, scope: !6)
!57 = !DILocation(line: 61, column: 21, scope: !6)
!58 = !DILocation(line: 63, column: 20, scope: !6)
!59 = !DILocation(line: 64, column: 20, scope: !6)
!60 = !DILocation(line: 286, column: 36, scope: !33, inlinedAt: !61)
!61 = !DILocation(line: 66, column: 59, scope: !6)
!62 = !DILocation(line: 256, column: 15, scope: !37, inlinedAt: !61)
!63 = !DILocation(line: 57, column: 15, scope: !22, inlinedAt: !64)
!64 = !DILocation(line: 66, column: 45, scope: !6)
!65 = !DILocation(line: 67, column: 4, scope: !6)
!66 = !DILocation(line: 68, column: 28, scope: !6)
!67 = !DILocation(line: 68, column: 40, scope: !6)
!68 = !DILocation(line: 69, column: 25, scope: !6)
!69 = !DILocation(line: 69, column: 37, scope: !6)
!70 = !DILocation(line: 70, column: 25, scope: !6)
!71 = !DILocation(line: 70, column: 37, scope: !6)
!72 = !DILocation(line: 71, column: 25, scope: !6)
!73 = !DILocation(line: 71, column: 37, scope: !6)
!74 = !DILocation(line: 72, column: 25, scope: !6)
!75 = !DILocation(line: 72, column: 37, scope: !6)
!76 = !DILocation(line: 72, column: 4, scope: !6)
