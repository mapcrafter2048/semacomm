//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_per_fused__to_copy_gt_mul_neg_sum_where_0 // -- Begin function triton_per_fused__to_copy_gt_mul_neg_sum_where_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused__to_copy_gt_mul_neg_sum_where_0
.visible .entry triton_per_fused__to_copy_gt_mul_neg_sum_where_0(
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_gt_mul_neg_sum_where_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_gt_mul_neg_sum_where_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_gt_mul_neg_sum_where_0_param_2,
	.param .u32 triton_per_fused__to_copy_gt_mul_neg_sum_where_0_param_3,
	.param .u32 triton_per_fused__to_copy_gt_mul_neg_sum_where_0_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_gt_mul_neg_sum_where_0_param_5
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<30>;
	.reg .b16 	%rs<7>;
	.reg .b32 	%r<57>;
	.reg .f32 	%f<7>;
	.reg .b64 	%rd<75>;
	.loc	1 18 0                          // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:18:0

// %bb.0:
	ld.param.u64 	%rd31, [triton_per_fused__to_copy_gt_mul_neg_sum_where_0_param_0];
	ld.param.u64 	%rd32, [triton_per_fused__to_copy_gt_mul_neg_sum_where_0_param_1];
$L__tmp0:
	.loc	1 24 28                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:24:28
	mov.u32 	%r16, %ctaid.x;
	.loc	1 24 33                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:24:33
	shl.b32 	%r17, %r16, 7;
	ld.param.u64 	%rd33, [triton_per_fused__to_copy_gt_mul_neg_sum_where_0_param_2];
	.loc	1 25 44                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:25:44
	mov.u32 	%r18, %tid.x;
	shl.b32 	%r19, %r18, 1;
	and.b32  	%r20, %r19, 126;
	and.b32  	%r21, %r18, 127;
	.loc	1 25 23                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:25:23
	or.b32  	%r22, %r20, %r17;
	or.b32  	%r23, %r17, %r21;
	.loc	1 26 21                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:26:21
	setp.lt.s32 	%p1, %r22, 512;
	setp.lt.s32 	%p21, %r23, 512;
	.loc	1 27 38                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:27:38
	and.b32  	%r24, %r18, 128;
	setp.eq.s32 	%p22, %r24, 0;
	bfe.u32 	%r25, %r18, 6, 2;
	.loc	1 29 25                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:29:25
	setp.eq.s32 	%p9, %r25, 0;
	.loc	1 27 38                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:27:38
	shl.b32 	%r26, %r25, 1;
	.loc	1 34 49                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:34:49
	shr.u32 	%r27, %r22, 1;
	.loc	1 34 39                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:34:39
	mad.lo.s32 	%r28, %r27, 18, %r26;
	add.s32 	%r29, %r28, 8;
	add.s32 	%r30, %r28, 16;
	add.s32 	%r31, %r28, 24;
	.loc	1 34 30                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:34:30
	mul.wide.s32 	%rd34, %r28, 2;
	add.s64 	%rd1, %rd31, %rd34;
	mul.wide.s32 	%rd35, %r29, 2;
	add.s64 	%rd2, %rd31, %rd35;
	mul.wide.s32 	%rd36, %r30, 2;
	add.s64 	%rd3, %rd31, %rd36;
	mul.wide.s32 	%rd37, %r31, 2;
	add.s64 	%rd4, %rd31, %rd37;
	.loc	1 34 75                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:34:75
	and.pred  	%p3, %p9, %p1;
	mov.b32 	%r2, 0;
	.loc	1 34 67                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:34:67
	// begin inline asm
	mov.u32 %r1, %r2;
	@%p1 ld.global.b32 { %r1 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r1;
	// begin inline asm
	mov.u32 %r3, %r2;
	@%p1 ld.global.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	{%rs3, %rs4}, %r3;
	// begin inline asm
	mov.u32 %r5, %r2;
	@%p3 ld.global.b32 { %r5 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	{%rs5, %rs6}, %r5;
	mov.pred 	%p4, 0;
	// begin inline asm
	mov.u32 %r7, %r2;
	@%p4 ld.global.b32 { %r7 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 35 30                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:35:30
	mul.wide.u32 	%rd38, %r25, 8;
	add.s64 	%rd6, %rd32, %rd38;
	add.s64 	%rd10, %rd6, 32;
	add.s64 	%rd14, %rd6, 64;
	add.s64 	%rd18, %rd6, 96;
	mov.pred 	%p5, -1;
	.loc	1 35 37                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:35:37
	// begin inline asm
	mov.u64 %rd5, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd5 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd7, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd7 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd9, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd9 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd11, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd11 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd13, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd13 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd15, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd15 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd17, 0x0;
	@%p4 ld.global.L1::evict_last.b64 { %rd17 }, [ %rd18 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd19, 0x0;
	@%p4 ld.global.L1::evict_last.b64 { %rd19 }, [ %rd18 + 0 ];
	// end inline asm
	.loc	1 37 18                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:37:18
	cvt.f32.bf16 	%f1, %rs1;
	setp.gt.f32 	%p23, %f1, 0f00000000;
	cvt.f32.bf16 	%f2, %rs2;
	setp.gt.f32 	%p24, %f2, 0f00000000;
	cvt.f32.bf16 	%f3, %rs3;
	setp.gt.f32 	%p25, %f3, 0f00000000;
	cvt.f32.bf16 	%f4, %rs4;
	setp.gt.f32 	%p26, %f4, 0f00000000;
	cvt.f32.bf16 	%f5, %rs5;
	setp.gt.f32 	%p27, %f5, 0f00000000;
	cvt.f32.bf16 	%f6, %rs6;
	setp.gt.f32 	%p28, %f6, 0f00000000;
	.loc	1 45 21                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:45:21
	cvt.s64.s32 	%rd39, %rd7;
	cvt.s64.s32 	%rd40, %rd11;
	cvt.s64.s32 	%rd41, %rd15;
	.loc	1 47 45                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:47:45
	selp.b64 	%rd42, %rd39, 0, %p23;
	selp.b64 	%rd43, %rd42, 0, %p1;
	selp.b64 	%rd44, %rd39, 0, %p24;
	selp.b64 	%rd45, %rd44, 0, %p1;
	selp.b64 	%rd46, %rd40, 0, %p25;
	selp.b64 	%rd47, %rd46, 0, %p1;
	selp.b64 	%rd48, %rd40, 0, %p26;
	selp.b64 	%rd49, %rd48, 0, %p1;
	selp.b64 	%rd50, %rd41, 0, %p27;
	selp.b64 	%rd51, %rd50, 0, %p3;
	selp.b64 	%rd52, %rd41, 0, %p28;
	selp.b64 	%rd53, %rd52, 0, %p3;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd54, %rd47, %rd43;
	add.s64 	%rd55, %rd49, %rd45;
	add.s64 	%rd21, %rd54, %rd51;
	add.s64 	%rd22, %rd55, %rd53;
	.loc	2 286 36                        // standard.py:286:36
	shl.b32 	%r32, %r25, 3;
	shl.b32 	%r33, %r20, 5;
	or.b32  	%r34, %r33, %r32;
	mov.u32 	%r35, global_smem;
	add.s32 	%r9, %r35, %r34;
	// begin inline asm
	@%p5 st.shared.b64 [ %r9 + 0 ], %rd21;
	// end inline asm
	add.s32 	%r10, %r9, 32;
	// begin inline asm
	@%p5 st.shared.b64 [ %r10 + 0 ], %rd22;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p15, %r18, 512;
	shl.b32 	%r36, %r18, 3;
	add.s32 	%r11, %r35, %r36;
	// begin inline asm
	@%p15 ld.shared.b64 %rd23, [ %r11 + 0 ];
	// end inline asm
	{ .reg .b32 tmp; mov.b64 {tmp, %r37}, %rd23; }
	cvt.u32.u64 	%r38, %rd23;
	shfl.sync.bfly.b32	%r39, %r38, 2, 31, -1;
	shfl.sync.bfly.b32	%r40, %r37, 2, 31, -1;
	cvt.u64.u32 	%rd56, %r39;
	cvt.u64.u32 	%rd57, %r40;
	shl.b64 	%rd58, %rd57, 32;
	or.b64  	%rd59, %rd56, %rd58;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd60, %rd23, %rd59;
	.loc	2 286 36                        // standard.py:286:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r41}, %rd60; }
	cvt.u32.u64 	%r42, %rd60;
	shfl.sync.bfly.b32	%r43, %r42, 1, 31, -1;
	shfl.sync.bfly.b32	%r44, %r41, 1, 31, -1;
	cvt.u64.u32 	%rd61, %r43;
	cvt.u64.u32 	%rd62, %r44;
	shl.b64 	%rd63, %rd62, 32;
	or.b64  	%rd64, %rd61, %rd63;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd24, %rd60, %rd64;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r45, %r18, 3;
	setp.eq.s32 	%p29, %r45, 0;
	and.pred  	%p16, %p15, %p29;
	// begin inline asm
	@%p16 st.shared.b64 [ %r11 + 0 ], %rd24;
	// end inline asm
	add.s32 	%r13, %r11, 2048;
	// begin inline asm
	@%p15 ld.shared.b64 %rd25, [ %r13 + 0 ];
	// end inline asm
	{ .reg .b32 tmp; mov.b64 {tmp, %r46}, %rd25; }
	cvt.u32.u64 	%r47, %rd25;
	shfl.sync.bfly.b32	%r48, %r47, 2, 31, -1;
	shfl.sync.bfly.b32	%r49, %r46, 2, 31, -1;
	cvt.u64.u32 	%rd65, %r48;
	cvt.u64.u32 	%rd66, %r49;
	shl.b64 	%rd67, %rd66, 32;
	or.b64  	%rd68, %rd65, %rd67;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd69, %rd25, %rd68;
	.loc	2 286 36                        // standard.py:286:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r50}, %rd69; }
	cvt.u32.u64 	%r51, %rd69;
	shfl.sync.bfly.b32	%r52, %r51, 1, 31, -1;
	shfl.sync.bfly.b32	%r53, %r50, 1, 31, -1;
	cvt.u64.u32 	%rd70, %r52;
	cvt.u64.u32 	%rd71, %r53;
	shl.b64 	%rd72, %rd71, 32;
	or.b64  	%rd73, %rd70, %rd72;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd26, %rd69, %rd73;
	.loc	2 286 36                        // standard.py:286:36
	// begin inline asm
	@%p16 st.shared.b64 [ %r13 + 0 ], %rd26;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r54, %r35, %r33;
	ld.shared.u64 	%rd27, [%r54];
	ld.shared.u64 	%rd28, [%r54+32];
$L__tmp2:
	.loc	1 48 29                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:48:29
	bar.sync 	0;
	mad.lo.s32 	%r15, %r20, -24, %r54;
	// begin inline asm
	@%p5 st.shared.v2.b64 [ %r15 + 0 ], { %rd27, %rd28 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r55, %r21, 3;
	add.s32 	%r56, %r35, %r55;
	ld.shared.u64 	%rd29, [%r56];
	.loc	1 49 25                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:49:25
	mul.wide.s32 	%rd74, %r23, 8;
	add.s64 	%rd30, %rd33, %rd74;
	.loc	1 49 37                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:49:37
	and.pred  	%p20, %p22, %p21;
	// begin inline asm
	@%p20 st.global.b64 [ %rd30 + 0 ], { %rd29 };
	// end inline asm
	.loc	1 49 4                          // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:49:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py"
	.file	2 "/home/utka/proj/evs/vlm/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 236                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 110
.b8 122
.b8 54
.b8 115
.b8 111
.b8 100
.b8 117
.b8 52
.b8 55
.b8 101
.b8 53
.b8 109
.b8 113
.b8 114
.b8 115
.b8 119
.b8 121
.b8 106
.b8 122
.b8 54
.b8 121
.b8 55
.b8 99
.b8 120
.b8 54
.b8 50
.b8 118
.b8 117
.b8 121
.b8 100
.b8 119
.b8 121
.b8 101
.b8 101
.b8 98
.b8 113
.b8 107
.b8 110
.b8 100
.b8 106
.b8 111
.b8 108
.b8 114
.b8 111
.b8 105
.b8 122
.b8 104
.b8 117
.b8 103
.b8 113
.b8 100
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 114                                 // DW_AT_comp_dir
.b8 101
.b8 115
.b8 117
.b8 108
.b8 116
.b8 115
.b8 47
.b8 109
.b8 101
.b8 109
.b8 111
.b8 114
.b8 121
.b8 95
.b8 111
.b8 112
.b8 116
.b8 105
.b8 109
.b8 105
.b8 122
.b8 101
.b8 100
.b8 95
.b8 101
.b8 120
.b8 112
.b8 101
.b8 114
.b8 105
.b8 109
.b8 101
.b8 110
.b8 116
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 95
.b8 48
.b8 47
.b8 110
.b8 122
.b8 0
.b8 2                                   // Abbrev [2] 0x8e:0x33 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 103
.b8 116
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 110
.b8 101
.b8 103
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 119
.b8 104
.b8 101
.b8 114
.b8 101
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xc1:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 142                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xd6:0x18 DW_TAG_inlined_subroutine
.b32 142                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
