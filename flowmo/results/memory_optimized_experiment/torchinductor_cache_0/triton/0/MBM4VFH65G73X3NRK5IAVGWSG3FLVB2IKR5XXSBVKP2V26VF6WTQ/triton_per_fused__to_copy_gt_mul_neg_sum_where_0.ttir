#loc = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":18:0)
#loc1 = loc(unknown)
#loc32 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":48:26)
#loc39 = loc(callsite(#loc1 at #loc32))
module {
  tt.func public @triton_per_fused__to_copy_gt_mul_neg_sum_where_0(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":18:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":18:0), %arg2: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":18:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":18:0), %arg4: i32 loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0> : tensor<1x16xi64> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<8x16xbf16> loc(#loc1)
    %cst_1 = arith.constant dense<0> : tensor<8x16xi64> loc(#loc1)
    %cst_2 = arith.constant dense<-1.000000e+00> : tensor<8x16xf32> loc(#loc1)
    %cst_3 = arith.constant dense<1.000000e+00> : tensor<8x16xf32> loc(#loc1)
    %cst_4 = arith.constant dense<0.000000e+00> : tensor<8x16xf32> loc(#loc1)
    %cst_5 = arith.constant dense<18> : tensor<8x1xi32> loc(#loc1)
    %cst_6 = arith.constant dense<2> : tensor<8x1xi32> loc(#loc1)
    %cst_7 = arith.constant dense<2> : tensor<1x16xi32> loc(#loc1)
    %cst_8 = arith.constant dense<9> : tensor<1x16xi32> loc(#loc1)
    %cst_9 = arith.constant dense<512> : tensor<8x1xi32> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<8xi32> -> tensor<8x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<8x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<8x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_9 : tensor<8x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc9)
    %9 = arith.cmpi slt, %8, %cst_8 : tensor<1x16xi32> loc(#loc10)
    %10 = arith.muli %8, %cst_7 : tensor<1x16xi32> loc(#loc11)
    %11 = arith.divsi %5, %cst_6 : tensor<8x1xi32> loc(#loc12)
    %12 = arith.muli %11, %cst_5 : tensor<8x1xi32> loc(#loc13)
    %13 = tt.broadcast %10 : tensor<1x16xi32> -> tensor<8x16xi32> loc(#loc14)
    %14 = tt.broadcast %12 : tensor<8x1xi32> -> tensor<8x16xi32> loc(#loc14)
    %15 = arith.addi %13, %14 : tensor<8x16xi32> loc(#loc14)
    %16 = arith.remsi %5, %cst_6 : tensor<8x1xi32> loc(#loc15)
    %17 = tt.broadcast %16 : tensor<8x1xi32> -> tensor<8x16xi32> loc(#loc16)
    %18 = arith.addi %15, %17 : tensor<8x16xi32> loc(#loc16)
    %19 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<8x16x!tt.ptr<bf16>> loc(#loc17)
    %20 = tt.addptr %19, %18 : tensor<8x16x!tt.ptr<bf16>>, tensor<8x16xi32> loc(#loc17)
    %21 = tt.broadcast %6 : tensor<8x1xi1> -> tensor<8x16xi1> loc(#loc18)
    %22 = tt.broadcast %9 : tensor<1x16xi1> -> tensor<8x16xi1> loc(#loc18)
    %23 = arith.andi %21, %22 : tensor<8x16xi1> loc(#loc18)
    %24 = tt.load %20, %23, %cst_0 : tensor<8x16x!tt.ptr<bf16>> loc(#loc19)
    %25 = arith.extf %24 : tensor<8x16xbf16> to tensor<8x16xf32> loc(#loc20)
    %26 = tt.splat %arg1 : !tt.ptr<i64> -> tensor<1x16x!tt.ptr<i64>> loc(#loc21)
    %27 = tt.addptr %26, %8 : tensor<1x16x!tt.ptr<i64>>, tensor<1x16xi32> loc(#loc21)
    %28 = tt.load %27, %9, %cst evictionPolicy = evict_last : tensor<1x16x!tt.ptr<i64>> loc(#loc22)
    %29 = arith.cmpf ogt, %25, %cst_4 : tensor<8x16xf32> loc(#loc23)
    %30 = arith.select %29, %cst_3, %cst_2 : tensor<8x16xi1>, tensor<8x16xf32> loc(#loc24)
    %31 = arith.cmpf ogt, %30, %cst_4 : tensor<8x16xf32> loc(#loc25)
    %32 = arith.extui %31 : tensor<8x16xi1> to tensor<8x16xi32> loc(#loc26)
    %33 = arith.trunci %28 : tensor<1x16xi64> to tensor<1x16xi32> loc(#loc27)
    %34 = tt.broadcast %33 : tensor<1x16xi32> -> tensor<8x16xi32> loc(#loc28)
    %35 = arith.muli %32, %34 : tensor<8x16xi32> loc(#loc28)
    %36 = arith.extsi %35 : tensor<8x16xi32> to tensor<8x16xi64> loc(#loc29)
    %37 = arith.select %23, %36, %cst_1 : tensor<8x16xi1>, tensor<8x16xi64> loc(#loc30)
    %38 = "tt.reduce"(%37) <{axis = 1 : i32}> ({
    ^bb0(%arg5: i64 loc(callsite(#loc1 at #loc32)), %arg6: i64 loc(callsite(#loc1 at #loc32))):
      %42 = arith.addi %arg5, %arg6 : i64 loc(#loc41)
      tt.reduce.return %42 : i64 loc(#loc38)
    }) : (tensor<8x16xi64>) -> tensor<8xi64> loc(#loc38)
    %39 = tt.expand_dims %38 {axis = 1 : i32} : tensor<8xi64> -> tensor<8x1xi64> loc(#loc34)
    %40 = tt.splat %arg2 : !tt.ptr<i64> -> tensor<8x1x!tt.ptr<i64>> loc(#loc35)
    %41 = tt.addptr %40, %5 : tensor<8x1x!tt.ptr<i64>>, tensor<8x1xi32> loc(#loc35)
    tt.store %41, %39, %6 : tensor<8x1x!tt.ptr<i64>> loc(#loc36)
    tt.return loc(#loc37)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":24:28)
#loc3 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":24:33)
#loc4 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":25:36)
#loc5 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":25:44)
#loc6 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":25:23)
#loc7 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":26:21)
#loc8 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":27:28)
#loc9 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":27:38)
#loc10 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":29:25)
#loc11 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":34:32)
#loc12 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":34:49)
#loc13 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":34:43)
#loc14 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":34:39)
#loc15 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":34:61)
#loc16 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":34:56)
#loc17 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":34:30)
#loc18 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":34:75)
#loc19 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":34:67)
#loc20 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":34:98)
#loc21 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":35:30)
#loc22 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":35:37)
#loc23 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":37:18)
#loc24 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":40:32)
#loc25 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":41:18)
#loc26 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":42:19)
#loc27 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":43:19)
#loc28 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":44:19)
#loc29 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":45:21)
#loc30 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":47:45)
#loc31 = loc("/home/utka/proj/evs/vlm/lib/python3.12/site-packages/triton/language/standard.py":286:36)
#loc33 = loc("/home/utka/proj/evs/vlm/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc34 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":48:29)
#loc35 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":49:25)
#loc36 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":49:37)
#loc37 = loc("results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py":49:4)
#loc38 = loc(callsite(#loc31 at #loc32))
#loc40 = loc(callsite(#loc33 at #loc31))
#loc41 = loc(callsite(#loc40 at #loc32))
