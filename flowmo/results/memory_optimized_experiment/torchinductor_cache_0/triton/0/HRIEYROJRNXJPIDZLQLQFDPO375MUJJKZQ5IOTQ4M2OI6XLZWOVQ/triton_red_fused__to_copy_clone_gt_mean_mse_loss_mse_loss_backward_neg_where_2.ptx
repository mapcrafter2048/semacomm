//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_red_fused__to_copy_clone_gt_mean_mse_loss_mse_loss_backward_neg_where_2 // -- Begin function triton_red_fused__to_copy_clone_gt_mean_mse_loss_mse_loss_backward_neg_where_2
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused__to_copy_clone_gt_mean_mse_loss_mse_loss_backward_neg_where_2
.visible .entry triton_red_fused__to_copy_clone_gt_mean_mse_loss_mse_loss_backward_neg_where_2(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_clone_gt_mean_mse_loss_mse_loss_backward_neg_where_2_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_clone_gt_mean_mse_loss_mse_loss_backward_neg_where_2_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_clone_gt_mean_mse_loss_mse_loss_backward_neg_where_2_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_clone_gt_mean_mse_loss_mse_loss_backward_neg_where_2_param_3,
	.param .u32 triton_red_fused__to_copy_clone_gt_mean_mse_loss_mse_loss_backward_neg_where_2_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_clone_gt_mean_mse_loss_mse_loss_backward_neg_where_2_param_5
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<28>;
	.reg .b16 	%rs<25>;
	.reg .b32 	%r<63>;
	.reg .f32 	%f<75>;
	.reg .b64 	%rd<47>;
	.loc	1 18 0                          // cioxfswbedcqoklpnb7bgicyr34cvhiwdfan5t27onhk53ovrknv.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cioxfswbedcqoklpnb7bgicyr34cvhiwdfan5t27onhk53ovrknv.py:18:0

// %bb.0:
	ld.param.u64 	%rd42, [triton_red_fused__to_copy_clone_gt_mean_mse_loss_mse_loss_backward_neg_where_2_param_3];
	ld.param.u64 	%rd45, [triton_red_fused__to_copy_clone_gt_mean_mse_loss_mse_loss_backward_neg_where_2_param_0];
$L__tmp0:
	.loc	1 26 37                         // cioxfswbedcqoklpnb7bgicyr34cvhiwdfan5t27onhk53ovrknv.py:26:37
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd21, [triton_red_fused__to_copy_clone_gt_mean_mse_loss_mse_loss_backward_neg_where_2_param_1];
	and.b32  	%r2, %r1, 511;
	ld.param.u64 	%rd22, [triton_red_fused__to_copy_clone_gt_mean_mse_loss_mse_loss_backward_neg_where_2_param_2];
	shl.b32 	%r8, %r1, 2;
	and.b32  	%r9, %r8, 2044;
	cvt.u64.u32 	%rd1, %r9;
	shl.b32 	%r10, %r9, 1;
	mov.u32 	%r11, global_smem;
	add.s32 	%r22, %r11, %r10;
	shl.b32 	%r12, %r2, 1;
	add.s32 	%r23, %r11, %r12;
	add.s32 	%r24, %r23, 1024;
	add.s32 	%r25, %r23, 2048;
	add.s32 	%r26, %r23, 3072;
	bfe.u32 	%r13, %r1, 1, 8;
	mul.lo.s32 	%r14, %r13, 18;
	and.b32  	%r15, %r1, 1;
	.loc	1 29 40                         // cioxfswbedcqoklpnb7bgicyr34cvhiwdfan5t27onhk53ovrknv.py:29:40
	or.b32  	%r16, %r14, %r15;
	mul.wide.u32 	%rd2, %r16, 2;
	cvt.u64.u32 	%rd23, %r1;
	and.b64  	%rd3, %rd23, 511;
	mul.wide.u32 	%rd24, %r2, 16;
	add.s64 	%rd44, %rd22, %rd24;
	mul.wide.u32 	%rd25, %r2, 8;
	add.s64 	%rd43, %rd21, %rd25;
	and.b32  	%r17, %r1, 127;
	mul.wide.u32 	%rd26, %r17, 72;
	shr.u64 	%rd27, %rd1, 7;
	and.b64  	%rd28, %rd27, 12;
	add.s64 	%rd6, %rd26, %rd28;
	add.s64 	%rd7, %rd2, 12;
	add.s64 	%rd8, %rd2, 8;
	add.s64 	%rd9, %rd2, 4;
	mov.f32 	%f71, 0f00000000;
	mov.b64 	%rd46, -2048;
	mov.f32 	%f72, %f71;
	mov.f32 	%f73, %f71;
	mov.f32 	%f74, %f71;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 30 31                         // cioxfswbedcqoklpnb7bgicyr34cvhiwdfan5t27onhk53ovrknv.py:30:31
	add.s64 	%rd37, %rd3, %rd46;
	add.s64 	%rd38, %rd37, 2560;
	add.s64 	%rd39, %rd37, 3072;
	add.s64 	%rd40, %rd37, 3584;
	.loc	1 29 40                         // cioxfswbedcqoklpnb7bgicyr34cvhiwdfan5t27onhk53ovrknv.py:29:40
	add.s64 	%rd46, %rd46, 2048;
	.loc	1 31 29                         // cioxfswbedcqoklpnb7bgicyr34cvhiwdfan5t27onhk53ovrknv.py:31:29
	add.s64 	%rd41, %rd46, %rd1;
	setp.lt.u64 	%p5, %rd38, 4608;
	setp.lt.u64 	%p6, %rd39, 4608;
	setp.lt.u64 	%p7, %rd40, 4608;
	setp.lt.u64 	%p1, %rd41, 4608;
	.loc	1 39 34                         // cioxfswbedcqoklpnb7bgicyr34cvhiwdfan5t27onhk53ovrknv.py:39:34
	add.s64 	%rd29, %rd45, %rd6;
	.loc	1 39 60                         // cioxfswbedcqoklpnb7bgicyr34cvhiwdfan5t27onhk53ovrknv.py:39:60
	add.s64 	%rd30, %rd29, 36;
	mov.b32 	%r19, 0;
	// begin inline asm
	mov.u32 %r27, %r19;
	@%p1 ld.global.L1::evict_last.b32 { %r27 }, [ %rd29 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r27;
	// begin inline asm
	mov.u32 %r28, %r19;
	@%p1 ld.global.L1::evict_last.b32 { %r28 }, [ %rd30 + 0 ];
	// end inline asm
	mov.b32 	{%rs3, %rs4}, %r28;
	.loc	1 39 113                        // cioxfswbedcqoklpnb7bgicyr34cvhiwdfan5t27onhk53ovrknv.py:39:113
	cvt.f32.bf16 	%f10, %rs1;
	cvt.f32.bf16 	%f11, %rs2;
	cvt.f32.bf16 	%f12, %rs3;
	cvt.f32.bf16 	%f13, %rs4;
	bar.sync 	0;
	mov.pred 	%p3, -1;
	// begin inline asm
	@%p3 st.shared.v4.b16 [ %r22 + 0 ], { %rs1, %rs2, %rs3, %rs4 };
	// end inline asm
	bar.sync 	0;
	ld.shared.b16 	%rs17, [%r23];
	ld.shared.b16 	%rs18, [%r23+1024];
	ld.shared.b16 	%rs19, [%r23+2048];
	ld.shared.b16 	%rs20, [%r23+3072];
	cvt.f32.bf16 	%f14, %rs17;
	cvt.f32.bf16 	%f15, %rs18;
	cvt.f32.bf16 	%f16, %rs19;
	cvt.f32.bf16 	%f17, %rs20;
	.loc	1 40 34                         // cioxfswbedcqoklpnb7bgicyr34cvhiwdfan5t27onhk53ovrknv.py:40:34
	add.s64 	%rd31, %rd45, %rd2;
	add.s64 	%rd32, %rd45, %rd9;
	add.s64 	%rd33, %rd45, %rd8;
	.loc	1 40 75                         // cioxfswbedcqoklpnb7bgicyr34cvhiwdfan5t27onhk53ovrknv.py:40:75
	add.s64 	%rd34, %rd45, %rd7;
	mov.b16 	%rs6, 0;
	// begin inline asm
	mov.u16 %rs13, %rs6;
	@%p3 ld.global.L1::evict_first.b16 { %rs13 }, [ %rd31 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs14, %rs6;
	@%p5 ld.global.L1::evict_first.b16 { %rs14 }, [ %rd32 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs15, %rs6;
	@%p6 ld.global.L1::evict_first.b16 { %rs15 }, [ %rd33 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs16, %rs6;
	@%p7 ld.global.L1::evict_first.b16 { %rs16 }, [ %rd34 + 0 ];
	// end inline asm
	.loc	1 50 23                         // cioxfswbedcqoklpnb7bgicyr34cvhiwdfan5t27onhk53ovrknv.py:50:23
	bar.sync 	0;
	// begin inline asm
	@%p3 st.shared.b16 [ %r23 + 0 ], %rs13;
	// end inline asm
	// begin inline asm
	@%p3 st.shared.b16 [ %r24 + 0 ], %rs14;
	// end inline asm
	// begin inline asm
	@%p3 st.shared.b16 [ %r25 + 0 ], %rs15;
	// end inline asm
	// begin inline asm
	@%p3 st.shared.b16 [ %r26 + 0 ], %rs16;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.b16 	{%rs21, %rs22, %rs23, %rs24}, [%r22];
	.loc	1 43 22                         // cioxfswbedcqoklpnb7bgicyr34cvhiwdfan5t27onhk53ovrknv.py:43:22
	cvt.f32.bf16 	%f18, %rs21;
	setp.gt.f32 	%p14, %f18, 0f00000000;
	cvt.f32.bf16 	%f19, %rs22;
	setp.gt.f32 	%p15, %f19, 0f00000000;
	cvt.f32.bf16 	%f20, %rs23;
	setp.gt.f32 	%p16, %f20, 0f00000000;
	cvt.f32.bf16 	%f21, %rs24;
	setp.gt.f32 	%p17, %f21, 0f00000000;
	cvt.f32.bf16 	%f22, %rs13;
	setp.gt.f32 	%p18, %f22, 0f00000000;
	cvt.f32.bf16 	%f23, %rs14;
	setp.gt.f32 	%p19, %f23, 0f00000000;
	cvt.f32.bf16 	%f24, %rs15;
	setp.gt.f32 	%p20, %f24, 0f00000000;
	cvt.f32.bf16 	%f25, %rs16;
	setp.gt.f32 	%p21, %f25, 0f00000000;
	.loc	1 46 36                         // cioxfswbedcqoklpnb7bgicyr34cvhiwdfan5t27onhk53ovrknv.py:46:36
	selp.f32 	%f26, 0f3F800000, 0fBF800000, %p14;
	selp.f32 	%f27, 0f3F800000, 0fBF800000, %p15;
	selp.f32 	%f28, 0f3F800000, 0fBF800000, %p16;
	selp.f32 	%f29, 0f3F800000, 0fBF800000, %p17;
	selp.f32 	%f30, 0f3F800000, 0fBF800000, %p18;
	selp.f32 	%f31, 0f3F800000, 0fBF800000, %p19;
	selp.f32 	%f32, 0f3F800000, 0fBF800000, %p20;
	selp.f32 	%f33, 0f3F800000, 0fBF800000, %p21;
	.loc	1 48 22                         // cioxfswbedcqoklpnb7bgicyr34cvhiwdfan5t27onhk53ovrknv.py:48:22
	sub.f32 	%f34, %f10, %f26;
	sub.f32 	%f35, %f11, %f27;
	sub.f32 	%f36, %f12, %f28;
	sub.f32 	%f37, %f13, %f29;
	sub.f32 	%f38, %f14, %f30;
	sub.f32 	%f39, %f15, %f31;
	sub.f32 	%f40, %f16, %f32;
	sub.f32 	%f41, %f17, %f33;
	.loc	1 50 23                         // cioxfswbedcqoklpnb7bgicyr34cvhiwdfan5t27onhk53ovrknv.py:50:23
	add.f32 	%f42, %f34, %f34;
	add.f32 	%f43, %f35, %f35;
	add.f32 	%f44, %f36, %f36;
	add.f32 	%f45, %f37, %f37;
	.loc	1 53 25                         // cioxfswbedcqoklpnb7bgicyr34cvhiwdfan5t27onhk53ovrknv.py:53:25
	fma.rn.f32 	%f71, %f38, %f38, %f71;
	fma.rn.f32 	%f46, %f39, %f39, %f72;
	fma.rn.f32 	%f47, %f40, %f40, %f73;
	fma.rn.f32 	%f48, %f41, %f41, %f74;
	.loc	1 54 42                         // cioxfswbedcqoklpnb7bgicyr34cvhiwdfan5t27onhk53ovrknv.py:54:42
	selp.f32 	%f72, %f46, %f72, %p5;
	selp.f32 	%f73, %f47, %f73, %p6;
	selp.f32 	%f74, %f48, %f74, %p7;
	.loc	1 55 79                         // cioxfswbedcqoklpnb7bgicyr34cvhiwdfan5t27onhk53ovrknv.py:55:79
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd43 + 0 ], { %r27, %r28 };
	// end inline asm
	.loc	1 56 80                         // cioxfswbedcqoklpnb7bgicyr34cvhiwdfan5t27onhk53ovrknv.py:56:80
	mov.b32 	%r29, %f42;
	mov.b32 	%r30, %f43;
	mov.b32 	%r31, %f44;
	mov.b32 	%r32, %f45;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd44 + 0 ], { %r29, %r30, %r31, %r32 };
	// end inline asm
	.loc	1 29 40                         // cioxfswbedcqoklpnb7bgicyr34cvhiwdfan5t27onhk53ovrknv.py:29:40
	add.s64 	%rd45, %rd45, 16;
	add.s64 	%rd44, %rd44, 8192;
	add.s64 	%rd43, %rd43, 4096;
	setp.lt.u64 	%p22, %rd46, 2560;
	@%p22 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 26 37                         // cioxfswbedcqoklpnb7bgicyr34cvhiwdfan5t27onhk53ovrknv.py:26:37
	and.b32  	%r40, %r1, 31;
$L__tmp1:
	.loc	2 286 36                        // standard.py:286:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f71, %f72;
	add.f32 	%f50, %f73, %f49;
	add.f32 	%f51, %f74, %f50;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r41, %f51;
	shfl.sync.bfly.b32	%r42, %r41, 16, 31, -1;
	mov.b32 	%f52, %r42;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r43, %f53;
	shfl.sync.bfly.b32	%r44, %r43, 8, 31, -1;
	mov.b32 	%f54, %r44;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f55, %f53, %f54;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r45, %f55;
	shfl.sync.bfly.b32	%r46, %r45, 4, 31, -1;
	mov.b32 	%f56, %r46;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f57, %f55, %f56;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r47, %f57;
	shfl.sync.bfly.b32	%r48, %r47, 2, 31, -1;
	mov.b32 	%f58, %r48;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f59, %f57, %f58;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r49, %f59;
	shfl.sync.bfly.b32	%r50, %r49, 1, 31, -1;
	mov.b32 	%f60, %r50;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f61, %f59, %f60;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p23, %r40, 0;
	shr.u32 	%r51, %r1, 3;
	and.b32  	%r52, %r51, 60;
	add.s32 	%r33, %r11, %r52;
	mov.b32 	%r34, %f61;
	// begin inline asm
	@%p23 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p24, %r1, 16;
	add.s32 	%r36, %r11, %r8;
	// begin inline asm
	@%p24 ld.shared.b32 %r35, [ %r36 + 0 ];
	// end inline asm
	mov.b32 	%f62, %r35;
	shfl.sync.bfly.b32	%r55, %r35, 8, 31, -1;
	mov.b32 	%f63, %r55;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f64, %f62, %f63;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r56, %f64;
	shfl.sync.bfly.b32	%r57, %r56, 4, 31, -1;
	mov.b32 	%f65, %r57;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f66, %f64, %f65;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r58, %f66;
	shfl.sync.bfly.b32	%r59, %r58, 2, 31, -1;
	mov.b32 	%f67, %r59;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f68, %f66, %f67;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r60, %f68;
	shfl.sync.bfly.b32	%r61, %r60, 1, 31, -1;
	mov.b32 	%f69, %r61;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f70, %f68, %f69;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r62, %r1, 15;
	setp.eq.s32 	%p27, %r62, 0;
	and.pred  	%p25, %p24, %p27;
	mov.b32 	%r38, %f70;
	// begin inline asm
	@%p25 st.shared.b32 [ %r36 + 0 ], %r38;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r39, [global_smem];
$L__tmp2:
	.loc	1 58 68                         // cioxfswbedcqoklpnb7bgicyr34cvhiwdfan5t27onhk53ovrknv.py:58:68
	setp.eq.s32 	%p26, %r2, 0;
	// begin inline asm
	@%p26 st.global.b32 [ %rd42 + 0 ], { %r39 };
	// end inline asm
	.loc	1 58 4                          // cioxfswbedcqoklpnb7bgicyr34cvhiwdfan5t27onhk53ovrknv.py:58:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "results/memory_optimized_experiment/torchinductor_cache_0/io/cioxfswbedcqoklpnb7bgicyr34cvhiwdfan5t27onhk53ovrknv.py"
	.file	2 "/home/utka/proj/evs/vlm/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 266                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x103 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 105
.b8 111
.b8 120
.b8 102
.b8 115
.b8 119
.b8 98
.b8 101
.b8 100
.b8 99
.b8 113
.b8 111
.b8 107
.b8 108
.b8 112
.b8 110
.b8 98
.b8 55
.b8 98
.b8 103
.b8 105
.b8 99
.b8 121
.b8 114
.b8 51
.b8 52
.b8 99
.b8 118
.b8 104
.b8 105
.b8 119
.b8 100
.b8 102
.b8 97
.b8 110
.b8 53
.b8 116
.b8 50
.b8 55
.b8 111
.b8 110
.b8 104
.b8 107
.b8 53
.b8 51
.b8 111
.b8 118
.b8 114
.b8 107
.b8 110
.b8 118
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 114                                 // DW_AT_comp_dir
.b8 101
.b8 115
.b8 117
.b8 108
.b8 116
.b8 115
.b8 47
.b8 109
.b8 101
.b8 109
.b8 111
.b8 114
.b8 121
.b8 95
.b8 111
.b8 112
.b8 116
.b8 105
.b8 109
.b8 105
.b8 122
.b8 101
.b8 100
.b8 95
.b8 101
.b8 120
.b8 112
.b8 101
.b8 114
.b8 105
.b8 109
.b8 101
.b8 110
.b8 116
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 95
.b8 48
.b8 47
.b8 105
.b8 111
.b8 0
.b8 2                                   // Abbrev [2] 0x8e:0x51 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 99
.b8 108
.b8 111
.b8 110
.b8 101
.b8 95
.b8 103
.b8 116
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 115
.b8 101
.b8 95
.b8 108
.b8 111
.b8 115
.b8 115
.b8 95
.b8 109
.b8 115
.b8 101
.b8 95
.b8 108
.b8 111
.b8 115
.b8 115
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 110
.b8 101
.b8 103
.b8 95
.b8 119
.b8 104
.b8 101
.b8 114
.b8 101
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xdf:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 142                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xf4:0x18 DW_TAG_inlined_subroutine
.b32 142                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 57                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
