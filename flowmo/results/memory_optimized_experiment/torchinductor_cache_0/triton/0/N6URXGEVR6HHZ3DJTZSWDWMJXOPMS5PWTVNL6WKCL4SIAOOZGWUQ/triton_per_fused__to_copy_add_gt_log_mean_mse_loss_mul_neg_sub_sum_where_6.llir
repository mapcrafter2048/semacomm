; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define ptx_kernel void @triton_per_fused__to_copy_add_gt_log_mean_mse_loss_mul_neg_sub_sum_where_6(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4, ptr addrspace(1) readnone captures(none) %5) local_unnamed_addr !dbg !6 {
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !9
  %8 = shl i32 %7, 2, !dbg !9
  %9 = and i32 %8, 508, !dbg !9
  %10 = zext nneg i32 %9 to i64, !dbg !10
  %11 = getelementptr float, ptr addrspace(1) %1, i64 %10, !dbg !10
  %12 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l"(ptr addrspace(1) %11) #5, !dbg !11
  %13 = extractvalue { i32, i32, i32, i32 } %12, 0, !dbg !11
  %14 = extractvalue { i32, i32, i32, i32 } %12, 1, !dbg !11
  %15 = extractvalue { i32, i32, i32, i32 } %12, 2, !dbg !11
  %16 = extractvalue { i32, i32, i32, i32 } %12, 3, !dbg !11
  %17 = bitcast i32 %13 to float, !dbg !11
  %18 = bitcast i32 %14 to float, !dbg !11
  %19 = bitcast i32 %15 to float, !dbg !11
  %20 = bitcast i32 %16 to float, !dbg !11
  %21 = getelementptr float, ptr addrspace(1) %2, i64 %10, !dbg !12
  %22 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l"(ptr addrspace(1) %21) #5, !dbg !13
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %3) #5, !dbg !14
  %24 = fadd float %17, 0x3EE4F8B580000000, !dbg !15
  %25 = fadd float %18, 0x3EE4F8B580000000, !dbg !15
  %26 = fadd float %19, 0x3EE4F8B580000000, !dbg !15
  %27 = fadd float %20, 0x3EE4F8B580000000, !dbg !15
  %28 = fcmp olt float %24, 0x3810000000000000, !dbg !16
  %29 = fmul float %24, 0x4160000000000000, !dbg !16
  %.02.i = select i1 %28, float %29, float %24, !dbg !16
  %i.i.0.i = select i1 %28, float -2.300000e+01, float 0.000000e+00, !dbg !16
  %30 = bitcast float %.02.i to i32, !dbg !16
  %31 = add i32 %30, -1059760811, !dbg !16
  %32 = and i32 %31, -8388608, !dbg !16
  %33 = sub i32 %30, %32, !dbg !16
  %34 = bitcast i32 %33 to float, !dbg !16
  %35 = sitofp i32 %32 to float, !dbg !16
  %36 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not.i = icmp eq i32 %36, 0, !dbg !16
  %37 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %35, float 0x3E80000000000000, float %i.i.0.i) #5, !dbg !16
  %38 = tail call float @llvm.nvvm.fma.rn.f(float %35, float 0x3E80000000000000, float %i.i.0.i) #5, !dbg !16
  %.08.i = select i1 %.not.i, float %38, float %37, !dbg !16
  %39 = fadd float %34, -1.000000e+00, !dbg !16
  %40 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not1.i = icmp eq i32 %40, 0, !dbg !16
  %41 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %39, float 0x3FC2073EC0000000) #5, !dbg !16
  %42 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %39, float 0x3FC2073EC0000000) #5, !dbg !16
  %.010.i = select i1 %.not1.i, float %42, float %41, !dbg !16
  %43 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not2.i = icmp eq i32 %43, 0, !dbg !16
  %44 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %39, float 0xBFBF19B980000000) #5, !dbg !16
  %45 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %39, float 0xBFBF19B980000000) #5, !dbg !16
  %.011.i = select i1 %.not2.i, float %45, float %44, !dbg !16
  %46 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not3.i = icmp eq i32 %46, 0, !dbg !16
  %47 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %39, float 0x3FC1E52AA0000000) #5, !dbg !16
  %48 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %39, float 0x3FC1E52AA0000000) #5, !dbg !16
  %.012.i = select i1 %.not3.i, float %48, float %47, !dbg !16
  %49 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not4.i = icmp eq i32 %49, 0, !dbg !16
  %50 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %39, float 0xBFC55B1720000000) #5, !dbg !16
  %51 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %39, float 0xBFC55B1720000000) #5, !dbg !16
  %.09.i = select i1 %.not4.i, float %51, float %50, !dbg !16
  %52 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not5.i = icmp eq i32 %52, 0, !dbg !16
  %53 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %39, float 0x3FC99DA160000000) #5, !dbg !16
  %54 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %39, float 0x3FC99DA160000000) #5, !dbg !16
  %.05.i = select i1 %.not5.i, float %54, float %53, !dbg !16
  %55 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not6.i = icmp eq i32 %55, 0, !dbg !16
  %56 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %39, float 0xBFCFFFE440000000) #5, !dbg !16
  %57 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %39, float 0xBFCFFFE440000000) #5, !dbg !16
  %.01.i = select i1 %.not6.i, float %57, float %56, !dbg !16
  %58 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not7.i = icmp eq i32 %58, 0, !dbg !16
  %59 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %39, float 0x3FD5554F00000000) #5, !dbg !16
  %60 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %39, float 0x3FD5554F00000000) #5, !dbg !16
  %.0.i = select i1 %.not7.i, float %60, float %59, !dbg !16
  %61 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not8.i = icmp eq i32 %61, 0, !dbg !16
  %62 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %39, float -5.000000e-01) #5, !dbg !16
  %63 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %39, float -5.000000e-01) #5, !dbg !16
  %.07.i = select i1 %.not8.i, float %63, float %62, !dbg !16
  %64 = fmul float %39, %.07.i, !dbg !16
  %65 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not9.i = icmp eq i32 %65, 0, !dbg !16
  %66 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %64, float %39, float %39) #5, !dbg !16
  %67 = tail call float @llvm.nvvm.fma.rn.f(float %64, float %39, float %39) #5, !dbg !16
  %.06.i = select i1 %.not9.i, float %67, float %66, !dbg !16
  %68 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not10.i = icmp eq i32 %68, 0, !dbg !16
  %69 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #5, !dbg !16
  %70 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #5, !dbg !16
  %.04.i = select i1 %.not10.i, float %70, float %69, !dbg !16
  %71 = icmp ugt i32 %30, 2139095039, !dbg !16
  br i1 %71, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !16

__nv_fmaf_rn.exit.i.i:                            ; preds = %6
  %72 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not11.i = icmp eq i32 %72, 0, !dbg !16
  %73 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !16
  %74 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !16
  %.03.i = select i1 %.not11.i, float %74, float %73, !dbg !16
  br label %__nv_logf.exit, !dbg !16

__nv_logf.exit:                                   ; preds = %6, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %6 ], !dbg !16
  %75 = fcmp olt float %25, 0x3810000000000000, !dbg !16
  %76 = fmul float %25, 0x4160000000000000, !dbg !16
  %.02.i1 = select i1 %75, float %76, float %25, !dbg !16
  %i.i.0.i2 = select i1 %75, float -2.300000e+01, float 0.000000e+00, !dbg !16
  %77 = bitcast float %.02.i1 to i32, !dbg !16
  %78 = add i32 %77, -1059760811, !dbg !16
  %79 = and i32 %78, -8388608, !dbg !16
  %80 = sub i32 %77, %79, !dbg !16
  %81 = bitcast i32 %80 to float, !dbg !16
  %82 = sitofp i32 %79 to float, !dbg !16
  %83 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not.i3 = icmp eq i32 %83, 0, !dbg !16
  %84 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %82, float 0x3E80000000000000, float %i.i.0.i2) #5, !dbg !16
  %85 = tail call float @llvm.nvvm.fma.rn.f(float %82, float 0x3E80000000000000, float %i.i.0.i2) #5, !dbg !16
  %.08.i4 = select i1 %.not.i3, float %85, float %84, !dbg !16
  %86 = fadd float %81, -1.000000e+00, !dbg !16
  %87 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not1.i5 = icmp eq i32 %87, 0, !dbg !16
  %88 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %86, float 0x3FC2073EC0000000) #5, !dbg !16
  %89 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %86, float 0x3FC2073EC0000000) #5, !dbg !16
  %.010.i6 = select i1 %.not1.i5, float %89, float %88, !dbg !16
  %90 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not2.i7 = icmp eq i32 %90, 0, !dbg !16
  %91 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i6, float %86, float 0xBFBF19B980000000) #5, !dbg !16
  %92 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i6, float %86, float 0xBFBF19B980000000) #5, !dbg !16
  %.011.i8 = select i1 %.not2.i7, float %92, float %91, !dbg !16
  %93 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not3.i9 = icmp eq i32 %93, 0, !dbg !16
  %94 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i8, float %86, float 0x3FC1E52AA0000000) #5, !dbg !16
  %95 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i8, float %86, float 0x3FC1E52AA0000000) #5, !dbg !16
  %.012.i10 = select i1 %.not3.i9, float %95, float %94, !dbg !16
  %96 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not4.i11 = icmp eq i32 %96, 0, !dbg !16
  %97 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i10, float %86, float 0xBFC55B1720000000) #5, !dbg !16
  %98 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i10, float %86, float 0xBFC55B1720000000) #5, !dbg !16
  %.09.i12 = select i1 %.not4.i11, float %98, float %97, !dbg !16
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not5.i13 = icmp eq i32 %99, 0, !dbg !16
  %100 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i12, float %86, float 0x3FC99DA160000000) #5, !dbg !16
  %101 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i12, float %86, float 0x3FC99DA160000000) #5, !dbg !16
  %.05.i14 = select i1 %.not5.i13, float %101, float %100, !dbg !16
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not6.i15 = icmp eq i32 %102, 0, !dbg !16
  %103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %86, float 0xBFCFFFE440000000) #5, !dbg !16
  %104 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %86, float 0xBFCFFFE440000000) #5, !dbg !16
  %.01.i16 = select i1 %.not6.i15, float %104, float %103, !dbg !16
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not7.i17 = icmp eq i32 %105, 0, !dbg !16
  %106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i16, float %86, float 0x3FD5554F00000000) #5, !dbg !16
  %107 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i16, float %86, float 0x3FD5554F00000000) #5, !dbg !16
  %.0.i18 = select i1 %.not7.i17, float %107, float %106, !dbg !16
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not8.i19 = icmp eq i32 %108, 0, !dbg !16
  %109 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i18, float %86, float -5.000000e-01) #5, !dbg !16
  %110 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i18, float %86, float -5.000000e-01) #5, !dbg !16
  %.07.i20 = select i1 %.not8.i19, float %110, float %109, !dbg !16
  %111 = fmul float %86, %.07.i20, !dbg !16
  %112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not9.i21 = icmp eq i32 %112, 0, !dbg !16
  %113 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %111, float %86, float %86) #5, !dbg !16
  %114 = tail call float @llvm.nvvm.fma.rn.f(float %111, float %86, float %86) #5, !dbg !16
  %.06.i22 = select i1 %.not9.i21, float %114, float %113, !dbg !16
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not10.i23 = icmp eq i32 %115, 0, !dbg !16
  %116 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #5, !dbg !16
  %117 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #5, !dbg !16
  %.04.i24 = select i1 %.not10.i23, float %117, float %116, !dbg !16
  %118 = icmp ugt i32 %77, 2139095039, !dbg !16
  br i1 %118, label %__nv_fmaf_rn.exit.i.i27, label %__nv_logf.exit30, !dbg !16

__nv_fmaf_rn.exit.i.i27:                          ; preds = %__nv_logf.exit
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not11.i28 = icmp eq i32 %119, 0, !dbg !16
  %120 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !16
  %121 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !16
  %.03.i29 = select i1 %.not11.i28, float %121, float %120, !dbg !16
  br label %__nv_logf.exit30, !dbg !16

__nv_logf.exit30:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i27
  %r.i.0.i25 = phi float [ %.03.i29, %__nv_fmaf_rn.exit.i.i27 ], [ %.04.i24, %__nv_logf.exit ], !dbg !16
  %122 = fcmp olt float %26, 0x3810000000000000, !dbg !16
  %123 = fmul float %26, 0x4160000000000000, !dbg !16
  %.02.i31 = select i1 %122, float %123, float %26, !dbg !16
  %i.i.0.i32 = select i1 %122, float -2.300000e+01, float 0.000000e+00, !dbg !16
  %124 = bitcast float %.02.i31 to i32, !dbg !16
  %125 = add i32 %124, -1059760811, !dbg !16
  %126 = and i32 %125, -8388608, !dbg !16
  %127 = sub i32 %124, %126, !dbg !16
  %128 = bitcast i32 %127 to float, !dbg !16
  %129 = sitofp i32 %126 to float, !dbg !16
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not.i33 = icmp eq i32 %130, 0, !dbg !16
  %131 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %129, float 0x3E80000000000000, float %i.i.0.i32) #5, !dbg !16
  %132 = tail call float @llvm.nvvm.fma.rn.f(float %129, float 0x3E80000000000000, float %i.i.0.i32) #5, !dbg !16
  %.08.i34 = select i1 %.not.i33, float %132, float %131, !dbg !16
  %133 = fadd float %128, -1.000000e+00, !dbg !16
  %134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not1.i35 = icmp eq i32 %134, 0, !dbg !16
  %135 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %133, float 0x3FC2073EC0000000) #5, !dbg !16
  %136 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %133, float 0x3FC2073EC0000000) #5, !dbg !16
  %.010.i36 = select i1 %.not1.i35, float %136, float %135, !dbg !16
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not2.i37 = icmp eq i32 %137, 0, !dbg !16
  %138 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i36, float %133, float 0xBFBF19B980000000) #5, !dbg !16
  %139 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i36, float %133, float 0xBFBF19B980000000) #5, !dbg !16
  %.011.i38 = select i1 %.not2.i37, float %139, float %138, !dbg !16
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not3.i39 = icmp eq i32 %140, 0, !dbg !16
  %141 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i38, float %133, float 0x3FC1E52AA0000000) #5, !dbg !16
  %142 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i38, float %133, float 0x3FC1E52AA0000000) #5, !dbg !16
  %.012.i40 = select i1 %.not3.i39, float %142, float %141, !dbg !16
  %143 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not4.i41 = icmp eq i32 %143, 0, !dbg !16
  %144 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i40, float %133, float 0xBFC55B1720000000) #5, !dbg !16
  %145 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i40, float %133, float 0xBFC55B1720000000) #5, !dbg !16
  %.09.i42 = select i1 %.not4.i41, float %145, float %144, !dbg !16
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not5.i43 = icmp eq i32 %146, 0, !dbg !16
  %147 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i42, float %133, float 0x3FC99DA160000000) #5, !dbg !16
  %148 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i42, float %133, float 0x3FC99DA160000000) #5, !dbg !16
  %.05.i44 = select i1 %.not5.i43, float %148, float %147, !dbg !16
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not6.i45 = icmp eq i32 %149, 0, !dbg !16
  %150 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i44, float %133, float 0xBFCFFFE440000000) #5, !dbg !16
  %151 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i44, float %133, float 0xBFCFFFE440000000) #5, !dbg !16
  %.01.i46 = select i1 %.not6.i45, float %151, float %150, !dbg !16
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not7.i47 = icmp eq i32 %152, 0, !dbg !16
  %153 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i46, float %133, float 0x3FD5554F00000000) #5, !dbg !16
  %154 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i46, float %133, float 0x3FD5554F00000000) #5, !dbg !16
  %.0.i48 = select i1 %.not7.i47, float %154, float %153, !dbg !16
  %155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not8.i49 = icmp eq i32 %155, 0, !dbg !16
  %156 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i48, float %133, float -5.000000e-01) #5, !dbg !16
  %157 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i48, float %133, float -5.000000e-01) #5, !dbg !16
  %.07.i50 = select i1 %.not8.i49, float %157, float %156, !dbg !16
  %158 = fmul float %133, %.07.i50, !dbg !16
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not9.i51 = icmp eq i32 %159, 0, !dbg !16
  %160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %158, float %133, float %133) #5, !dbg !16
  %161 = tail call float @llvm.nvvm.fma.rn.f(float %158, float %133, float %133) #5, !dbg !16
  %.06.i52 = select i1 %.not9.i51, float %161, float %160, !dbg !16
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not10.i53 = icmp eq i32 %162, 0, !dbg !16
  %163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i34, float 0x3FE62E4300000000, float %.06.i52) #5, !dbg !16
  %164 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i34, float 0x3FE62E4300000000, float %.06.i52) #5, !dbg !16
  %.04.i54 = select i1 %.not10.i53, float %164, float %163, !dbg !16
  %165 = icmp ugt i32 %124, 2139095039, !dbg !16
  br i1 %165, label %__nv_fmaf_rn.exit.i.i57, label %__nv_logf.exit60, !dbg !16

__nv_fmaf_rn.exit.i.i57:                          ; preds = %__nv_logf.exit30
  %166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not11.i58 = icmp eq i32 %166, 0, !dbg !16
  %167 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !16
  %168 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !16
  %.03.i59 = select i1 %.not11.i58, float %168, float %167, !dbg !16
  br label %__nv_logf.exit60, !dbg !16

__nv_logf.exit60:                                 ; preds = %__nv_logf.exit30, %__nv_fmaf_rn.exit.i.i57
  %r.i.0.i55 = phi float [ %.03.i59, %__nv_fmaf_rn.exit.i.i57 ], [ %.04.i54, %__nv_logf.exit30 ], !dbg !16
  %169 = fcmp olt float %27, 0x3810000000000000, !dbg !16
  %170 = fmul float %27, 0x4160000000000000, !dbg !16
  %.02.i61 = select i1 %169, float %170, float %27, !dbg !16
  %i.i.0.i62 = select i1 %169, float -2.300000e+01, float 0.000000e+00, !dbg !16
  %171 = bitcast float %.02.i61 to i32, !dbg !16
  %172 = add i32 %171, -1059760811, !dbg !16
  %173 = and i32 %172, -8388608, !dbg !16
  %174 = sub i32 %171, %173, !dbg !16
  %175 = bitcast i32 %174 to float, !dbg !16
  %176 = sitofp i32 %173 to float, !dbg !16
  %177 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not.i63 = icmp eq i32 %177, 0, !dbg !16
  %178 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %176, float 0x3E80000000000000, float %i.i.0.i62) #5, !dbg !16
  %179 = tail call float @llvm.nvvm.fma.rn.f(float %176, float 0x3E80000000000000, float %i.i.0.i62) #5, !dbg !16
  %.08.i64 = select i1 %.not.i63, float %179, float %178, !dbg !16
  %180 = fadd float %175, -1.000000e+00, !dbg !16
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not1.i65 = icmp eq i32 %181, 0, !dbg !16
  %182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %180, float 0x3FC2073EC0000000) #5, !dbg !16
  %183 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %180, float 0x3FC2073EC0000000) #5, !dbg !16
  %.010.i66 = select i1 %.not1.i65, float %183, float %182, !dbg !16
  %184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not2.i67 = icmp eq i32 %184, 0, !dbg !16
  %185 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i66, float %180, float 0xBFBF19B980000000) #5, !dbg !16
  %186 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i66, float %180, float 0xBFBF19B980000000) #5, !dbg !16
  %.011.i68 = select i1 %.not2.i67, float %186, float %185, !dbg !16
  %187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not3.i69 = icmp eq i32 %187, 0, !dbg !16
  %188 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i68, float %180, float 0x3FC1E52AA0000000) #5, !dbg !16
  %189 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i68, float %180, float 0x3FC1E52AA0000000) #5, !dbg !16
  %.012.i70 = select i1 %.not3.i69, float %189, float %188, !dbg !16
  %190 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not4.i71 = icmp eq i32 %190, 0, !dbg !16
  %191 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i70, float %180, float 0xBFC55B1720000000) #5, !dbg !16
  %192 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i70, float %180, float 0xBFC55B1720000000) #5, !dbg !16
  %.09.i72 = select i1 %.not4.i71, float %192, float %191, !dbg !16
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not5.i73 = icmp eq i32 %193, 0, !dbg !16
  %194 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i72, float %180, float 0x3FC99DA160000000) #5, !dbg !16
  %195 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i72, float %180, float 0x3FC99DA160000000) #5, !dbg !16
  %.05.i74 = select i1 %.not5.i73, float %195, float %194, !dbg !16
  %196 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not6.i75 = icmp eq i32 %196, 0, !dbg !16
  %197 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i74, float %180, float 0xBFCFFFE440000000) #5, !dbg !16
  %198 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i74, float %180, float 0xBFCFFFE440000000) #5, !dbg !16
  %.01.i76 = select i1 %.not6.i75, float %198, float %197, !dbg !16
  %199 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not7.i77 = icmp eq i32 %199, 0, !dbg !16
  %200 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i76, float %180, float 0x3FD5554F00000000) #5, !dbg !16
  %201 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i76, float %180, float 0x3FD5554F00000000) #5, !dbg !16
  %.0.i78 = select i1 %.not7.i77, float %201, float %200, !dbg !16
  %202 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not8.i79 = icmp eq i32 %202, 0, !dbg !16
  %203 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i78, float %180, float -5.000000e-01) #5, !dbg !16
  %204 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i78, float %180, float -5.000000e-01) #5, !dbg !16
  %.07.i80 = select i1 %.not8.i79, float %204, float %203, !dbg !16
  %205 = fmul float %180, %.07.i80, !dbg !16
  %206 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not9.i81 = icmp eq i32 %206, 0, !dbg !16
  %207 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %205, float %180, float %180) #5, !dbg !16
  %208 = tail call float @llvm.nvvm.fma.rn.f(float %205, float %180, float %180) #5, !dbg !16
  %.06.i82 = select i1 %.not9.i81, float %208, float %207, !dbg !16
  %209 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not10.i83 = icmp eq i32 %209, 0, !dbg !16
  %210 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #5, !dbg !16
  %211 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #5, !dbg !16
  %.04.i84 = select i1 %.not10.i83, float %211, float %210, !dbg !16
  %212 = icmp ugt i32 %171, 2139095039, !dbg !16
  br i1 %212, label %__nv_fmaf_rn.exit.i.i87, label %__nv_logf.exit90, !dbg !16

__nv_fmaf_rn.exit.i.i87:                          ; preds = %__nv_logf.exit60
  %213 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not11.i88 = icmp eq i32 %213, 0, !dbg !16
  %214 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !16
  %215 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !16
  %.03.i89 = select i1 %.not11.i88, float %215, float %214, !dbg !16
  br label %__nv_logf.exit90, !dbg !16

__nv_logf.exit90:                                 ; preds = %__nv_logf.exit60, %__nv_fmaf_rn.exit.i.i87
  %r.i.0.i85 = phi float [ %.03.i89, %__nv_fmaf_rn.exit.i.i87 ], [ %.04.i84, %__nv_logf.exit60 ], !dbg !16
  %216 = fcmp oeq float %.02.i31, 0.000000e+00, !dbg !16
  %r.i.1.i56 = select i1 %216, float 0xFFF0000000000000, float %r.i.0.i55, !dbg !16
  %217 = fcmp oeq float %.02.i1, 0.000000e+00, !dbg !16
  %r.i.1.i26 = select i1 %217, float 0xFFF0000000000000, float %r.i.0.i25, !dbg !16
  %218 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !16
  %r.i.1.i = select i1 %218, float 0xFFF0000000000000, float %r.i.0.i, !dbg !16
  %219 = bitcast i32 %23 to float, !dbg !14
  %220 = extractvalue { i32, i32, i32, i32 } %22, 3, !dbg !13
  %221 = bitcast i32 %220 to float, !dbg !13
  %222 = extractvalue { i32, i32, i32, i32 } %22, 2, !dbg !13
  %223 = bitcast i32 %222 to float, !dbg !13
  %224 = extractvalue { i32, i32, i32, i32 } %22, 1, !dbg !13
  %225 = bitcast i32 %224 to float, !dbg !13
  %226 = extractvalue { i32, i32, i32, i32 } %22, 0, !dbg !13
  %227 = bitcast i32 %226 to float, !dbg !13
  %228 = lshr i32 %7, 5, !dbg !9
  %229 = and i32 %7, 31, !dbg !9
  %230 = fcmp oeq float %.02.i61, 0.000000e+00, !dbg !16
  %r.i.1.i86 = select i1 %230, float 0xFFF0000000000000, float %r.i.0.i85, !dbg !16
  %231 = fmul float %r.i.1.i, %17, !dbg !17
  %232 = fmul float %r.i.1.i26, %18, !dbg !17
  %233 = fmul float %r.i.1.i56, %19, !dbg !17
  %234 = fmul float %r.i.1.i86, %20, !dbg !17
  %235 = fadd float %231, %232, !dbg !18
  %236 = fadd float %235, %233, !dbg !18
  %237 = fadd float %236, %234, !dbg !18
  %238 = bitcast float %237 to i32, !dbg !23
  %239 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %238, i32 16, i32 31), !dbg !23
  %240 = bitcast i32 %239 to float, !dbg !23
  %241 = fadd float %237, %240, !dbg !18
  %242 = bitcast float %241 to i32, !dbg !23
  %243 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %242, i32 8, i32 31), !dbg !23
  %244 = bitcast i32 %243 to float, !dbg !23
  %245 = fadd float %241, %244, !dbg !18
  %246 = bitcast float %245 to i32, !dbg !23
  %247 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %246, i32 4, i32 31), !dbg !23
  %248 = bitcast i32 %247 to float, !dbg !23
  %249 = fadd float %245, %248, !dbg !18
  %250 = bitcast float %249 to i32, !dbg !23
  %251 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %250, i32 2, i32 31), !dbg !23
  %252 = bitcast i32 %251 to float, !dbg !23
  %253 = fadd float %249, %252, !dbg !18
  %254 = bitcast float %253 to i32, !dbg !23
  %255 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %254, i32 1, i32 31), !dbg !23
  %256 = bitcast i32 %255 to float, !dbg !23
  %257 = fadd float %253, %256, !dbg !18
  %258 = and i32 %228, 3, !dbg !23
  %259 = icmp eq i32 %229, 0, !dbg !23
  %260 = zext nneg i32 %258 to i64, !dbg !23
  %261 = getelementptr float, ptr addrspace(3) @global_smem, i64 %260, !dbg !23
  %262 = bitcast float %257 to <1 x i32>, !dbg !23
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %261, <1 x i32> %262, i1 %259) #5, !dbg !23
  tail call void @llvm.nvvm.barrier0(), !dbg !23
  %263 = icmp slt i32 %7, 4, !dbg !23
  %264 = sext i32 %7 to i64, !dbg !23
  %265 = getelementptr float, ptr addrspace(3) @global_smem, i64 %264, !dbg !23
  %266 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %265, i1 %263) #5, !dbg !23
  %267 = bitcast i32 %266 to float, !dbg !23
  %268 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %266, i32 2, i32 31), !dbg !23
  %269 = bitcast i32 %268 to float, !dbg !23
  %270 = fadd float %267, %269, !dbg !18
  %271 = bitcast float %270 to i32, !dbg !23
  %272 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %271, i32 1, i32 31), !dbg !23
  %273 = bitcast i32 %272 to float, !dbg !23
  %274 = fadd float %270, %273, !dbg !18
  %275 = and i32 %7, 3, !dbg !23
  %276 = icmp eq i32 %275, 0, !dbg !23
  %277 = and i1 %263, %276, !dbg !23
  %278 = bitcast float %274 to <1 x i32>, !dbg !23
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %265, <1 x i32> %278, i1 %277) #5, !dbg !23
  tail call void @llvm.nvvm.barrier0(), !dbg !23
  %279 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !23
  %280 = fadd float %279, 0.000000e+00, !dbg !24
  %281 = fsub float 0.000000e+00, %227, !dbg !28
  %282 = fsub float 0.000000e+00, %225, !dbg !28
  %283 = fsub float 0.000000e+00, %223, !dbg !28
  %284 = fsub float 0.000000e+00, %221, !dbg !28
  tail call void @llvm.nvvm.barrier0(), !dbg !29
  %285 = fadd float %281, %282, !dbg !31
  %286 = fadd float %283, %285, !dbg !31
  %287 = fadd float %284, %286, !dbg !31
  %288 = bitcast float %287 to i32, !dbg !29
  %289 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %288, i32 16, i32 31), !dbg !29
  %290 = bitcast i32 %289 to float, !dbg !29
  %291 = fadd float %287, %290, !dbg !31
  %292 = bitcast float %291 to i32, !dbg !29
  %293 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %292, i32 8, i32 31), !dbg !29
  %294 = bitcast i32 %293 to float, !dbg !29
  %295 = fadd float %291, %294, !dbg !31
  %296 = bitcast float %295 to i32, !dbg !29
  %297 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %296, i32 4, i32 31), !dbg !29
  %298 = bitcast i32 %297 to float, !dbg !29
  %299 = fadd float %295, %298, !dbg !31
  %300 = bitcast float %299 to i32, !dbg !29
  %301 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %300, i32 2, i32 31), !dbg !29
  %302 = bitcast i32 %301 to float, !dbg !29
  %303 = fadd float %299, %302, !dbg !31
  %304 = bitcast float %303 to i32, !dbg !29
  %305 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %304, i32 1, i32 31), !dbg !29
  %306 = bitcast i32 %305 to float, !dbg !29
  %307 = fadd float %303, %306, !dbg !31
  %308 = bitcast float %307 to <1 x i32>, !dbg !29
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %261, <1 x i32> %308, i1 %259) #5, !dbg !29
  tail call void @llvm.nvvm.barrier0(), !dbg !29
  %309 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %265, i1 %263) #5, !dbg !29
  %310 = bitcast i32 %309 to float, !dbg !29
  %311 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %309, i32 2, i32 31), !dbg !29
  %312 = bitcast i32 %311 to float, !dbg !29
  %313 = fadd float %310, %312, !dbg !31
  %314 = bitcast float %313 to i32, !dbg !29
  %315 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %314, i32 1, i32 31), !dbg !29
  %316 = bitcast i32 %315 to float, !dbg !29
  %317 = fadd float %313, %316, !dbg !31
  %318 = bitcast float %317 to <1 x i32>, !dbg !29
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %265, <1 x i32> %318, i1 %277) #5, !dbg !29
  tail call void @llvm.nvvm.barrier0(), !dbg !29
  %319 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !29
  %320 = fadd float %319, 0.000000e+00, !dbg !32
  %321 = tail call float @llvm.nvvm.div.full(float %320, float 5.120000e+02), !dbg !34
  %322 = fsub float 0.000000e+00, %280, !dbg !35
  %323 = fsub float %321, %322, !dbg !36
  %324 = fmul float %323, 0x3F647AE140000000, !dbg !37
  %325 = tail call float @llvm.nvvm.div.full(float %219, float 4.608000e+03), !dbg !38
  %326 = fmul float %325, 0x3F447AE140000000, !dbg !39
  %327 = fadd float %324, %326, !dbg !40
  tail call void @llvm.nvvm.barrier0(), !dbg !41
  %328 = and i32 %7, 127, !dbg !42
  %329 = icmp eq i32 %328, 0, !dbg !42
  %330 = bitcast float %327 to i32, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %330, ptr addrspace(1) %0, i1 %329) #5, !dbg !42
  ret void, !dbg !43
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.div.full(float, float) #3

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cewo67cbls3o6pndqngfbei3khtheqshhif4elju3nw5ygcunc4x.py", directory: "results/memory_optimized_experiment/torchinductor_cache_0/ew")
!4 = !{ptr @triton_per_fused__to_copy_add_gt_log_mean_mse_loss_mul_neg_sub_sum_where_6, !"reqntidx", i32 128}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_per_fused__to_copy_add_gt_log_mean_mse_loss_mul_neg_sub_sum_where_6", linkageName: "triton_per_fused__to_copy_add_gt_log_mean_mse_loss_mul_neg_sub_sum_where_6", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 28, column: 28, scope: !6)
!10 = !DILocation(line: 34, column: 30, scope: !6)
!11 = !DILocation(line: 34, column: 37, scope: !6)
!12 = !DILocation(line: 35, column: 30, scope: !6)
!13 = !DILocation(line: 35, column: 37, scope: !6)
!14 = !DILocation(line: 36, column: 20, scope: !6)
!15 = !DILocation(line: 39, column: 18, scope: !6)
!16 = !DILocation(line: 40, column: 23, scope: !6)
!17 = !DILocation(line: 41, column: 18, scope: !6)
!18 = !DILocation(line: 256, column: 15, scope: !19, inlinedAt: !22)
!19 = distinct !DILexicalBlockFile(scope: !21, file: !20, discriminator: 0)
!20 = !DIFile(filename: "standard.py", directory: "/home/utka/proj/evs/vlm/lib/python3.12/site-packages/triton/language")
!21 = distinct !DILexicalBlockFile(scope: !6, file: !20, discriminator: 0)
!22 = !DILocation(line: 43, column: 57, scope: !6)
!23 = !DILocation(line: 286, column: 36, scope: !21, inlinedAt: !22)
!24 = !DILocation(line: 57, column: 15, scope: !25, inlinedAt: !27)
!25 = distinct !DILexicalBlockFile(scope: !6, file: !26, discriminator: 0)
!26 = !DIFile(filename: "triton_helpers.py", directory: "/home/utka/proj/evs/vlm/lib/python3.12/site-packages/torch/_inductor/runtime")
!27 = !DILocation(line: 43, column: 44, scope: !6)
!28 = !DILocation(line: 44, column: 12, scope: !6)
!29 = !DILocation(line: 286, column: 36, scope: !21, inlinedAt: !30)
!30 = !DILocation(line: 46, column: 59, scope: !6)
!31 = !DILocation(line: 256, column: 15, scope: !19, inlinedAt: !30)
!32 = !DILocation(line: 57, column: 15, scope: !25, inlinedAt: !33)
!33 = !DILocation(line: 46, column: 45, scope: !6)
!34 = !DILocation(line: 48, column: 21, scope: !6)
!35 = !DILocation(line: 51, column: 13, scope: !6)
!36 = !DILocation(line: 53, column: 20, scope: !6)
!37 = !DILocation(line: 55, column: 20, scope: !6)
!38 = !DILocation(line: 57, column: 21, scope: !6)
!39 = !DILocation(line: 59, column: 20, scope: !6)
!40 = !DILocation(line: 60, column: 20, scope: !6)
!41 = !DILocation(line: 61, column: 4, scope: !6)
!42 = !DILocation(line: 62, column: 63, scope: !6)
!43 = !DILocation(line: 62, column: 4, scope: !6)
