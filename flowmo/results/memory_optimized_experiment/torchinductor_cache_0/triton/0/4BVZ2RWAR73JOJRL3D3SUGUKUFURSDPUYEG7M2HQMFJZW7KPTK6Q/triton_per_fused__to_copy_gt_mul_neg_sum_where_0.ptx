//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_per_fused__to_copy_gt_mul_neg_sum_where_0 // -- Begin function triton_per_fused__to_copy_gt_mul_neg_sum_where_0
                                        // @triton_per_fused__to_copy_gt_mul_neg_sum_where_0
.visible .entry triton_per_fused__to_copy_gt_mul_neg_sum_where_0(
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_gt_mul_neg_sum_where_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_gt_mul_neg_sum_where_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_gt_mul_neg_sum_where_0_param_2,
	.param .u32 triton_per_fused__to_copy_gt_mul_neg_sum_where_0_param_3,
	.param .u32 triton_per_fused__to_copy_gt_mul_neg_sum_where_0_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_gt_mul_neg_sum_where_0_param_5
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<7>;
	.reg .b16 	%rs<3>;
	.reg .b32 	%r<28>;
	.reg .f32 	%f<2>;
	.reg .b64 	%rd<34>;
	.loc	1 18 0                          // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:18:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_per_fused__to_copy_gt_mul_neg_sum_where_0_param_0];
	ld.param.u64 	%rd7, [triton_per_fused__to_copy_gt_mul_neg_sum_where_0_param_1];
$L__tmp0:
	.loc	1 24 28                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:24:28
	mov.u32 	%r1, %ctaid.x;
	.loc	1 26 21                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:26:21
	setp.lt.s32 	%p4, %r1, 512;
	ld.param.u64 	%rd8, [triton_per_fused__to_copy_gt_mul_neg_sum_where_0_param_2];
	.loc	1 27 38                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:27:38
	mov.u32 	%r2, %tid.x;
	and.b32  	%r3, %r2, 15;
	.loc	1 29 25                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:29:25
	setp.lt.u32 	%p2, %r3, 9;
	.loc	1 34 32                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:34:32
	shl.b32 	%r4, %r3, 1;
	.loc	1 34 49                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:34:49
	shr.u32 	%r5, %r1, 31;
	add.s32 	%r6, %r1, %r5;
	.loc	1 34 39                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:34:39
	shl.b32 	%r7, %r6, 3;
	and.b32  	%r8, %r7, -16;
	add.s32 	%r9, %r8, %r1;
	.loc	1 34 56                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:34:56
	add.s32 	%r10, %r9, %r4;
	.loc	1 34 30                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:34:30
	mul.wide.s32 	%rd9, %r10, 2;
	add.s64 	%rd1, %rd6, %rd9;
	.loc	1 34 75                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:34:75
	and.pred  	%p1, %p4, %p2;
	mov.b16 	%rs2, 0;
	.loc	1 34 67                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:34:67
	// begin inline asm
	mov.u16 %rs1, %rs2;
	@%p1 ld.global.b16 { %rs1 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 35 30                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:35:30
	mul.wide.u32 	%rd10, %r3, 8;
	add.s64 	%rd3, %rd7, %rd10;
	.loc	1 35 37                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:35:37
	// begin inline asm
	mov.u64 %rd2, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd2 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 37 18                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:37:18
	cvt.f32.bf16 	%f1, %rs1;
	setp.gt.f32 	%p5, %f1, 0f00000000;
	.loc	1 45 21                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:45:21
	cvt.s64.s32 	%rd11, %rd2;
	.loc	1 47 45                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:47:45
	selp.b64 	%rd12, %rd11, 0, %p5;
	selp.b64 	%rd13, %rd12, 0, %p1;
$L__tmp1:
	.loc	2 286 36                        // standard.py:286:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r11}, %rd13; }
	cvt.u32.u64 	%r12, %rd13;
	shfl.sync.bfly.b32	%r13, %r12, 8, 31, -1;
	shfl.sync.bfly.b32	%r14, %r11, 8, 31, -1;
	cvt.u64.u32 	%rd14, %r13;
	cvt.u64.u32 	%rd15, %r14;
	shl.b64 	%rd16, %rd15, 32;
	or.b64  	%rd17, %rd14, %rd16;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd18, %rd13, %rd17;
	.loc	2 286 36                        // standard.py:286:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r15}, %rd18; }
	cvt.u32.u64 	%r16, %rd18;
	shfl.sync.bfly.b32	%r17, %r16, 4, 31, -1;
	shfl.sync.bfly.b32	%r18, %r15, 4, 31, -1;
	cvt.u64.u32 	%rd19, %r17;
	cvt.u64.u32 	%rd20, %r18;
	shl.b64 	%rd21, %rd20, 32;
	or.b64  	%rd22, %rd19, %rd21;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd23, %rd18, %rd22;
	.loc	2 286 36                        // standard.py:286:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r19}, %rd23; }
	cvt.u32.u64 	%r20, %rd23;
	shfl.sync.bfly.b32	%r21, %r20, 2, 31, -1;
	shfl.sync.bfly.b32	%r22, %r19, 2, 31, -1;
	cvt.u64.u32 	%rd24, %r21;
	cvt.u64.u32 	%rd25, %r22;
	shl.b64 	%rd26, %rd25, 32;
	or.b64  	%rd27, %rd24, %rd26;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd28, %rd23, %rd27;
	.loc	2 286 36                        // standard.py:286:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r23}, %rd28; }
	cvt.u32.u64 	%r24, %rd28;
	shfl.sync.bfly.b32	%r25, %r24, 1, 31, -1;
	shfl.sync.bfly.b32	%r26, %r23, 1, 31, -1;
	cvt.u64.u32 	%rd29, %r25;
	cvt.u64.u32 	%rd30, %r26;
	shl.b64 	%rd31, %rd30, 32;
	or.b64  	%rd32, %rd29, %rd31;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd4, %rd28, %rd32;
$L__tmp2:
	.loc	1 49 25                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:49:25
	mul.wide.s32 	%rd33, %r1, 8;
	add.s64 	%rd5, %rd8, %rd33;
	.loc	1 49 37                         // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:49:37
	and.b32  	%r27, %r2, 63;
	setp.eq.s32 	%p6, %r27, 0;
	and.pred  	%p3, %p4, %p6;
	// begin inline asm
	@%p3 st.global.b64 [ %rd5 + 0 ], { %rd4 };
	// end inline asm
	.loc	1 49 4                          // cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py:49:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "results/memory_optimized_experiment/torchinductor_cache_0/nz/cnz6sodu47e5mqrswyjz6y7cx62vuydwyeebqkndjolroizhugqd.py"
	.file	2 "/home/utka/proj/evs/vlm/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 236                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 110
.b8 122
.b8 54
.b8 115
.b8 111
.b8 100
.b8 117
.b8 52
.b8 55
.b8 101
.b8 53
.b8 109
.b8 113
.b8 114
.b8 115
.b8 119
.b8 121
.b8 106
.b8 122
.b8 54
.b8 121
.b8 55
.b8 99
.b8 120
.b8 54
.b8 50
.b8 118
.b8 117
.b8 121
.b8 100
.b8 119
.b8 121
.b8 101
.b8 101
.b8 98
.b8 113
.b8 107
.b8 110
.b8 100
.b8 106
.b8 111
.b8 108
.b8 114
.b8 111
.b8 105
.b8 122
.b8 104
.b8 117
.b8 103
.b8 113
.b8 100
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 114                                 // DW_AT_comp_dir
.b8 101
.b8 115
.b8 117
.b8 108
.b8 116
.b8 115
.b8 47
.b8 109
.b8 101
.b8 109
.b8 111
.b8 114
.b8 121
.b8 95
.b8 111
.b8 112
.b8 116
.b8 105
.b8 109
.b8 105
.b8 122
.b8 101
.b8 100
.b8 95
.b8 101
.b8 120
.b8 112
.b8 101
.b8 114
.b8 105
.b8 109
.b8 101
.b8 110
.b8 116
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 95
.b8 48
.b8 47
.b8 110
.b8 122
.b8 0
.b8 2                                   // Abbrev [2] 0x8e:0x33 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 103
.b8 116
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 110
.b8 101
.b8 103
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 119
.b8 104
.b8 101
.b8 114
.b8 101
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xc1:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 142                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xd6:0x18 DW_TAG_inlined_subroutine
.b32 142                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
